//------------------------------------------------------------------------------
// <auto-generated>
//     這段程式碼是由工具產生的。
//     執行階段版本:4.0.30319.42000
//
//     對這個檔案所做的變更可能會造成錯誤的行為，而且如果重新產生程式碼，
//     變更將會遺失。
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace SimulatorApplication {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("RecipeTypeDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class RecipeTypeDataSet : global::System.Data.DataSet {
        
        private CassetteRecipeDataTable tableCassetteRecipe;
        
        private CassetteWaferDataTable tableCassetteWafer;
        
        private NewrecipeDataTable tableNewrecipe;
        
        private recipeDataTable tablerecipe;
        
        private TemCassetteWaferDataTable tableTemCassetteWafer;
        
        private TemNewrecipeDataTable tableTemNewrecipe;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public RecipeTypeDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected RecipeTypeDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["CassetteRecipe"] != null)) {
                    base.Tables.Add(new CassetteRecipeDataTable(ds.Tables["CassetteRecipe"]));
                }
                if ((ds.Tables["CassetteWafer"] != null)) {
                    base.Tables.Add(new CassetteWaferDataTable(ds.Tables["CassetteWafer"]));
                }
                if ((ds.Tables["Newrecipe"] != null)) {
                    base.Tables.Add(new NewrecipeDataTable(ds.Tables["Newrecipe"]));
                }
                if ((ds.Tables["recipe"] != null)) {
                    base.Tables.Add(new recipeDataTable(ds.Tables["recipe"]));
                }
                if ((ds.Tables["TemCassetteWafer"] != null)) {
                    base.Tables.Add(new TemCassetteWaferDataTable(ds.Tables["TemCassetteWafer"]));
                }
                if ((ds.Tables["TemNewrecipe"] != null)) {
                    base.Tables.Add(new TemNewrecipeDataTable(ds.Tables["TemNewrecipe"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CassetteRecipeDataTable CassetteRecipe {
            get {
                return this.tableCassetteRecipe;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CassetteWaferDataTable CassetteWafer {
            get {
                return this.tableCassetteWafer;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public NewrecipeDataTable Newrecipe {
            get {
                return this.tableNewrecipe;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public recipeDataTable recipe {
            get {
                return this.tablerecipe;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TemCassetteWaferDataTable TemCassetteWafer {
            get {
                return this.tableTemCassetteWafer;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TemNewrecipeDataTable TemNewrecipe {
            get {
                return this.tableTemNewrecipe;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            RecipeTypeDataSet cln = ((RecipeTypeDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["CassetteRecipe"] != null)) {
                    base.Tables.Add(new CassetteRecipeDataTable(ds.Tables["CassetteRecipe"]));
                }
                if ((ds.Tables["CassetteWafer"] != null)) {
                    base.Tables.Add(new CassetteWaferDataTable(ds.Tables["CassetteWafer"]));
                }
                if ((ds.Tables["Newrecipe"] != null)) {
                    base.Tables.Add(new NewrecipeDataTable(ds.Tables["Newrecipe"]));
                }
                if ((ds.Tables["recipe"] != null)) {
                    base.Tables.Add(new recipeDataTable(ds.Tables["recipe"]));
                }
                if ((ds.Tables["TemCassetteWafer"] != null)) {
                    base.Tables.Add(new TemCassetteWaferDataTable(ds.Tables["TemCassetteWafer"]));
                }
                if ((ds.Tables["TemNewrecipe"] != null)) {
                    base.Tables.Add(new TemNewrecipeDataTable(ds.Tables["TemNewrecipe"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableCassetteRecipe = ((CassetteRecipeDataTable)(base.Tables["CassetteRecipe"]));
            if ((initTable == true)) {
                if ((this.tableCassetteRecipe != null)) {
                    this.tableCassetteRecipe.InitVars();
                }
            }
            this.tableCassetteWafer = ((CassetteWaferDataTable)(base.Tables["CassetteWafer"]));
            if ((initTable == true)) {
                if ((this.tableCassetteWafer != null)) {
                    this.tableCassetteWafer.InitVars();
                }
            }
            this.tableNewrecipe = ((NewrecipeDataTable)(base.Tables["Newrecipe"]));
            if ((initTable == true)) {
                if ((this.tableNewrecipe != null)) {
                    this.tableNewrecipe.InitVars();
                }
            }
            this.tablerecipe = ((recipeDataTable)(base.Tables["recipe"]));
            if ((initTable == true)) {
                if ((this.tablerecipe != null)) {
                    this.tablerecipe.InitVars();
                }
            }
            this.tableTemCassetteWafer = ((TemCassetteWaferDataTable)(base.Tables["TemCassetteWafer"]));
            if ((initTable == true)) {
                if ((this.tableTemCassetteWafer != null)) {
                    this.tableTemCassetteWafer.InitVars();
                }
            }
            this.tableTemNewrecipe = ((TemNewrecipeDataTable)(base.Tables["TemNewrecipe"]));
            if ((initTable == true)) {
                if ((this.tableTemNewrecipe != null)) {
                    this.tableTemNewrecipe.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "RecipeTypeDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/RecipeTypeDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableCassetteRecipe = new CassetteRecipeDataTable();
            base.Tables.Add(this.tableCassetteRecipe);
            this.tableCassetteWafer = new CassetteWaferDataTable();
            base.Tables.Add(this.tableCassetteWafer);
            this.tableNewrecipe = new NewrecipeDataTable();
            base.Tables.Add(this.tableNewrecipe);
            this.tablerecipe = new recipeDataTable();
            base.Tables.Add(this.tablerecipe);
            this.tableTemCassetteWafer = new TemCassetteWaferDataTable();
            base.Tables.Add(this.tableTemCassetteWafer);
            this.tableTemNewrecipe = new TemNewrecipeDataTable();
            base.Tables.Add(this.tableTemNewrecipe);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeCassetteRecipe() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeCassetteWafer() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeNewrecipe() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializerecipe() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeTemCassetteWafer() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeTemNewrecipe() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            RecipeTypeDataSet ds = new RecipeTypeDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void CassetteRecipeRowChangeEventHandler(object sender, CassetteRecipeRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void CassetteWaferRowChangeEventHandler(object sender, CassetteWaferRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void NewrecipeRowChangeEventHandler(object sender, NewrecipeRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void recipeRowChangeEventHandler(object sender, recipeRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void TemCassetteWaferRowChangeEventHandler(object sender, TemCassetteWaferRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void TemNewrecipeRowChangeEventHandler(object sender, TemNewrecipeRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CassetteRecipeDataTable : global::System.Data.TypedTableBase<CassetteRecipeRow> {
            
            private global::System.Data.DataColumn columnCassetteRecipeID;
            
            private global::System.Data.DataColumn columnCassetteRecipeName;
            
            private global::System.Data.DataColumn columnCassetteRecipeDate;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CassetteRecipeDataTable() {
                this.TableName = "CassetteRecipe";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal CassetteRecipeDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected CassetteRecipeDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CassetteRecipeIDColumn {
                get {
                    return this.columnCassetteRecipeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CassetteRecipeNameColumn {
                get {
                    return this.columnCassetteRecipeName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CassetteRecipeDateColumn {
                get {
                    return this.columnCassetteRecipeDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CassetteRecipeRow this[int index] {
                get {
                    return ((CassetteRecipeRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event CassetteRecipeRowChangeEventHandler CassetteRecipeRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event CassetteRecipeRowChangeEventHandler CassetteRecipeRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event CassetteRecipeRowChangeEventHandler CassetteRecipeRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event CassetteRecipeRowChangeEventHandler CassetteRecipeRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddCassetteRecipeRow(CassetteRecipeRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CassetteRecipeRow AddCassetteRecipeRow(string CassetteRecipeName, System.DateTime CassetteRecipeDate) {
                CassetteRecipeRow rowCassetteRecipeRow = ((CassetteRecipeRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        CassetteRecipeName,
                        CassetteRecipeDate};
                rowCassetteRecipeRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCassetteRecipeRow);
                return rowCassetteRecipeRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CassetteRecipeRow FindByCassetteRecipeID(int CassetteRecipeID) {
                return ((CassetteRecipeRow)(this.Rows.Find(new object[] {
                            CassetteRecipeID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                CassetteRecipeDataTable cln = ((CassetteRecipeDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new CassetteRecipeDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnCassetteRecipeID = base.Columns["CassetteRecipeID"];
                this.columnCassetteRecipeName = base.Columns["CassetteRecipeName"];
                this.columnCassetteRecipeDate = base.Columns["CassetteRecipeDate"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnCassetteRecipeID = new global::System.Data.DataColumn("CassetteRecipeID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCassetteRecipeID);
                this.columnCassetteRecipeName = new global::System.Data.DataColumn("CassetteRecipeName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCassetteRecipeName);
                this.columnCassetteRecipeDate = new global::System.Data.DataColumn("CassetteRecipeDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCassetteRecipeDate);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnCassetteRecipeID}, true));
                this.columnCassetteRecipeID.AutoIncrement = true;
                this.columnCassetteRecipeID.AutoIncrementSeed = -1;
                this.columnCassetteRecipeID.AutoIncrementStep = -1;
                this.columnCassetteRecipeID.AllowDBNull = false;
                this.columnCassetteRecipeID.ReadOnly = true;
                this.columnCassetteRecipeID.Unique = true;
                this.columnCassetteRecipeName.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CassetteRecipeRow NewCassetteRecipeRow() {
                return ((CassetteRecipeRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new CassetteRecipeRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(CassetteRecipeRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CassetteRecipeRowChanged != null)) {
                    this.CassetteRecipeRowChanged(this, new CassetteRecipeRowChangeEvent(((CassetteRecipeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CassetteRecipeRowChanging != null)) {
                    this.CassetteRecipeRowChanging(this, new CassetteRecipeRowChangeEvent(((CassetteRecipeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CassetteRecipeRowDeleted != null)) {
                    this.CassetteRecipeRowDeleted(this, new CassetteRecipeRowChangeEvent(((CassetteRecipeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CassetteRecipeRowDeleting != null)) {
                    this.CassetteRecipeRowDeleting(this, new CassetteRecipeRowChangeEvent(((CassetteRecipeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveCassetteRecipeRow(CassetteRecipeRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                RecipeTypeDataSet ds = new RecipeTypeDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CassetteRecipeDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CassetteWaferDataTable : global::System.Data.TypedTableBase<CassetteWaferRow> {
            
            private global::System.Data.DataColumn columnCassetteWaferID;
            
            private global::System.Data.DataColumn columnCassetteRecipeName;
            
            private global::System.Data.DataColumn columnNoOfWafers;
            
            private global::System.Data.DataColumn columnWaferRecipe;
            
            private global::System.Data.DataColumn columnConditioningRecipe;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CassetteWaferDataTable() {
                this.TableName = "CassetteWafer";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal CassetteWaferDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected CassetteWaferDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CassetteWaferIDColumn {
                get {
                    return this.columnCassetteWaferID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CassetteRecipeNameColumn {
                get {
                    return this.columnCassetteRecipeName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NoOfWafersColumn {
                get {
                    return this.columnNoOfWafers;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn WaferRecipeColumn {
                get {
                    return this.columnWaferRecipe;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ConditioningRecipeColumn {
                get {
                    return this.columnConditioningRecipe;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CassetteWaferRow this[int index] {
                get {
                    return ((CassetteWaferRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event CassetteWaferRowChangeEventHandler CassetteWaferRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event CassetteWaferRowChangeEventHandler CassetteWaferRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event CassetteWaferRowChangeEventHandler CassetteWaferRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event CassetteWaferRowChangeEventHandler CassetteWaferRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddCassetteWaferRow(CassetteWaferRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CassetteWaferRow AddCassetteWaferRow(string CassetteRecipeName, string NoOfWafers, string WaferRecipe, string ConditioningRecipe) {
                CassetteWaferRow rowCassetteWaferRow = ((CassetteWaferRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        CassetteRecipeName,
                        NoOfWafers,
                        WaferRecipe,
                        ConditioningRecipe};
                rowCassetteWaferRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCassetteWaferRow);
                return rowCassetteWaferRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CassetteWaferRow FindByCassetteWaferID(int CassetteWaferID) {
                return ((CassetteWaferRow)(this.Rows.Find(new object[] {
                            CassetteWaferID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                CassetteWaferDataTable cln = ((CassetteWaferDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new CassetteWaferDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnCassetteWaferID = base.Columns["CassetteWaferID"];
                this.columnCassetteRecipeName = base.Columns["CassetteRecipeName"];
                this.columnNoOfWafers = base.Columns["NoOfWafers"];
                this.columnWaferRecipe = base.Columns["WaferRecipe"];
                this.columnConditioningRecipe = base.Columns["ConditioningRecipe"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnCassetteWaferID = new global::System.Data.DataColumn("CassetteWaferID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCassetteWaferID);
                this.columnCassetteRecipeName = new global::System.Data.DataColumn("CassetteRecipeName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCassetteRecipeName);
                this.columnNoOfWafers = new global::System.Data.DataColumn("NoOfWafers", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNoOfWafers);
                this.columnWaferRecipe = new global::System.Data.DataColumn("WaferRecipe", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWaferRecipe);
                this.columnConditioningRecipe = new global::System.Data.DataColumn("ConditioningRecipe", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConditioningRecipe);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnCassetteWaferID}, true));
                this.columnCassetteWaferID.AutoIncrement = true;
                this.columnCassetteWaferID.AutoIncrementSeed = -1;
                this.columnCassetteWaferID.AutoIncrementStep = -1;
                this.columnCassetteWaferID.AllowDBNull = false;
                this.columnCassetteWaferID.ReadOnly = true;
                this.columnCassetteWaferID.Unique = true;
                this.columnCassetteRecipeName.AllowDBNull = false;
                this.columnCassetteRecipeName.MaxLength = 50;
                this.columnNoOfWafers.MaxLength = 50;
                this.columnWaferRecipe.MaxLength = 50;
                this.columnConditioningRecipe.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CassetteWaferRow NewCassetteWaferRow() {
                return ((CassetteWaferRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new CassetteWaferRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(CassetteWaferRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CassetteWaferRowChanged != null)) {
                    this.CassetteWaferRowChanged(this, new CassetteWaferRowChangeEvent(((CassetteWaferRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CassetteWaferRowChanging != null)) {
                    this.CassetteWaferRowChanging(this, new CassetteWaferRowChangeEvent(((CassetteWaferRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CassetteWaferRowDeleted != null)) {
                    this.CassetteWaferRowDeleted(this, new CassetteWaferRowChangeEvent(((CassetteWaferRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CassetteWaferRowDeleting != null)) {
                    this.CassetteWaferRowDeleting(this, new CassetteWaferRowChangeEvent(((CassetteWaferRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveCassetteWaferRow(CassetteWaferRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                RecipeTypeDataSet ds = new RecipeTypeDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CassetteWaferDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class NewrecipeDataTable : global::System.Data.TypedTableBase<NewrecipeRow> {
            
            private global::System.Data.DataColumn columnModule_ICP_ID;
            
            private global::System.Data.DataColumn columnrecipeName;
            
            private global::System.Data.DataColumn columnStepName;
            
            private global::System.Data.DataColumn columnTimeDependentStep;
            
            private global::System.Data.DataColumn columnProcessTime;
            
            private global::System.Data.DataColumn columnProcessPressure;
            
            private global::System.Data.DataColumn columnProcessPressurePercent;
            
            private global::System.Data.DataColumn columnAPCSetpointPosition;
            
            private global::System.Data.DataColumn columnAPCMode;
            
            private global::System.Data.DataColumn columnActivePressureSensor;
            
            private global::System.Data.DataColumn columnSourcePower;
            
            private global::System.Data.DataColumn columnSourcePowerPercent;
            
            private global::System.Data.DataColumn columnSourceMUTuneCapacitor;
            
            private global::System.Data.DataColumn columnSourceMULoadCapacitor;
            
            private global::System.Data.DataColumn columnSourceRFControlMode;
            
            private global::System.Data.DataColumn columnPlatenPower;
            
            private global::System.Data.DataColumn columnPlatenPowerPercent;
            
            private global::System.Data.DataColumn columnPlatenCapacitorAdjust;
            
            private global::System.Data.DataColumn columnPlatenRFTuningCapacitor;
            
            private global::System.Data.DataColumn columnPlatenRFTuningCapacitorPercent;
            
            private global::System.Data.DataColumn columnPlatenRFLoadCapacitor;
            
            private global::System.Data.DataColumn columnPlatenRFLoadCapacitorPercent;
            
            private global::System.Data.DataColumn columnPlatenRFPaddingCapacitor;
            
            private global::System.Data.DataColumn columnPlatenRFControlMode;
            
            private global::System.Data.DataColumn columnHeliumPressure;
            
            private global::System.Data.DataColumn columnHeliumpressurePercent;
            
            private global::System.Data.DataColumn columnHeliumFlowWarningLevel;
            
            private global::System.Data.DataColumn columnHeliumFlowFaultLevel;
            
            private global::System.Data.DataColumn columnGasLineConfig;
            
            private global::System.Data.DataColumn columnArgon;
            
            private global::System.Data.DataColumn columnArgonPercent;
            
            private global::System.Data.DataColumn columnNitrogen;
            
            private global::System.Data.DataColumn columnNitrogenPercent;
            
            private global::System.Data.DataColumn columnOxygen;
            
            private global::System.Data.DataColumn columnOxygenPercent;
            
            private global::System.Data.DataColumn columnOxygen1;
            
            private global::System.Data.DataColumn columnOxygen1Percent;
            
            private global::System.Data.DataColumn columnCHF3;
            
            private global::System.Data.DataColumn columnCHF3Percent;
            
            private global::System.Data.DataColumn columnSF6;
            
            private global::System.Data.DataColumn columnSF6Percent;
            
            private global::System.Data.DataColumn columnBCI3;
            
            private global::System.Data.DataColumn columnBCI3Percent;
            
            private global::System.Data.DataColumn columnCI2;
            
            private global::System.Data.DataColumn columnCI2Percent;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public NewrecipeDataTable() {
                this.TableName = "Newrecipe";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal NewrecipeDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected NewrecipeDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Module_ICP_IDColumn {
                get {
                    return this.columnModule_ICP_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn recipeNameColumn {
                get {
                    return this.columnrecipeName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn StepNameColumn {
                get {
                    return this.columnStepName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TimeDependentStepColumn {
                get {
                    return this.columnTimeDependentStep;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ProcessTimeColumn {
                get {
                    return this.columnProcessTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ProcessPressureColumn {
                get {
                    return this.columnProcessPressure;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ProcessPressurePercentColumn {
                get {
                    return this.columnProcessPressurePercent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn APCSetpointPositionColumn {
                get {
                    return this.columnAPCSetpointPosition;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn APCModeColumn {
                get {
                    return this.columnAPCMode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ActivePressureSensorColumn {
                get {
                    return this.columnActivePressureSensor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SourcePowerColumn {
                get {
                    return this.columnSourcePower;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SourcePowerPercentColumn {
                get {
                    return this.columnSourcePowerPercent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SourceMUTuneCapacitorColumn {
                get {
                    return this.columnSourceMUTuneCapacitor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SourceMULoadCapacitorColumn {
                get {
                    return this.columnSourceMULoadCapacitor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SourceRFControlModeColumn {
                get {
                    return this.columnSourceRFControlMode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PlatenPowerColumn {
                get {
                    return this.columnPlatenPower;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PlatenPowerPercentColumn {
                get {
                    return this.columnPlatenPowerPercent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PlatenCapacitorAdjustColumn {
                get {
                    return this.columnPlatenCapacitorAdjust;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PlatenRFTuningCapacitorColumn {
                get {
                    return this.columnPlatenRFTuningCapacitor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PlatenRFTuningCapacitorPercentColumn {
                get {
                    return this.columnPlatenRFTuningCapacitorPercent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PlatenRFLoadCapacitorColumn {
                get {
                    return this.columnPlatenRFLoadCapacitor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PlatenRFLoadCapacitorPercentColumn {
                get {
                    return this.columnPlatenRFLoadCapacitorPercent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PlatenRFPaddingCapacitorColumn {
                get {
                    return this.columnPlatenRFPaddingCapacitor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PlatenRFControlModeColumn {
                get {
                    return this.columnPlatenRFControlMode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HeliumPressureColumn {
                get {
                    return this.columnHeliumPressure;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HeliumpressurePercentColumn {
                get {
                    return this.columnHeliumpressurePercent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HeliumFlowWarningLevelColumn {
                get {
                    return this.columnHeliumFlowWarningLevel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HeliumFlowFaultLevelColumn {
                get {
                    return this.columnHeliumFlowFaultLevel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GasLineConfigColumn {
                get {
                    return this.columnGasLineConfig;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ArgonColumn {
                get {
                    return this.columnArgon;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ArgonPercentColumn {
                get {
                    return this.columnArgonPercent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NitrogenColumn {
                get {
                    return this.columnNitrogen;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NitrogenPercentColumn {
                get {
                    return this.columnNitrogenPercent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OxygenColumn {
                get {
                    return this.columnOxygen;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OxygenPercentColumn {
                get {
                    return this.columnOxygenPercent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Oxygen1Column {
                get {
                    return this.columnOxygen1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Oxygen1PercentColumn {
                get {
                    return this.columnOxygen1Percent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CHF3Column {
                get {
                    return this.columnCHF3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CHF3PercentColumn {
                get {
                    return this.columnCHF3Percent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SF6Column {
                get {
                    return this.columnSF6;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SF6PercentColumn {
                get {
                    return this.columnSF6Percent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BCI3Column {
                get {
                    return this.columnBCI3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BCI3PercentColumn {
                get {
                    return this.columnBCI3Percent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CI2Column {
                get {
                    return this.columnCI2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CI2PercentColumn {
                get {
                    return this.columnCI2Percent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public NewrecipeRow this[int index] {
                get {
                    return ((NewrecipeRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event NewrecipeRowChangeEventHandler NewrecipeRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event NewrecipeRowChangeEventHandler NewrecipeRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event NewrecipeRowChangeEventHandler NewrecipeRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event NewrecipeRowChangeEventHandler NewrecipeRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddNewrecipeRow(NewrecipeRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public NewrecipeRow AddNewrecipeRow(
                        string recipeName, 
                        string StepName, 
                        string TimeDependentStep, 
                        string ProcessTime, 
                        string ProcessPressure, 
                        string ProcessPressurePercent, 
                        string APCSetpointPosition, 
                        string APCMode, 
                        string ActivePressureSensor, 
                        string SourcePower, 
                        string SourcePowerPercent, 
                        string SourceMUTuneCapacitor, 
                        string SourceMULoadCapacitor, 
                        string SourceRFControlMode, 
                        string PlatenPower, 
                        string PlatenPowerPercent, 
                        string PlatenCapacitorAdjust, 
                        string PlatenRFTuningCapacitor, 
                        string PlatenRFTuningCapacitorPercent, 
                        string PlatenRFLoadCapacitor, 
                        string PlatenRFLoadCapacitorPercent, 
                        string PlatenRFPaddingCapacitor, 
                        string PlatenRFControlMode, 
                        string HeliumPressure, 
                        string HeliumpressurePercent, 
                        string HeliumFlowWarningLevel, 
                        string HeliumFlowFaultLevel, 
                        string GasLineConfig, 
                        string Argon, 
                        string ArgonPercent, 
                        string Nitrogen, 
                        string NitrogenPercent, 
                        string Oxygen, 
                        string OxygenPercent, 
                        string Oxygen1, 
                        string Oxygen1Percent, 
                        string CHF3, 
                        string CHF3Percent, 
                        string SF6, 
                        string SF6Percent, 
                        string BCI3, 
                        string BCI3Percent, 
                        string CI2, 
                        string CI2Percent) {
                NewrecipeRow rowNewrecipeRow = ((NewrecipeRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        recipeName,
                        StepName,
                        TimeDependentStep,
                        ProcessTime,
                        ProcessPressure,
                        ProcessPressurePercent,
                        APCSetpointPosition,
                        APCMode,
                        ActivePressureSensor,
                        SourcePower,
                        SourcePowerPercent,
                        SourceMUTuneCapacitor,
                        SourceMULoadCapacitor,
                        SourceRFControlMode,
                        PlatenPower,
                        PlatenPowerPercent,
                        PlatenCapacitorAdjust,
                        PlatenRFTuningCapacitor,
                        PlatenRFTuningCapacitorPercent,
                        PlatenRFLoadCapacitor,
                        PlatenRFLoadCapacitorPercent,
                        PlatenRFPaddingCapacitor,
                        PlatenRFControlMode,
                        HeliumPressure,
                        HeliumpressurePercent,
                        HeliumFlowWarningLevel,
                        HeliumFlowFaultLevel,
                        GasLineConfig,
                        Argon,
                        ArgonPercent,
                        Nitrogen,
                        NitrogenPercent,
                        Oxygen,
                        OxygenPercent,
                        Oxygen1,
                        Oxygen1Percent,
                        CHF3,
                        CHF3Percent,
                        SF6,
                        SF6Percent,
                        BCI3,
                        BCI3Percent,
                        CI2,
                        CI2Percent};
                rowNewrecipeRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowNewrecipeRow);
                return rowNewrecipeRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public NewrecipeRow FindByModule_ICP_ID(int Module_ICP_ID) {
                return ((NewrecipeRow)(this.Rows.Find(new object[] {
                            Module_ICP_ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                NewrecipeDataTable cln = ((NewrecipeDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new NewrecipeDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnModule_ICP_ID = base.Columns["Module ICP ID"];
                this.columnrecipeName = base.Columns["recipeName"];
                this.columnStepName = base.Columns["StepName"];
                this.columnTimeDependentStep = base.Columns["TimeDependentStep"];
                this.columnProcessTime = base.Columns["ProcessTime"];
                this.columnProcessPressure = base.Columns["ProcessPressure"];
                this.columnProcessPressurePercent = base.Columns["ProcessPressurePercent"];
                this.columnAPCSetpointPosition = base.Columns["APCSetpointPosition"];
                this.columnAPCMode = base.Columns["APCMode"];
                this.columnActivePressureSensor = base.Columns["ActivePressureSensor"];
                this.columnSourcePower = base.Columns["SourcePower"];
                this.columnSourcePowerPercent = base.Columns["SourcePowerPercent"];
                this.columnSourceMUTuneCapacitor = base.Columns["SourceMUTuneCapacitor"];
                this.columnSourceMULoadCapacitor = base.Columns["SourceMULoadCapacitor"];
                this.columnSourceRFControlMode = base.Columns["SourceRFControlMode"];
                this.columnPlatenPower = base.Columns["PlatenPower"];
                this.columnPlatenPowerPercent = base.Columns["PlatenPowerPercent"];
                this.columnPlatenCapacitorAdjust = base.Columns["PlatenCapacitorAdjust"];
                this.columnPlatenRFTuningCapacitor = base.Columns["PlatenRFTuningCapacitor"];
                this.columnPlatenRFTuningCapacitorPercent = base.Columns["PlatenRFTuningCapacitorPercent"];
                this.columnPlatenRFLoadCapacitor = base.Columns["PlatenRFLoadCapacitor"];
                this.columnPlatenRFLoadCapacitorPercent = base.Columns["PlatenRFLoadCapacitorPercent"];
                this.columnPlatenRFPaddingCapacitor = base.Columns["PlatenRFPaddingCapacitor"];
                this.columnPlatenRFControlMode = base.Columns["PlatenRFControlMode"];
                this.columnHeliumPressure = base.Columns["HeliumPressure"];
                this.columnHeliumpressurePercent = base.Columns["HeliumpressurePercent"];
                this.columnHeliumFlowWarningLevel = base.Columns["HeliumFlowWarningLevel"];
                this.columnHeliumFlowFaultLevel = base.Columns["HeliumFlowFaultLevel"];
                this.columnGasLineConfig = base.Columns["GasLineConfig"];
                this.columnArgon = base.Columns["Argon"];
                this.columnArgonPercent = base.Columns["ArgonPercent"];
                this.columnNitrogen = base.Columns["Nitrogen"];
                this.columnNitrogenPercent = base.Columns["NitrogenPercent"];
                this.columnOxygen = base.Columns["Oxygen"];
                this.columnOxygenPercent = base.Columns["OxygenPercent"];
                this.columnOxygen1 = base.Columns["Oxygen1"];
                this.columnOxygen1Percent = base.Columns["Oxygen1Percent"];
                this.columnCHF3 = base.Columns["CHF3"];
                this.columnCHF3Percent = base.Columns["CHF3Percent"];
                this.columnSF6 = base.Columns["SF6"];
                this.columnSF6Percent = base.Columns["SF6Percent"];
                this.columnBCI3 = base.Columns["BCI3"];
                this.columnBCI3Percent = base.Columns["BCI3Percent"];
                this.columnCI2 = base.Columns["CI2"];
                this.columnCI2Percent = base.Columns["CI2Percent"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnModule_ICP_ID = new global::System.Data.DataColumn("Module ICP ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModule_ICP_ID);
                this.columnrecipeName = new global::System.Data.DataColumn("recipeName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrecipeName);
                this.columnStepName = new global::System.Data.DataColumn("StepName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStepName);
                this.columnTimeDependentStep = new global::System.Data.DataColumn("TimeDependentStep", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTimeDependentStep);
                this.columnProcessTime = new global::System.Data.DataColumn("ProcessTime", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProcessTime);
                this.columnProcessPressure = new global::System.Data.DataColumn("ProcessPressure", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProcessPressure);
                this.columnProcessPressurePercent = new global::System.Data.DataColumn("ProcessPressurePercent", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProcessPressurePercent);
                this.columnAPCSetpointPosition = new global::System.Data.DataColumn("APCSetpointPosition", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAPCSetpointPosition);
                this.columnAPCMode = new global::System.Data.DataColumn("APCMode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAPCMode);
                this.columnActivePressureSensor = new global::System.Data.DataColumn("ActivePressureSensor", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnActivePressureSensor);
                this.columnSourcePower = new global::System.Data.DataColumn("SourcePower", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSourcePower);
                this.columnSourcePowerPercent = new global::System.Data.DataColumn("SourcePowerPercent", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSourcePowerPercent);
                this.columnSourceMUTuneCapacitor = new global::System.Data.DataColumn("SourceMUTuneCapacitor", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSourceMUTuneCapacitor);
                this.columnSourceMULoadCapacitor = new global::System.Data.DataColumn("SourceMULoadCapacitor", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSourceMULoadCapacitor);
                this.columnSourceRFControlMode = new global::System.Data.DataColumn("SourceRFControlMode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSourceRFControlMode);
                this.columnPlatenPower = new global::System.Data.DataColumn("PlatenPower", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPlatenPower);
                this.columnPlatenPowerPercent = new global::System.Data.DataColumn("PlatenPowerPercent", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPlatenPowerPercent);
                this.columnPlatenCapacitorAdjust = new global::System.Data.DataColumn("PlatenCapacitorAdjust", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPlatenCapacitorAdjust);
                this.columnPlatenRFTuningCapacitor = new global::System.Data.DataColumn("PlatenRFTuningCapacitor", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPlatenRFTuningCapacitor);
                this.columnPlatenRFTuningCapacitorPercent = new global::System.Data.DataColumn("PlatenRFTuningCapacitorPercent", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPlatenRFTuningCapacitorPercent);
                this.columnPlatenRFLoadCapacitor = new global::System.Data.DataColumn("PlatenRFLoadCapacitor", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPlatenRFLoadCapacitor);
                this.columnPlatenRFLoadCapacitorPercent = new global::System.Data.DataColumn("PlatenRFLoadCapacitorPercent", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPlatenRFLoadCapacitorPercent);
                this.columnPlatenRFPaddingCapacitor = new global::System.Data.DataColumn("PlatenRFPaddingCapacitor", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPlatenRFPaddingCapacitor);
                this.columnPlatenRFControlMode = new global::System.Data.DataColumn("PlatenRFControlMode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPlatenRFControlMode);
                this.columnHeliumPressure = new global::System.Data.DataColumn("HeliumPressure", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHeliumPressure);
                this.columnHeliumpressurePercent = new global::System.Data.DataColumn("HeliumpressurePercent", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHeliumpressurePercent);
                this.columnHeliumFlowWarningLevel = new global::System.Data.DataColumn("HeliumFlowWarningLevel", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHeliumFlowWarningLevel);
                this.columnHeliumFlowFaultLevel = new global::System.Data.DataColumn("HeliumFlowFaultLevel", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHeliumFlowFaultLevel);
                this.columnGasLineConfig = new global::System.Data.DataColumn("GasLineConfig", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGasLineConfig);
                this.columnArgon = new global::System.Data.DataColumn("Argon", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnArgon);
                this.columnArgonPercent = new global::System.Data.DataColumn("ArgonPercent", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnArgonPercent);
                this.columnNitrogen = new global::System.Data.DataColumn("Nitrogen", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNitrogen);
                this.columnNitrogenPercent = new global::System.Data.DataColumn("NitrogenPercent", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNitrogenPercent);
                this.columnOxygen = new global::System.Data.DataColumn("Oxygen", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOxygen);
                this.columnOxygenPercent = new global::System.Data.DataColumn("OxygenPercent", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOxygenPercent);
                this.columnOxygen1 = new global::System.Data.DataColumn("Oxygen1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOxygen1);
                this.columnOxygen1Percent = new global::System.Data.DataColumn("Oxygen1Percent", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOxygen1Percent);
                this.columnCHF3 = new global::System.Data.DataColumn("CHF3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCHF3);
                this.columnCHF3Percent = new global::System.Data.DataColumn("CHF3Percent", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCHF3Percent);
                this.columnSF6 = new global::System.Data.DataColumn("SF6", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSF6);
                this.columnSF6Percent = new global::System.Data.DataColumn("SF6Percent", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSF6Percent);
                this.columnBCI3 = new global::System.Data.DataColumn("BCI3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBCI3);
                this.columnBCI3Percent = new global::System.Data.DataColumn("BCI3Percent", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBCI3Percent);
                this.columnCI2 = new global::System.Data.DataColumn("CI2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCI2);
                this.columnCI2Percent = new global::System.Data.DataColumn("CI2Percent", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCI2Percent);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnModule_ICP_ID}, true));
                this.columnModule_ICP_ID.AutoIncrement = true;
                this.columnModule_ICP_ID.AutoIncrementSeed = -1;
                this.columnModule_ICP_ID.AutoIncrementStep = -1;
                this.columnModule_ICP_ID.AllowDBNull = false;
                this.columnModule_ICP_ID.ReadOnly = true;
                this.columnModule_ICP_ID.Unique = true;
                this.columnrecipeName.AllowDBNull = false;
                this.columnrecipeName.MaxLength = 50;
                this.columnStepName.MaxLength = 50;
                this.columnTimeDependentStep.MaxLength = 50;
                this.columnProcessTime.MaxLength = 50;
                this.columnProcessPressure.MaxLength = 50;
                this.columnProcessPressurePercent.MaxLength = 50;
                this.columnAPCSetpointPosition.MaxLength = 50;
                this.columnAPCMode.MaxLength = 50;
                this.columnActivePressureSensor.MaxLength = 50;
                this.columnSourcePower.MaxLength = 50;
                this.columnSourcePowerPercent.MaxLength = 50;
                this.columnSourceMUTuneCapacitor.MaxLength = 50;
                this.columnSourceMULoadCapacitor.MaxLength = 50;
                this.columnSourceRFControlMode.MaxLength = 50;
                this.columnPlatenPower.MaxLength = 50;
                this.columnPlatenPowerPercent.MaxLength = 50;
                this.columnPlatenCapacitorAdjust.MaxLength = 50;
                this.columnPlatenRFTuningCapacitor.MaxLength = 50;
                this.columnPlatenRFTuningCapacitorPercent.MaxLength = 50;
                this.columnPlatenRFLoadCapacitor.MaxLength = 50;
                this.columnPlatenRFLoadCapacitorPercent.MaxLength = 50;
                this.columnPlatenRFPaddingCapacitor.MaxLength = 50;
                this.columnPlatenRFControlMode.MaxLength = 50;
                this.columnHeliumPressure.MaxLength = 50;
                this.columnHeliumpressurePercent.MaxLength = 50;
                this.columnHeliumFlowWarningLevel.MaxLength = 50;
                this.columnHeliumFlowFaultLevel.MaxLength = 50;
                this.columnGasLineConfig.MaxLength = 50;
                this.columnArgon.MaxLength = 50;
                this.columnArgonPercent.MaxLength = 50;
                this.columnNitrogen.MaxLength = 50;
                this.columnNitrogenPercent.MaxLength = 50;
                this.columnOxygen.MaxLength = 50;
                this.columnOxygenPercent.MaxLength = 50;
                this.columnOxygen1.MaxLength = 50;
                this.columnOxygen1Percent.MaxLength = 50;
                this.columnCHF3.MaxLength = 50;
                this.columnCHF3Percent.MaxLength = 50;
                this.columnSF6.MaxLength = 50;
                this.columnSF6Percent.MaxLength = 50;
                this.columnBCI3.MaxLength = 50;
                this.columnBCI3Percent.MaxLength = 50;
                this.columnCI2.MaxLength = 50;
                this.columnCI2Percent.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public NewrecipeRow NewNewrecipeRow() {
                return ((NewrecipeRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new NewrecipeRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(NewrecipeRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.NewrecipeRowChanged != null)) {
                    this.NewrecipeRowChanged(this, new NewrecipeRowChangeEvent(((NewrecipeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.NewrecipeRowChanging != null)) {
                    this.NewrecipeRowChanging(this, new NewrecipeRowChangeEvent(((NewrecipeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.NewrecipeRowDeleted != null)) {
                    this.NewrecipeRowDeleted(this, new NewrecipeRowChangeEvent(((NewrecipeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.NewrecipeRowDeleting != null)) {
                    this.NewrecipeRowDeleting(this, new NewrecipeRowChangeEvent(((NewrecipeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveNewrecipeRow(NewrecipeRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                RecipeTypeDataSet ds = new RecipeTypeDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "NewrecipeDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class recipeDataTable : global::System.Data.TypedTableBase<recipeRow> {
            
            private global::System.Data.DataColumn columnrecipeID;
            
            private global::System.Data.DataColumn columnrecipeName;
            
            private global::System.Data.DataColumn columnrecipeDate;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public recipeDataTable() {
                this.TableName = "recipe";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal recipeDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected recipeDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn recipeIDColumn {
                get {
                    return this.columnrecipeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn recipeNameColumn {
                get {
                    return this.columnrecipeName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn recipeDateColumn {
                get {
                    return this.columnrecipeDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public recipeRow this[int index] {
                get {
                    return ((recipeRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event recipeRowChangeEventHandler recipeRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event recipeRowChangeEventHandler recipeRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event recipeRowChangeEventHandler recipeRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event recipeRowChangeEventHandler recipeRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddrecipeRow(recipeRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public recipeRow AddrecipeRow(string recipeName, System.DateTime recipeDate) {
                recipeRow rowrecipeRow = ((recipeRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        recipeName,
                        recipeDate};
                rowrecipeRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowrecipeRow);
                return rowrecipeRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public recipeRow FindByrecipeID(int recipeID) {
                return ((recipeRow)(this.Rows.Find(new object[] {
                            recipeID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                recipeDataTable cln = ((recipeDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new recipeDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnrecipeID = base.Columns["recipeID"];
                this.columnrecipeName = base.Columns["recipeName"];
                this.columnrecipeDate = base.Columns["recipeDate"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnrecipeID = new global::System.Data.DataColumn("recipeID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrecipeID);
                this.columnrecipeName = new global::System.Data.DataColumn("recipeName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrecipeName);
                this.columnrecipeDate = new global::System.Data.DataColumn("recipeDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrecipeDate);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnrecipeID}, true));
                this.columnrecipeID.AutoIncrement = true;
                this.columnrecipeID.AutoIncrementSeed = -1;
                this.columnrecipeID.AutoIncrementStep = -1;
                this.columnrecipeID.AllowDBNull = false;
                this.columnrecipeID.ReadOnly = true;
                this.columnrecipeID.Unique = true;
                this.columnrecipeName.AllowDBNull = false;
                this.columnrecipeName.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public recipeRow NewrecipeRow() {
                return ((recipeRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new recipeRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(recipeRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.recipeRowChanged != null)) {
                    this.recipeRowChanged(this, new recipeRowChangeEvent(((recipeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.recipeRowChanging != null)) {
                    this.recipeRowChanging(this, new recipeRowChangeEvent(((recipeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.recipeRowDeleted != null)) {
                    this.recipeRowDeleted(this, new recipeRowChangeEvent(((recipeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.recipeRowDeleting != null)) {
                    this.recipeRowDeleting(this, new recipeRowChangeEvent(((recipeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoverecipeRow(recipeRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                RecipeTypeDataSet ds = new RecipeTypeDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "recipeDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TemCassetteWaferDataTable : global::System.Data.TypedTableBase<TemCassetteWaferRow> {
            
            private global::System.Data.DataColumn columnTemCassetteWaferID;
            
            private global::System.Data.DataColumn columnCassetteRecipeName;
            
            private global::System.Data.DataColumn columnNoOfWafers;
            
            private global::System.Data.DataColumn columnWaferRecipe;
            
            private global::System.Data.DataColumn columnConditioningRecipe;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TemCassetteWaferDataTable() {
                this.TableName = "TemCassetteWafer";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal TemCassetteWaferDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected TemCassetteWaferDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TemCassetteWaferIDColumn {
                get {
                    return this.columnTemCassetteWaferID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CassetteRecipeNameColumn {
                get {
                    return this.columnCassetteRecipeName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NoOfWafersColumn {
                get {
                    return this.columnNoOfWafers;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn WaferRecipeColumn {
                get {
                    return this.columnWaferRecipe;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ConditioningRecipeColumn {
                get {
                    return this.columnConditioningRecipe;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TemCassetteWaferRow this[int index] {
                get {
                    return ((TemCassetteWaferRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TemCassetteWaferRowChangeEventHandler TemCassetteWaferRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TemCassetteWaferRowChangeEventHandler TemCassetteWaferRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TemCassetteWaferRowChangeEventHandler TemCassetteWaferRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TemCassetteWaferRowChangeEventHandler TemCassetteWaferRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddTemCassetteWaferRow(TemCassetteWaferRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TemCassetteWaferRow AddTemCassetteWaferRow(string CassetteRecipeName, string NoOfWafers, string WaferRecipe, string ConditioningRecipe) {
                TemCassetteWaferRow rowTemCassetteWaferRow = ((TemCassetteWaferRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        CassetteRecipeName,
                        NoOfWafers,
                        WaferRecipe,
                        ConditioningRecipe};
                rowTemCassetteWaferRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTemCassetteWaferRow);
                return rowTemCassetteWaferRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TemCassetteWaferRow FindByTemCassetteWaferID(int TemCassetteWaferID) {
                return ((TemCassetteWaferRow)(this.Rows.Find(new object[] {
                            TemCassetteWaferID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                TemCassetteWaferDataTable cln = ((TemCassetteWaferDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TemCassetteWaferDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnTemCassetteWaferID = base.Columns["TemCassetteWaferID"];
                this.columnCassetteRecipeName = base.Columns["CassetteRecipeName"];
                this.columnNoOfWafers = base.Columns["NoOfWafers"];
                this.columnWaferRecipe = base.Columns["WaferRecipe"];
                this.columnConditioningRecipe = base.Columns["ConditioningRecipe"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnTemCassetteWaferID = new global::System.Data.DataColumn("TemCassetteWaferID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTemCassetteWaferID);
                this.columnCassetteRecipeName = new global::System.Data.DataColumn("CassetteRecipeName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCassetteRecipeName);
                this.columnNoOfWafers = new global::System.Data.DataColumn("NoOfWafers", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNoOfWafers);
                this.columnWaferRecipe = new global::System.Data.DataColumn("WaferRecipe", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWaferRecipe);
                this.columnConditioningRecipe = new global::System.Data.DataColumn("ConditioningRecipe", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConditioningRecipe);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnTemCassetteWaferID}, true));
                this.columnTemCassetteWaferID.AutoIncrement = true;
                this.columnTemCassetteWaferID.AutoIncrementSeed = -1;
                this.columnTemCassetteWaferID.AutoIncrementStep = -1;
                this.columnTemCassetteWaferID.AllowDBNull = false;
                this.columnTemCassetteWaferID.ReadOnly = true;
                this.columnTemCassetteWaferID.Unique = true;
                this.columnCassetteRecipeName.MaxLength = 50;
                this.columnNoOfWafers.MaxLength = 50;
                this.columnWaferRecipe.MaxLength = 50;
                this.columnConditioningRecipe.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TemCassetteWaferRow NewTemCassetteWaferRow() {
                return ((TemCassetteWaferRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TemCassetteWaferRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(TemCassetteWaferRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TemCassetteWaferRowChanged != null)) {
                    this.TemCassetteWaferRowChanged(this, new TemCassetteWaferRowChangeEvent(((TemCassetteWaferRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TemCassetteWaferRowChanging != null)) {
                    this.TemCassetteWaferRowChanging(this, new TemCassetteWaferRowChangeEvent(((TemCassetteWaferRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TemCassetteWaferRowDeleted != null)) {
                    this.TemCassetteWaferRowDeleted(this, new TemCassetteWaferRowChangeEvent(((TemCassetteWaferRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TemCassetteWaferRowDeleting != null)) {
                    this.TemCassetteWaferRowDeleting(this, new TemCassetteWaferRowChangeEvent(((TemCassetteWaferRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveTemCassetteWaferRow(TemCassetteWaferRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                RecipeTypeDataSet ds = new RecipeTypeDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TemCassetteWaferDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TemNewrecipeDataTable : global::System.Data.TypedTableBase<TemNewrecipeRow> {
            
            private global::System.Data.DataColumn columnTemRecipeID;
            
            private global::System.Data.DataColumn columnrecipeName;
            
            private global::System.Data.DataColumn columnStepName;
            
            private global::System.Data.DataColumn columnTimeDependentStep;
            
            private global::System.Data.DataColumn columnProcessTime;
            
            private global::System.Data.DataColumn columnProcessPressure;
            
            private global::System.Data.DataColumn columnProcessPressurePercent;
            
            private global::System.Data.DataColumn columnAPCSetpointPosition;
            
            private global::System.Data.DataColumn columnAPCMode;
            
            private global::System.Data.DataColumn columnActivePressureSensor;
            
            private global::System.Data.DataColumn columnSourcePower;
            
            private global::System.Data.DataColumn columnSourcePowerPercent;
            
            private global::System.Data.DataColumn columnSourceMUTuneCapacitor;
            
            private global::System.Data.DataColumn columnSourceMULoadCapacitor;
            
            private global::System.Data.DataColumn columnSourceRFControlMode;
            
            private global::System.Data.DataColumn columnPlatenPower;
            
            private global::System.Data.DataColumn columnPlatenPowerPercent;
            
            private global::System.Data.DataColumn columnPlatenCapacitorAdjust;
            
            private global::System.Data.DataColumn columnPlatenRFTuningCapacitor;
            
            private global::System.Data.DataColumn columnPlatenRFTuningCapacitorPercent;
            
            private global::System.Data.DataColumn columnPlatenRFLoadCapacitor;
            
            private global::System.Data.DataColumn columnPlatenRFLoadCapacitorPercent;
            
            private global::System.Data.DataColumn columnPlatenRFPaddingCapacitor;
            
            private global::System.Data.DataColumn columnPlatenRFControlMode;
            
            private global::System.Data.DataColumn columnHeliumPressure;
            
            private global::System.Data.DataColumn columnHeliumPressurePercent;
            
            private global::System.Data.DataColumn columnHeliumFlowWarningLevel;
            
            private global::System.Data.DataColumn columnHeliumFlowFaultLevel;
            
            private global::System.Data.DataColumn columnGasLineConfig;
            
            private global::System.Data.DataColumn columnArgon;
            
            private global::System.Data.DataColumn columnArgonPercent;
            
            private global::System.Data.DataColumn columnNitrogen;
            
            private global::System.Data.DataColumn columnNitrogenPercent;
            
            private global::System.Data.DataColumn columnOxygen;
            
            private global::System.Data.DataColumn columnOxygenPercent;
            
            private global::System.Data.DataColumn columnOxygen1;
            
            private global::System.Data.DataColumn columnOxygen1Percent;
            
            private global::System.Data.DataColumn columnCHF3;
            
            private global::System.Data.DataColumn columnCHF3Percent;
            
            private global::System.Data.DataColumn columnSF6;
            
            private global::System.Data.DataColumn columnSF6Percent;
            
            private global::System.Data.DataColumn columnBCI3;
            
            private global::System.Data.DataColumn columnBCI3Percent;
            
            private global::System.Data.DataColumn columnCI2;
            
            private global::System.Data.DataColumn columnCI2Percent;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TemNewrecipeDataTable() {
                this.TableName = "TemNewrecipe";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal TemNewrecipeDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected TemNewrecipeDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TemRecipeIDColumn {
                get {
                    return this.columnTemRecipeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn recipeNameColumn {
                get {
                    return this.columnrecipeName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn StepNameColumn {
                get {
                    return this.columnStepName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TimeDependentStepColumn {
                get {
                    return this.columnTimeDependentStep;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ProcessTimeColumn {
                get {
                    return this.columnProcessTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ProcessPressureColumn {
                get {
                    return this.columnProcessPressure;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ProcessPressurePercentColumn {
                get {
                    return this.columnProcessPressurePercent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn APCSetpointPositionColumn {
                get {
                    return this.columnAPCSetpointPosition;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn APCModeColumn {
                get {
                    return this.columnAPCMode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ActivePressureSensorColumn {
                get {
                    return this.columnActivePressureSensor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SourcePowerColumn {
                get {
                    return this.columnSourcePower;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SourcePowerPercentColumn {
                get {
                    return this.columnSourcePowerPercent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SourceMUTuneCapacitorColumn {
                get {
                    return this.columnSourceMUTuneCapacitor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SourceMULoadCapacitorColumn {
                get {
                    return this.columnSourceMULoadCapacitor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SourceRFControlModeColumn {
                get {
                    return this.columnSourceRFControlMode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PlatenPowerColumn {
                get {
                    return this.columnPlatenPower;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PlatenPowerPercentColumn {
                get {
                    return this.columnPlatenPowerPercent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PlatenCapacitorAdjustColumn {
                get {
                    return this.columnPlatenCapacitorAdjust;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PlatenRFTuningCapacitorColumn {
                get {
                    return this.columnPlatenRFTuningCapacitor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PlatenRFTuningCapacitorPercentColumn {
                get {
                    return this.columnPlatenRFTuningCapacitorPercent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PlatenRFLoadCapacitorColumn {
                get {
                    return this.columnPlatenRFLoadCapacitor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PlatenRFLoadCapacitorPercentColumn {
                get {
                    return this.columnPlatenRFLoadCapacitorPercent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PlatenRFPaddingCapacitorColumn {
                get {
                    return this.columnPlatenRFPaddingCapacitor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PlatenRFControlModeColumn {
                get {
                    return this.columnPlatenRFControlMode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HeliumPressureColumn {
                get {
                    return this.columnHeliumPressure;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HeliumPressurePercentColumn {
                get {
                    return this.columnHeliumPressurePercent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HeliumFlowWarningLevelColumn {
                get {
                    return this.columnHeliumFlowWarningLevel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HeliumFlowFaultLevelColumn {
                get {
                    return this.columnHeliumFlowFaultLevel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GasLineConfigColumn {
                get {
                    return this.columnGasLineConfig;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ArgonColumn {
                get {
                    return this.columnArgon;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ArgonPercentColumn {
                get {
                    return this.columnArgonPercent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NitrogenColumn {
                get {
                    return this.columnNitrogen;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NitrogenPercentColumn {
                get {
                    return this.columnNitrogenPercent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OxygenColumn {
                get {
                    return this.columnOxygen;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OxygenPercentColumn {
                get {
                    return this.columnOxygenPercent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Oxygen1Column {
                get {
                    return this.columnOxygen1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Oxygen1PercentColumn {
                get {
                    return this.columnOxygen1Percent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CHF3Column {
                get {
                    return this.columnCHF3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CHF3PercentColumn {
                get {
                    return this.columnCHF3Percent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SF6Column {
                get {
                    return this.columnSF6;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SF6PercentColumn {
                get {
                    return this.columnSF6Percent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BCI3Column {
                get {
                    return this.columnBCI3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BCI3PercentColumn {
                get {
                    return this.columnBCI3Percent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CI2Column {
                get {
                    return this.columnCI2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CI2PercentColumn {
                get {
                    return this.columnCI2Percent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TemNewrecipeRow this[int index] {
                get {
                    return ((TemNewrecipeRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TemNewrecipeRowChangeEventHandler TemNewrecipeRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TemNewrecipeRowChangeEventHandler TemNewrecipeRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TemNewrecipeRowChangeEventHandler TemNewrecipeRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TemNewrecipeRowChangeEventHandler TemNewrecipeRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddTemNewrecipeRow(TemNewrecipeRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TemNewrecipeRow AddTemNewrecipeRow(
                        int TemRecipeID, 
                        string recipeName, 
                        string StepName, 
                        string TimeDependentStep, 
                        string ProcessTime, 
                        string ProcessPressure, 
                        string ProcessPressurePercent, 
                        string APCSetpointPosition, 
                        string APCMode, 
                        string ActivePressureSensor, 
                        string SourcePower, 
                        string SourcePowerPercent, 
                        string SourceMUTuneCapacitor, 
                        string SourceMULoadCapacitor, 
                        string SourceRFControlMode, 
                        string PlatenPower, 
                        string PlatenPowerPercent, 
                        string PlatenCapacitorAdjust, 
                        string PlatenRFTuningCapacitor, 
                        string PlatenRFTuningCapacitorPercent, 
                        string PlatenRFLoadCapacitor, 
                        string PlatenRFLoadCapacitorPercent, 
                        string PlatenRFPaddingCapacitor, 
                        string PlatenRFControlMode, 
                        string HeliumPressure, 
                        string HeliumPressurePercent, 
                        string HeliumFlowWarningLevel, 
                        string HeliumFlowFaultLevel, 
                        string GasLineConfig, 
                        string Argon, 
                        string ArgonPercent, 
                        string Nitrogen, 
                        string NitrogenPercent, 
                        string Oxygen, 
                        string OxygenPercent, 
                        string Oxygen1, 
                        string Oxygen1Percent, 
                        string CHF3, 
                        string CHF3Percent, 
                        string SF6, 
                        string SF6Percent, 
                        string BCI3, 
                        string BCI3Percent, 
                        string CI2, 
                        string CI2Percent) {
                TemNewrecipeRow rowTemNewrecipeRow = ((TemNewrecipeRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        TemRecipeID,
                        recipeName,
                        StepName,
                        TimeDependentStep,
                        ProcessTime,
                        ProcessPressure,
                        ProcessPressurePercent,
                        APCSetpointPosition,
                        APCMode,
                        ActivePressureSensor,
                        SourcePower,
                        SourcePowerPercent,
                        SourceMUTuneCapacitor,
                        SourceMULoadCapacitor,
                        SourceRFControlMode,
                        PlatenPower,
                        PlatenPowerPercent,
                        PlatenCapacitorAdjust,
                        PlatenRFTuningCapacitor,
                        PlatenRFTuningCapacitorPercent,
                        PlatenRFLoadCapacitor,
                        PlatenRFLoadCapacitorPercent,
                        PlatenRFPaddingCapacitor,
                        PlatenRFControlMode,
                        HeliumPressure,
                        HeliumPressurePercent,
                        HeliumFlowWarningLevel,
                        HeliumFlowFaultLevel,
                        GasLineConfig,
                        Argon,
                        ArgonPercent,
                        Nitrogen,
                        NitrogenPercent,
                        Oxygen,
                        OxygenPercent,
                        Oxygen1,
                        Oxygen1Percent,
                        CHF3,
                        CHF3Percent,
                        SF6,
                        SF6Percent,
                        BCI3,
                        BCI3Percent,
                        CI2,
                        CI2Percent};
                rowTemNewrecipeRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTemNewrecipeRow);
                return rowTemNewrecipeRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                TemNewrecipeDataTable cln = ((TemNewrecipeDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TemNewrecipeDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnTemRecipeID = base.Columns["TemRecipeID"];
                this.columnrecipeName = base.Columns["recipeName"];
                this.columnStepName = base.Columns["StepName"];
                this.columnTimeDependentStep = base.Columns["TimeDependentStep"];
                this.columnProcessTime = base.Columns["ProcessTime"];
                this.columnProcessPressure = base.Columns["ProcessPressure"];
                this.columnProcessPressurePercent = base.Columns["ProcessPressurePercent"];
                this.columnAPCSetpointPosition = base.Columns["APCSetpointPosition"];
                this.columnAPCMode = base.Columns["APCMode"];
                this.columnActivePressureSensor = base.Columns["ActivePressureSensor"];
                this.columnSourcePower = base.Columns["SourcePower"];
                this.columnSourcePowerPercent = base.Columns["SourcePowerPercent"];
                this.columnSourceMUTuneCapacitor = base.Columns["SourceMUTuneCapacitor"];
                this.columnSourceMULoadCapacitor = base.Columns["SourceMULoadCapacitor"];
                this.columnSourceRFControlMode = base.Columns["SourceRFControlMode"];
                this.columnPlatenPower = base.Columns["PlatenPower"];
                this.columnPlatenPowerPercent = base.Columns["PlatenPowerPercent"];
                this.columnPlatenCapacitorAdjust = base.Columns["PlatenCapacitorAdjust"];
                this.columnPlatenRFTuningCapacitor = base.Columns["PlatenRFTuningCapacitor"];
                this.columnPlatenRFTuningCapacitorPercent = base.Columns["PlatenRFTuningCapacitorPercent"];
                this.columnPlatenRFLoadCapacitor = base.Columns["PlatenRFLoadCapacitor"];
                this.columnPlatenRFLoadCapacitorPercent = base.Columns["PlatenRFLoadCapacitorPercent"];
                this.columnPlatenRFPaddingCapacitor = base.Columns["PlatenRFPaddingCapacitor"];
                this.columnPlatenRFControlMode = base.Columns["PlatenRFControlMode"];
                this.columnHeliumPressure = base.Columns["HeliumPressure"];
                this.columnHeliumPressurePercent = base.Columns["HeliumPressurePercent"];
                this.columnHeliumFlowWarningLevel = base.Columns["HeliumFlowWarningLevel"];
                this.columnHeliumFlowFaultLevel = base.Columns["HeliumFlowFaultLevel"];
                this.columnGasLineConfig = base.Columns["GasLineConfig"];
                this.columnArgon = base.Columns["Argon"];
                this.columnArgonPercent = base.Columns["ArgonPercent"];
                this.columnNitrogen = base.Columns["Nitrogen"];
                this.columnNitrogenPercent = base.Columns["NitrogenPercent"];
                this.columnOxygen = base.Columns["Oxygen"];
                this.columnOxygenPercent = base.Columns["OxygenPercent"];
                this.columnOxygen1 = base.Columns["Oxygen1"];
                this.columnOxygen1Percent = base.Columns["Oxygen1Percent"];
                this.columnCHF3 = base.Columns["CHF3"];
                this.columnCHF3Percent = base.Columns["CHF3Percent"];
                this.columnSF6 = base.Columns["SF6"];
                this.columnSF6Percent = base.Columns["SF6Percent"];
                this.columnBCI3 = base.Columns["BCI3"];
                this.columnBCI3Percent = base.Columns["BCI3Percent"];
                this.columnCI2 = base.Columns["CI2"];
                this.columnCI2Percent = base.Columns["CI2Percent"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnTemRecipeID = new global::System.Data.DataColumn("TemRecipeID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTemRecipeID);
                this.columnrecipeName = new global::System.Data.DataColumn("recipeName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrecipeName);
                this.columnStepName = new global::System.Data.DataColumn("StepName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStepName);
                this.columnTimeDependentStep = new global::System.Data.DataColumn("TimeDependentStep", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTimeDependentStep);
                this.columnProcessTime = new global::System.Data.DataColumn("ProcessTime", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProcessTime);
                this.columnProcessPressure = new global::System.Data.DataColumn("ProcessPressure", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProcessPressure);
                this.columnProcessPressurePercent = new global::System.Data.DataColumn("ProcessPressurePercent", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProcessPressurePercent);
                this.columnAPCSetpointPosition = new global::System.Data.DataColumn("APCSetpointPosition", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAPCSetpointPosition);
                this.columnAPCMode = new global::System.Data.DataColumn("APCMode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAPCMode);
                this.columnActivePressureSensor = new global::System.Data.DataColumn("ActivePressureSensor", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnActivePressureSensor);
                this.columnSourcePower = new global::System.Data.DataColumn("SourcePower", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSourcePower);
                this.columnSourcePowerPercent = new global::System.Data.DataColumn("SourcePowerPercent", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSourcePowerPercent);
                this.columnSourceMUTuneCapacitor = new global::System.Data.DataColumn("SourceMUTuneCapacitor", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSourceMUTuneCapacitor);
                this.columnSourceMULoadCapacitor = new global::System.Data.DataColumn("SourceMULoadCapacitor", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSourceMULoadCapacitor);
                this.columnSourceRFControlMode = new global::System.Data.DataColumn("SourceRFControlMode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSourceRFControlMode);
                this.columnPlatenPower = new global::System.Data.DataColumn("PlatenPower", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPlatenPower);
                this.columnPlatenPowerPercent = new global::System.Data.DataColumn("PlatenPowerPercent", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPlatenPowerPercent);
                this.columnPlatenCapacitorAdjust = new global::System.Data.DataColumn("PlatenCapacitorAdjust", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPlatenCapacitorAdjust);
                this.columnPlatenRFTuningCapacitor = new global::System.Data.DataColumn("PlatenRFTuningCapacitor", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPlatenRFTuningCapacitor);
                this.columnPlatenRFTuningCapacitorPercent = new global::System.Data.DataColumn("PlatenRFTuningCapacitorPercent", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPlatenRFTuningCapacitorPercent);
                this.columnPlatenRFLoadCapacitor = new global::System.Data.DataColumn("PlatenRFLoadCapacitor", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPlatenRFLoadCapacitor);
                this.columnPlatenRFLoadCapacitorPercent = new global::System.Data.DataColumn("PlatenRFLoadCapacitorPercent", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPlatenRFLoadCapacitorPercent);
                this.columnPlatenRFPaddingCapacitor = new global::System.Data.DataColumn("PlatenRFPaddingCapacitor", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPlatenRFPaddingCapacitor);
                this.columnPlatenRFControlMode = new global::System.Data.DataColumn("PlatenRFControlMode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPlatenRFControlMode);
                this.columnHeliumPressure = new global::System.Data.DataColumn("HeliumPressure", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHeliumPressure);
                this.columnHeliumPressurePercent = new global::System.Data.DataColumn("HeliumPressurePercent", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHeliumPressurePercent);
                this.columnHeliumFlowWarningLevel = new global::System.Data.DataColumn("HeliumFlowWarningLevel", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHeliumFlowWarningLevel);
                this.columnHeliumFlowFaultLevel = new global::System.Data.DataColumn("HeliumFlowFaultLevel", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHeliumFlowFaultLevel);
                this.columnGasLineConfig = new global::System.Data.DataColumn("GasLineConfig", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGasLineConfig);
                this.columnArgon = new global::System.Data.DataColumn("Argon", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnArgon);
                this.columnArgonPercent = new global::System.Data.DataColumn("ArgonPercent", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnArgonPercent);
                this.columnNitrogen = new global::System.Data.DataColumn("Nitrogen", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNitrogen);
                this.columnNitrogenPercent = new global::System.Data.DataColumn("NitrogenPercent", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNitrogenPercent);
                this.columnOxygen = new global::System.Data.DataColumn("Oxygen", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOxygen);
                this.columnOxygenPercent = new global::System.Data.DataColumn("OxygenPercent", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOxygenPercent);
                this.columnOxygen1 = new global::System.Data.DataColumn("Oxygen1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOxygen1);
                this.columnOxygen1Percent = new global::System.Data.DataColumn("Oxygen1Percent", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOxygen1Percent);
                this.columnCHF3 = new global::System.Data.DataColumn("CHF3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCHF3);
                this.columnCHF3Percent = new global::System.Data.DataColumn("CHF3Percent", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCHF3Percent);
                this.columnSF6 = new global::System.Data.DataColumn("SF6", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSF6);
                this.columnSF6Percent = new global::System.Data.DataColumn("SF6Percent", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSF6Percent);
                this.columnBCI3 = new global::System.Data.DataColumn("BCI3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBCI3);
                this.columnBCI3Percent = new global::System.Data.DataColumn("BCI3Percent", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBCI3Percent);
                this.columnCI2 = new global::System.Data.DataColumn("CI2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCI2);
                this.columnCI2Percent = new global::System.Data.DataColumn("CI2Percent", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCI2Percent);
                this.columnrecipeName.MaxLength = 50;
                this.columnStepName.MaxLength = 50;
                this.columnTimeDependentStep.MaxLength = 50;
                this.columnProcessTime.MaxLength = 50;
                this.columnProcessPressure.MaxLength = 50;
                this.columnProcessPressurePercent.MaxLength = 50;
                this.columnAPCSetpointPosition.MaxLength = 50;
                this.columnAPCMode.MaxLength = 50;
                this.columnActivePressureSensor.MaxLength = 50;
                this.columnSourcePower.MaxLength = 50;
                this.columnSourcePowerPercent.MaxLength = 50;
                this.columnSourceMUTuneCapacitor.MaxLength = 50;
                this.columnSourceMULoadCapacitor.MaxLength = 50;
                this.columnSourceRFControlMode.MaxLength = 50;
                this.columnPlatenPower.MaxLength = 50;
                this.columnPlatenPowerPercent.MaxLength = 50;
                this.columnPlatenCapacitorAdjust.MaxLength = 50;
                this.columnPlatenRFTuningCapacitor.MaxLength = 50;
                this.columnPlatenRFTuningCapacitorPercent.MaxLength = 50;
                this.columnPlatenRFLoadCapacitor.MaxLength = 50;
                this.columnPlatenRFLoadCapacitorPercent.MaxLength = 50;
                this.columnPlatenRFPaddingCapacitor.MaxLength = 50;
                this.columnPlatenRFControlMode.MaxLength = 50;
                this.columnHeliumPressure.MaxLength = 50;
                this.columnHeliumPressurePercent.MaxLength = 50;
                this.columnHeliumFlowWarningLevel.MaxLength = 50;
                this.columnHeliumFlowFaultLevel.MaxLength = 50;
                this.columnGasLineConfig.MaxLength = 50;
                this.columnArgon.MaxLength = 50;
                this.columnArgonPercent.MaxLength = 50;
                this.columnNitrogen.MaxLength = 50;
                this.columnNitrogenPercent.MaxLength = 50;
                this.columnOxygen.MaxLength = 50;
                this.columnOxygenPercent.MaxLength = 50;
                this.columnOxygen1.MaxLength = 50;
                this.columnOxygen1Percent.MaxLength = 50;
                this.columnCHF3.MaxLength = 50;
                this.columnCHF3Percent.MaxLength = 50;
                this.columnSF6.MaxLength = 50;
                this.columnSF6Percent.MaxLength = 50;
                this.columnBCI3.MaxLength = 50;
                this.columnBCI3Percent.MaxLength = 50;
                this.columnCI2.MaxLength = 50;
                this.columnCI2Percent.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TemNewrecipeRow NewTemNewrecipeRow() {
                return ((TemNewrecipeRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TemNewrecipeRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(TemNewrecipeRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TemNewrecipeRowChanged != null)) {
                    this.TemNewrecipeRowChanged(this, new TemNewrecipeRowChangeEvent(((TemNewrecipeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TemNewrecipeRowChanging != null)) {
                    this.TemNewrecipeRowChanging(this, new TemNewrecipeRowChangeEvent(((TemNewrecipeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TemNewrecipeRowDeleted != null)) {
                    this.TemNewrecipeRowDeleted(this, new TemNewrecipeRowChangeEvent(((TemNewrecipeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TemNewrecipeRowDeleting != null)) {
                    this.TemNewrecipeRowDeleting(this, new TemNewrecipeRowChangeEvent(((TemNewrecipeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveTemNewrecipeRow(TemNewrecipeRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                RecipeTypeDataSet ds = new RecipeTypeDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TemNewrecipeDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class CassetteRecipeRow : global::System.Data.DataRow {
            
            private CassetteRecipeDataTable tableCassetteRecipe;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal CassetteRecipeRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCassetteRecipe = ((CassetteRecipeDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int CassetteRecipeID {
                get {
                    return ((int)(this[this.tableCassetteRecipe.CassetteRecipeIDColumn]));
                }
                set {
                    this[this.tableCassetteRecipe.CassetteRecipeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CassetteRecipeName {
                get {
                    try {
                        return ((string)(this[this.tableCassetteRecipe.CassetteRecipeNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'CassetteRecipe\' 中資料行 \'CassetteRecipeName\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableCassetteRecipe.CassetteRecipeNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime CassetteRecipeDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableCassetteRecipe.CassetteRecipeDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'CassetteRecipe\' 中資料行 \'CassetteRecipeDate\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableCassetteRecipe.CassetteRecipeDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCassetteRecipeNameNull() {
                return this.IsNull(this.tableCassetteRecipe.CassetteRecipeNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCassetteRecipeNameNull() {
                this[this.tableCassetteRecipe.CassetteRecipeNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCassetteRecipeDateNull() {
                return this.IsNull(this.tableCassetteRecipe.CassetteRecipeDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCassetteRecipeDateNull() {
                this[this.tableCassetteRecipe.CassetteRecipeDateColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class CassetteWaferRow : global::System.Data.DataRow {
            
            private CassetteWaferDataTable tableCassetteWafer;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal CassetteWaferRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCassetteWafer = ((CassetteWaferDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int CassetteWaferID {
                get {
                    return ((int)(this[this.tableCassetteWafer.CassetteWaferIDColumn]));
                }
                set {
                    this[this.tableCassetteWafer.CassetteWaferIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CassetteRecipeName {
                get {
                    return ((string)(this[this.tableCassetteWafer.CassetteRecipeNameColumn]));
                }
                set {
                    this[this.tableCassetteWafer.CassetteRecipeNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string NoOfWafers {
                get {
                    try {
                        return ((string)(this[this.tableCassetteWafer.NoOfWafersColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'CassetteWafer\' 中資料行 \'NoOfWafers\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableCassetteWafer.NoOfWafersColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string WaferRecipe {
                get {
                    try {
                        return ((string)(this[this.tableCassetteWafer.WaferRecipeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'CassetteWafer\' 中資料行 \'WaferRecipe\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableCassetteWafer.WaferRecipeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ConditioningRecipe {
                get {
                    try {
                        return ((string)(this[this.tableCassetteWafer.ConditioningRecipeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'CassetteWafer\' 中資料行 \'ConditioningRecipe\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableCassetteWafer.ConditioningRecipeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNoOfWafersNull() {
                return this.IsNull(this.tableCassetteWafer.NoOfWafersColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNoOfWafersNull() {
                this[this.tableCassetteWafer.NoOfWafersColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsWaferRecipeNull() {
                return this.IsNull(this.tableCassetteWafer.WaferRecipeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetWaferRecipeNull() {
                this[this.tableCassetteWafer.WaferRecipeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsConditioningRecipeNull() {
                return this.IsNull(this.tableCassetteWafer.ConditioningRecipeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetConditioningRecipeNull() {
                this[this.tableCassetteWafer.ConditioningRecipeColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class NewrecipeRow : global::System.Data.DataRow {
            
            private NewrecipeDataTable tableNewrecipe;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal NewrecipeRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableNewrecipe = ((NewrecipeDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Module_ICP_ID {
                get {
                    return ((int)(this[this.tableNewrecipe.Module_ICP_IDColumn]));
                }
                set {
                    this[this.tableNewrecipe.Module_ICP_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string recipeName {
                get {
                    return ((string)(this[this.tableNewrecipe.recipeNameColumn]));
                }
                set {
                    this[this.tableNewrecipe.recipeNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string StepName {
                get {
                    try {
                        return ((string)(this[this.tableNewrecipe.StepNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'Newrecipe\' 中資料行 \'StepName\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableNewrecipe.StepNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TimeDependentStep {
                get {
                    try {
                        return ((string)(this[this.tableNewrecipe.TimeDependentStepColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'Newrecipe\' 中資料行 \'TimeDependentStep\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableNewrecipe.TimeDependentStepColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ProcessTime {
                get {
                    try {
                        return ((string)(this[this.tableNewrecipe.ProcessTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'Newrecipe\' 中資料行 \'ProcessTime\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableNewrecipe.ProcessTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ProcessPressure {
                get {
                    try {
                        return ((string)(this[this.tableNewrecipe.ProcessPressureColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'Newrecipe\' 中資料行 \'ProcessPressure\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableNewrecipe.ProcessPressureColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ProcessPressurePercent {
                get {
                    try {
                        return ((string)(this[this.tableNewrecipe.ProcessPressurePercentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'Newrecipe\' 中資料行 \'ProcessPressurePercent\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableNewrecipe.ProcessPressurePercentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string APCSetpointPosition {
                get {
                    try {
                        return ((string)(this[this.tableNewrecipe.APCSetpointPositionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'Newrecipe\' 中資料行 \'APCSetpointPosition\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableNewrecipe.APCSetpointPositionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string APCMode {
                get {
                    try {
                        return ((string)(this[this.tableNewrecipe.APCModeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'Newrecipe\' 中資料行 \'APCMode\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableNewrecipe.APCModeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ActivePressureSensor {
                get {
                    try {
                        return ((string)(this[this.tableNewrecipe.ActivePressureSensorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'Newrecipe\' 中資料行 \'ActivePressureSensor\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableNewrecipe.ActivePressureSensorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SourcePower {
                get {
                    try {
                        return ((string)(this[this.tableNewrecipe.SourcePowerColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'Newrecipe\' 中資料行 \'SourcePower\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableNewrecipe.SourcePowerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SourcePowerPercent {
                get {
                    try {
                        return ((string)(this[this.tableNewrecipe.SourcePowerPercentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'Newrecipe\' 中資料行 \'SourcePowerPercent\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableNewrecipe.SourcePowerPercentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SourceMUTuneCapacitor {
                get {
                    try {
                        return ((string)(this[this.tableNewrecipe.SourceMUTuneCapacitorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'Newrecipe\' 中資料行 \'SourceMUTuneCapacitor\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableNewrecipe.SourceMUTuneCapacitorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SourceMULoadCapacitor {
                get {
                    try {
                        return ((string)(this[this.tableNewrecipe.SourceMULoadCapacitorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'Newrecipe\' 中資料行 \'SourceMULoadCapacitor\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableNewrecipe.SourceMULoadCapacitorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SourceRFControlMode {
                get {
                    try {
                        return ((string)(this[this.tableNewrecipe.SourceRFControlModeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'Newrecipe\' 中資料行 \'SourceRFControlMode\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableNewrecipe.SourceRFControlModeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PlatenPower {
                get {
                    try {
                        return ((string)(this[this.tableNewrecipe.PlatenPowerColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'Newrecipe\' 中資料行 \'PlatenPower\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableNewrecipe.PlatenPowerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PlatenPowerPercent {
                get {
                    try {
                        return ((string)(this[this.tableNewrecipe.PlatenPowerPercentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'Newrecipe\' 中資料行 \'PlatenPowerPercent\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableNewrecipe.PlatenPowerPercentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PlatenCapacitorAdjust {
                get {
                    try {
                        return ((string)(this[this.tableNewrecipe.PlatenCapacitorAdjustColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'Newrecipe\' 中資料行 \'PlatenCapacitorAdjust\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableNewrecipe.PlatenCapacitorAdjustColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PlatenRFTuningCapacitor {
                get {
                    try {
                        return ((string)(this[this.tableNewrecipe.PlatenRFTuningCapacitorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'Newrecipe\' 中資料行 \'PlatenRFTuningCapacitor\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableNewrecipe.PlatenRFTuningCapacitorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PlatenRFTuningCapacitorPercent {
                get {
                    try {
                        return ((string)(this[this.tableNewrecipe.PlatenRFTuningCapacitorPercentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'Newrecipe\' 中資料行 \'PlatenRFTuningCapacitorPercent\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableNewrecipe.PlatenRFTuningCapacitorPercentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PlatenRFLoadCapacitor {
                get {
                    try {
                        return ((string)(this[this.tableNewrecipe.PlatenRFLoadCapacitorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'Newrecipe\' 中資料行 \'PlatenRFLoadCapacitor\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableNewrecipe.PlatenRFLoadCapacitorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PlatenRFLoadCapacitorPercent {
                get {
                    try {
                        return ((string)(this[this.tableNewrecipe.PlatenRFLoadCapacitorPercentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'Newrecipe\' 中資料行 \'PlatenRFLoadCapacitorPercent\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableNewrecipe.PlatenRFLoadCapacitorPercentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PlatenRFPaddingCapacitor {
                get {
                    try {
                        return ((string)(this[this.tableNewrecipe.PlatenRFPaddingCapacitorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'Newrecipe\' 中資料行 \'PlatenRFPaddingCapacitor\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableNewrecipe.PlatenRFPaddingCapacitorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PlatenRFControlMode {
                get {
                    try {
                        return ((string)(this[this.tableNewrecipe.PlatenRFControlModeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'Newrecipe\' 中資料行 \'PlatenRFControlMode\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableNewrecipe.PlatenRFControlModeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string HeliumPressure {
                get {
                    try {
                        return ((string)(this[this.tableNewrecipe.HeliumPressureColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'Newrecipe\' 中資料行 \'HeliumPressure\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableNewrecipe.HeliumPressureColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string HeliumpressurePercent {
                get {
                    try {
                        return ((string)(this[this.tableNewrecipe.HeliumpressurePercentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'Newrecipe\' 中資料行 \'HeliumpressurePercent\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableNewrecipe.HeliumpressurePercentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string HeliumFlowWarningLevel {
                get {
                    try {
                        return ((string)(this[this.tableNewrecipe.HeliumFlowWarningLevelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'Newrecipe\' 中資料行 \'HeliumFlowWarningLevel\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableNewrecipe.HeliumFlowWarningLevelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string HeliumFlowFaultLevel {
                get {
                    try {
                        return ((string)(this[this.tableNewrecipe.HeliumFlowFaultLevelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'Newrecipe\' 中資料行 \'HeliumFlowFaultLevel\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableNewrecipe.HeliumFlowFaultLevelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string GasLineConfig {
                get {
                    try {
                        return ((string)(this[this.tableNewrecipe.GasLineConfigColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'Newrecipe\' 中資料行 \'GasLineConfig\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableNewrecipe.GasLineConfigColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Argon {
                get {
                    try {
                        return ((string)(this[this.tableNewrecipe.ArgonColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'Newrecipe\' 中資料行 \'Argon\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableNewrecipe.ArgonColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ArgonPercent {
                get {
                    try {
                        return ((string)(this[this.tableNewrecipe.ArgonPercentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'Newrecipe\' 中資料行 \'ArgonPercent\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableNewrecipe.ArgonPercentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Nitrogen {
                get {
                    try {
                        return ((string)(this[this.tableNewrecipe.NitrogenColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'Newrecipe\' 中資料行 \'Nitrogen\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableNewrecipe.NitrogenColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string NitrogenPercent {
                get {
                    try {
                        return ((string)(this[this.tableNewrecipe.NitrogenPercentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'Newrecipe\' 中資料行 \'NitrogenPercent\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableNewrecipe.NitrogenPercentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Oxygen {
                get {
                    try {
                        return ((string)(this[this.tableNewrecipe.OxygenColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'Newrecipe\' 中資料行 \'Oxygen\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableNewrecipe.OxygenColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OxygenPercent {
                get {
                    try {
                        return ((string)(this[this.tableNewrecipe.OxygenPercentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'Newrecipe\' 中資料行 \'OxygenPercent\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableNewrecipe.OxygenPercentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Oxygen1 {
                get {
                    try {
                        return ((string)(this[this.tableNewrecipe.Oxygen1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'Newrecipe\' 中資料行 \'Oxygen1\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableNewrecipe.Oxygen1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Oxygen1Percent {
                get {
                    try {
                        return ((string)(this[this.tableNewrecipe.Oxygen1PercentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'Newrecipe\' 中資料行 \'Oxygen1Percent\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableNewrecipe.Oxygen1PercentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CHF3 {
                get {
                    try {
                        return ((string)(this[this.tableNewrecipe.CHF3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'Newrecipe\' 中資料行 \'CHF3\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableNewrecipe.CHF3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CHF3Percent {
                get {
                    try {
                        return ((string)(this[this.tableNewrecipe.CHF3PercentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'Newrecipe\' 中資料行 \'CHF3Percent\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableNewrecipe.CHF3PercentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SF6 {
                get {
                    try {
                        return ((string)(this[this.tableNewrecipe.SF6Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'Newrecipe\' 中資料行 \'SF6\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableNewrecipe.SF6Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SF6Percent {
                get {
                    try {
                        return ((string)(this[this.tableNewrecipe.SF6PercentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'Newrecipe\' 中資料行 \'SF6Percent\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableNewrecipe.SF6PercentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BCI3 {
                get {
                    try {
                        return ((string)(this[this.tableNewrecipe.BCI3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'Newrecipe\' 中資料行 \'BCI3\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableNewrecipe.BCI3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BCI3Percent {
                get {
                    try {
                        return ((string)(this[this.tableNewrecipe.BCI3PercentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'Newrecipe\' 中資料行 \'BCI3Percent\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableNewrecipe.BCI3PercentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CI2 {
                get {
                    try {
                        return ((string)(this[this.tableNewrecipe.CI2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'Newrecipe\' 中資料行 \'CI2\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableNewrecipe.CI2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CI2Percent {
                get {
                    try {
                        return ((string)(this[this.tableNewrecipe.CI2PercentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'Newrecipe\' 中資料行 \'CI2Percent\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableNewrecipe.CI2PercentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsStepNameNull() {
                return this.IsNull(this.tableNewrecipe.StepNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetStepNameNull() {
                this[this.tableNewrecipe.StepNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTimeDependentStepNull() {
                return this.IsNull(this.tableNewrecipe.TimeDependentStepColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTimeDependentStepNull() {
                this[this.tableNewrecipe.TimeDependentStepColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsProcessTimeNull() {
                return this.IsNull(this.tableNewrecipe.ProcessTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetProcessTimeNull() {
                this[this.tableNewrecipe.ProcessTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsProcessPressureNull() {
                return this.IsNull(this.tableNewrecipe.ProcessPressureColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetProcessPressureNull() {
                this[this.tableNewrecipe.ProcessPressureColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsProcessPressurePercentNull() {
                return this.IsNull(this.tableNewrecipe.ProcessPressurePercentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetProcessPressurePercentNull() {
                this[this.tableNewrecipe.ProcessPressurePercentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAPCSetpointPositionNull() {
                return this.IsNull(this.tableNewrecipe.APCSetpointPositionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAPCSetpointPositionNull() {
                this[this.tableNewrecipe.APCSetpointPositionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAPCModeNull() {
                return this.IsNull(this.tableNewrecipe.APCModeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAPCModeNull() {
                this[this.tableNewrecipe.APCModeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsActivePressureSensorNull() {
                return this.IsNull(this.tableNewrecipe.ActivePressureSensorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetActivePressureSensorNull() {
                this[this.tableNewrecipe.ActivePressureSensorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSourcePowerNull() {
                return this.IsNull(this.tableNewrecipe.SourcePowerColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSourcePowerNull() {
                this[this.tableNewrecipe.SourcePowerColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSourcePowerPercentNull() {
                return this.IsNull(this.tableNewrecipe.SourcePowerPercentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSourcePowerPercentNull() {
                this[this.tableNewrecipe.SourcePowerPercentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSourceMUTuneCapacitorNull() {
                return this.IsNull(this.tableNewrecipe.SourceMUTuneCapacitorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSourceMUTuneCapacitorNull() {
                this[this.tableNewrecipe.SourceMUTuneCapacitorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSourceMULoadCapacitorNull() {
                return this.IsNull(this.tableNewrecipe.SourceMULoadCapacitorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSourceMULoadCapacitorNull() {
                this[this.tableNewrecipe.SourceMULoadCapacitorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSourceRFControlModeNull() {
                return this.IsNull(this.tableNewrecipe.SourceRFControlModeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSourceRFControlModeNull() {
                this[this.tableNewrecipe.SourceRFControlModeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPlatenPowerNull() {
                return this.IsNull(this.tableNewrecipe.PlatenPowerColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPlatenPowerNull() {
                this[this.tableNewrecipe.PlatenPowerColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPlatenPowerPercentNull() {
                return this.IsNull(this.tableNewrecipe.PlatenPowerPercentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPlatenPowerPercentNull() {
                this[this.tableNewrecipe.PlatenPowerPercentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPlatenCapacitorAdjustNull() {
                return this.IsNull(this.tableNewrecipe.PlatenCapacitorAdjustColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPlatenCapacitorAdjustNull() {
                this[this.tableNewrecipe.PlatenCapacitorAdjustColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPlatenRFTuningCapacitorNull() {
                return this.IsNull(this.tableNewrecipe.PlatenRFTuningCapacitorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPlatenRFTuningCapacitorNull() {
                this[this.tableNewrecipe.PlatenRFTuningCapacitorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPlatenRFTuningCapacitorPercentNull() {
                return this.IsNull(this.tableNewrecipe.PlatenRFTuningCapacitorPercentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPlatenRFTuningCapacitorPercentNull() {
                this[this.tableNewrecipe.PlatenRFTuningCapacitorPercentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPlatenRFLoadCapacitorNull() {
                return this.IsNull(this.tableNewrecipe.PlatenRFLoadCapacitorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPlatenRFLoadCapacitorNull() {
                this[this.tableNewrecipe.PlatenRFLoadCapacitorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPlatenRFLoadCapacitorPercentNull() {
                return this.IsNull(this.tableNewrecipe.PlatenRFLoadCapacitorPercentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPlatenRFLoadCapacitorPercentNull() {
                this[this.tableNewrecipe.PlatenRFLoadCapacitorPercentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPlatenRFPaddingCapacitorNull() {
                return this.IsNull(this.tableNewrecipe.PlatenRFPaddingCapacitorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPlatenRFPaddingCapacitorNull() {
                this[this.tableNewrecipe.PlatenRFPaddingCapacitorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPlatenRFControlModeNull() {
                return this.IsNull(this.tableNewrecipe.PlatenRFControlModeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPlatenRFControlModeNull() {
                this[this.tableNewrecipe.PlatenRFControlModeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHeliumPressureNull() {
                return this.IsNull(this.tableNewrecipe.HeliumPressureColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHeliumPressureNull() {
                this[this.tableNewrecipe.HeliumPressureColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHeliumpressurePercentNull() {
                return this.IsNull(this.tableNewrecipe.HeliumpressurePercentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHeliumpressurePercentNull() {
                this[this.tableNewrecipe.HeliumpressurePercentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHeliumFlowWarningLevelNull() {
                return this.IsNull(this.tableNewrecipe.HeliumFlowWarningLevelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHeliumFlowWarningLevelNull() {
                this[this.tableNewrecipe.HeliumFlowWarningLevelColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHeliumFlowFaultLevelNull() {
                return this.IsNull(this.tableNewrecipe.HeliumFlowFaultLevelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHeliumFlowFaultLevelNull() {
                this[this.tableNewrecipe.HeliumFlowFaultLevelColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsGasLineConfigNull() {
                return this.IsNull(this.tableNewrecipe.GasLineConfigColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetGasLineConfigNull() {
                this[this.tableNewrecipe.GasLineConfigColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsArgonNull() {
                return this.IsNull(this.tableNewrecipe.ArgonColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetArgonNull() {
                this[this.tableNewrecipe.ArgonColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsArgonPercentNull() {
                return this.IsNull(this.tableNewrecipe.ArgonPercentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetArgonPercentNull() {
                this[this.tableNewrecipe.ArgonPercentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNitrogenNull() {
                return this.IsNull(this.tableNewrecipe.NitrogenColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNitrogenNull() {
                this[this.tableNewrecipe.NitrogenColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNitrogenPercentNull() {
                return this.IsNull(this.tableNewrecipe.NitrogenPercentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNitrogenPercentNull() {
                this[this.tableNewrecipe.NitrogenPercentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOxygenNull() {
                return this.IsNull(this.tableNewrecipe.OxygenColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOxygenNull() {
                this[this.tableNewrecipe.OxygenColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOxygenPercentNull() {
                return this.IsNull(this.tableNewrecipe.OxygenPercentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOxygenPercentNull() {
                this[this.tableNewrecipe.OxygenPercentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOxygen1Null() {
                return this.IsNull(this.tableNewrecipe.Oxygen1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOxygen1Null() {
                this[this.tableNewrecipe.Oxygen1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOxygen1PercentNull() {
                return this.IsNull(this.tableNewrecipe.Oxygen1PercentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOxygen1PercentNull() {
                this[this.tableNewrecipe.Oxygen1PercentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCHF3Null() {
                return this.IsNull(this.tableNewrecipe.CHF3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCHF3Null() {
                this[this.tableNewrecipe.CHF3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCHF3PercentNull() {
                return this.IsNull(this.tableNewrecipe.CHF3PercentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCHF3PercentNull() {
                this[this.tableNewrecipe.CHF3PercentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSF6Null() {
                return this.IsNull(this.tableNewrecipe.SF6Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSF6Null() {
                this[this.tableNewrecipe.SF6Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSF6PercentNull() {
                return this.IsNull(this.tableNewrecipe.SF6PercentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSF6PercentNull() {
                this[this.tableNewrecipe.SF6PercentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBCI3Null() {
                return this.IsNull(this.tableNewrecipe.BCI3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBCI3Null() {
                this[this.tableNewrecipe.BCI3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBCI3PercentNull() {
                return this.IsNull(this.tableNewrecipe.BCI3PercentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBCI3PercentNull() {
                this[this.tableNewrecipe.BCI3PercentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCI2Null() {
                return this.IsNull(this.tableNewrecipe.CI2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCI2Null() {
                this[this.tableNewrecipe.CI2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCI2PercentNull() {
                return this.IsNull(this.tableNewrecipe.CI2PercentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCI2PercentNull() {
                this[this.tableNewrecipe.CI2PercentColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class recipeRow : global::System.Data.DataRow {
            
            private recipeDataTable tablerecipe;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal recipeRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablerecipe = ((recipeDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int recipeID {
                get {
                    return ((int)(this[this.tablerecipe.recipeIDColumn]));
                }
                set {
                    this[this.tablerecipe.recipeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string recipeName {
                get {
                    return ((string)(this[this.tablerecipe.recipeNameColumn]));
                }
                set {
                    this[this.tablerecipe.recipeNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime recipeDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablerecipe.recipeDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'recipe\' 中資料行 \'recipeDate\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablerecipe.recipeDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsrecipeDateNull() {
                return this.IsNull(this.tablerecipe.recipeDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetrecipeDateNull() {
                this[this.tablerecipe.recipeDateColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class TemCassetteWaferRow : global::System.Data.DataRow {
            
            private TemCassetteWaferDataTable tableTemCassetteWafer;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal TemCassetteWaferRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTemCassetteWafer = ((TemCassetteWaferDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int TemCassetteWaferID {
                get {
                    return ((int)(this[this.tableTemCassetteWafer.TemCassetteWaferIDColumn]));
                }
                set {
                    this[this.tableTemCassetteWafer.TemCassetteWaferIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CassetteRecipeName {
                get {
                    try {
                        return ((string)(this[this.tableTemCassetteWafer.CassetteRecipeNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'TemCassetteWafer\' 中資料行 \'CassetteRecipeName\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTemCassetteWafer.CassetteRecipeNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string NoOfWafers {
                get {
                    try {
                        return ((string)(this[this.tableTemCassetteWafer.NoOfWafersColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'TemCassetteWafer\' 中資料行 \'NoOfWafers\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTemCassetteWafer.NoOfWafersColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string WaferRecipe {
                get {
                    try {
                        return ((string)(this[this.tableTemCassetteWafer.WaferRecipeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'TemCassetteWafer\' 中資料行 \'WaferRecipe\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTemCassetteWafer.WaferRecipeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ConditioningRecipe {
                get {
                    try {
                        return ((string)(this[this.tableTemCassetteWafer.ConditioningRecipeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'TemCassetteWafer\' 中資料行 \'ConditioningRecipe\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTemCassetteWafer.ConditioningRecipeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCassetteRecipeNameNull() {
                return this.IsNull(this.tableTemCassetteWafer.CassetteRecipeNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCassetteRecipeNameNull() {
                this[this.tableTemCassetteWafer.CassetteRecipeNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNoOfWafersNull() {
                return this.IsNull(this.tableTemCassetteWafer.NoOfWafersColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNoOfWafersNull() {
                this[this.tableTemCassetteWafer.NoOfWafersColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsWaferRecipeNull() {
                return this.IsNull(this.tableTemCassetteWafer.WaferRecipeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetWaferRecipeNull() {
                this[this.tableTemCassetteWafer.WaferRecipeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsConditioningRecipeNull() {
                return this.IsNull(this.tableTemCassetteWafer.ConditioningRecipeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetConditioningRecipeNull() {
                this[this.tableTemCassetteWafer.ConditioningRecipeColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class TemNewrecipeRow : global::System.Data.DataRow {
            
            private TemNewrecipeDataTable tableTemNewrecipe;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal TemNewrecipeRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTemNewrecipe = ((TemNewrecipeDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int TemRecipeID {
                get {
                    try {
                        return ((int)(this[this.tableTemNewrecipe.TemRecipeIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'TemNewrecipe\' 中資料行 \'TemRecipeID\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTemNewrecipe.TemRecipeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string recipeName {
                get {
                    try {
                        return ((string)(this[this.tableTemNewrecipe.recipeNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'TemNewrecipe\' 中資料行 \'recipeName\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTemNewrecipe.recipeNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string StepName {
                get {
                    try {
                        return ((string)(this[this.tableTemNewrecipe.StepNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'TemNewrecipe\' 中資料行 \'StepName\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTemNewrecipe.StepNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TimeDependentStep {
                get {
                    try {
                        return ((string)(this[this.tableTemNewrecipe.TimeDependentStepColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'TemNewrecipe\' 中資料行 \'TimeDependentStep\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTemNewrecipe.TimeDependentStepColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ProcessTime {
                get {
                    try {
                        return ((string)(this[this.tableTemNewrecipe.ProcessTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'TemNewrecipe\' 中資料行 \'ProcessTime\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTemNewrecipe.ProcessTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ProcessPressure {
                get {
                    try {
                        return ((string)(this[this.tableTemNewrecipe.ProcessPressureColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'TemNewrecipe\' 中資料行 \'ProcessPressure\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTemNewrecipe.ProcessPressureColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ProcessPressurePercent {
                get {
                    try {
                        return ((string)(this[this.tableTemNewrecipe.ProcessPressurePercentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'TemNewrecipe\' 中資料行 \'ProcessPressurePercent\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTemNewrecipe.ProcessPressurePercentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string APCSetpointPosition {
                get {
                    try {
                        return ((string)(this[this.tableTemNewrecipe.APCSetpointPositionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'TemNewrecipe\' 中資料行 \'APCSetpointPosition\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTemNewrecipe.APCSetpointPositionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string APCMode {
                get {
                    try {
                        return ((string)(this[this.tableTemNewrecipe.APCModeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'TemNewrecipe\' 中資料行 \'APCMode\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTemNewrecipe.APCModeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ActivePressureSensor {
                get {
                    try {
                        return ((string)(this[this.tableTemNewrecipe.ActivePressureSensorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'TemNewrecipe\' 中資料行 \'ActivePressureSensor\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTemNewrecipe.ActivePressureSensorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SourcePower {
                get {
                    try {
                        return ((string)(this[this.tableTemNewrecipe.SourcePowerColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'TemNewrecipe\' 中資料行 \'SourcePower\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTemNewrecipe.SourcePowerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SourcePowerPercent {
                get {
                    try {
                        return ((string)(this[this.tableTemNewrecipe.SourcePowerPercentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'TemNewrecipe\' 中資料行 \'SourcePowerPercent\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTemNewrecipe.SourcePowerPercentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SourceMUTuneCapacitor {
                get {
                    try {
                        return ((string)(this[this.tableTemNewrecipe.SourceMUTuneCapacitorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'TemNewrecipe\' 中資料行 \'SourceMUTuneCapacitor\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTemNewrecipe.SourceMUTuneCapacitorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SourceMULoadCapacitor {
                get {
                    try {
                        return ((string)(this[this.tableTemNewrecipe.SourceMULoadCapacitorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'TemNewrecipe\' 中資料行 \'SourceMULoadCapacitor\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTemNewrecipe.SourceMULoadCapacitorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SourceRFControlMode {
                get {
                    try {
                        return ((string)(this[this.tableTemNewrecipe.SourceRFControlModeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'TemNewrecipe\' 中資料行 \'SourceRFControlMode\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTemNewrecipe.SourceRFControlModeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PlatenPower {
                get {
                    try {
                        return ((string)(this[this.tableTemNewrecipe.PlatenPowerColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'TemNewrecipe\' 中資料行 \'PlatenPower\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTemNewrecipe.PlatenPowerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PlatenPowerPercent {
                get {
                    try {
                        return ((string)(this[this.tableTemNewrecipe.PlatenPowerPercentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'TemNewrecipe\' 中資料行 \'PlatenPowerPercent\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTemNewrecipe.PlatenPowerPercentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PlatenCapacitorAdjust {
                get {
                    try {
                        return ((string)(this[this.tableTemNewrecipe.PlatenCapacitorAdjustColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'TemNewrecipe\' 中資料行 \'PlatenCapacitorAdjust\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTemNewrecipe.PlatenCapacitorAdjustColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PlatenRFTuningCapacitor {
                get {
                    try {
                        return ((string)(this[this.tableTemNewrecipe.PlatenRFTuningCapacitorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'TemNewrecipe\' 中資料行 \'PlatenRFTuningCapacitor\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTemNewrecipe.PlatenRFTuningCapacitorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PlatenRFTuningCapacitorPercent {
                get {
                    try {
                        return ((string)(this[this.tableTemNewrecipe.PlatenRFTuningCapacitorPercentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'TemNewrecipe\' 中資料行 \'PlatenRFTuningCapacitorPercent\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTemNewrecipe.PlatenRFTuningCapacitorPercentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PlatenRFLoadCapacitor {
                get {
                    try {
                        return ((string)(this[this.tableTemNewrecipe.PlatenRFLoadCapacitorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'TemNewrecipe\' 中資料行 \'PlatenRFLoadCapacitor\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTemNewrecipe.PlatenRFLoadCapacitorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PlatenRFLoadCapacitorPercent {
                get {
                    try {
                        return ((string)(this[this.tableTemNewrecipe.PlatenRFLoadCapacitorPercentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'TemNewrecipe\' 中資料行 \'PlatenRFLoadCapacitorPercent\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTemNewrecipe.PlatenRFLoadCapacitorPercentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PlatenRFPaddingCapacitor {
                get {
                    try {
                        return ((string)(this[this.tableTemNewrecipe.PlatenRFPaddingCapacitorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'TemNewrecipe\' 中資料行 \'PlatenRFPaddingCapacitor\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTemNewrecipe.PlatenRFPaddingCapacitorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PlatenRFControlMode {
                get {
                    try {
                        return ((string)(this[this.tableTemNewrecipe.PlatenRFControlModeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'TemNewrecipe\' 中資料行 \'PlatenRFControlMode\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTemNewrecipe.PlatenRFControlModeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string HeliumPressure {
                get {
                    try {
                        return ((string)(this[this.tableTemNewrecipe.HeliumPressureColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'TemNewrecipe\' 中資料行 \'HeliumPressure\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTemNewrecipe.HeliumPressureColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string HeliumPressurePercent {
                get {
                    try {
                        return ((string)(this[this.tableTemNewrecipe.HeliumPressurePercentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'TemNewrecipe\' 中資料行 \'HeliumPressurePercent\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTemNewrecipe.HeliumPressurePercentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string HeliumFlowWarningLevel {
                get {
                    try {
                        return ((string)(this[this.tableTemNewrecipe.HeliumFlowWarningLevelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'TemNewrecipe\' 中資料行 \'HeliumFlowWarningLevel\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTemNewrecipe.HeliumFlowWarningLevelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string HeliumFlowFaultLevel {
                get {
                    try {
                        return ((string)(this[this.tableTemNewrecipe.HeliumFlowFaultLevelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'TemNewrecipe\' 中資料行 \'HeliumFlowFaultLevel\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTemNewrecipe.HeliumFlowFaultLevelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string GasLineConfig {
                get {
                    try {
                        return ((string)(this[this.tableTemNewrecipe.GasLineConfigColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'TemNewrecipe\' 中資料行 \'GasLineConfig\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTemNewrecipe.GasLineConfigColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Argon {
                get {
                    try {
                        return ((string)(this[this.tableTemNewrecipe.ArgonColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'TemNewrecipe\' 中資料行 \'Argon\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTemNewrecipe.ArgonColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ArgonPercent {
                get {
                    try {
                        return ((string)(this[this.tableTemNewrecipe.ArgonPercentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'TemNewrecipe\' 中資料行 \'ArgonPercent\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTemNewrecipe.ArgonPercentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Nitrogen {
                get {
                    try {
                        return ((string)(this[this.tableTemNewrecipe.NitrogenColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'TemNewrecipe\' 中資料行 \'Nitrogen\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTemNewrecipe.NitrogenColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string NitrogenPercent {
                get {
                    try {
                        return ((string)(this[this.tableTemNewrecipe.NitrogenPercentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'TemNewrecipe\' 中資料行 \'NitrogenPercent\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTemNewrecipe.NitrogenPercentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Oxygen {
                get {
                    try {
                        return ((string)(this[this.tableTemNewrecipe.OxygenColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'TemNewrecipe\' 中資料行 \'Oxygen\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTemNewrecipe.OxygenColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OxygenPercent {
                get {
                    try {
                        return ((string)(this[this.tableTemNewrecipe.OxygenPercentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'TemNewrecipe\' 中資料行 \'OxygenPercent\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTemNewrecipe.OxygenPercentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Oxygen1 {
                get {
                    try {
                        return ((string)(this[this.tableTemNewrecipe.Oxygen1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'TemNewrecipe\' 中資料行 \'Oxygen1\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTemNewrecipe.Oxygen1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Oxygen1Percent {
                get {
                    try {
                        return ((string)(this[this.tableTemNewrecipe.Oxygen1PercentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'TemNewrecipe\' 中資料行 \'Oxygen1Percent\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTemNewrecipe.Oxygen1PercentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CHF3 {
                get {
                    try {
                        return ((string)(this[this.tableTemNewrecipe.CHF3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'TemNewrecipe\' 中資料行 \'CHF3\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTemNewrecipe.CHF3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CHF3Percent {
                get {
                    try {
                        return ((string)(this[this.tableTemNewrecipe.CHF3PercentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'TemNewrecipe\' 中資料行 \'CHF3Percent\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTemNewrecipe.CHF3PercentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SF6 {
                get {
                    try {
                        return ((string)(this[this.tableTemNewrecipe.SF6Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'TemNewrecipe\' 中資料行 \'SF6\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTemNewrecipe.SF6Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SF6Percent {
                get {
                    try {
                        return ((string)(this[this.tableTemNewrecipe.SF6PercentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'TemNewrecipe\' 中資料行 \'SF6Percent\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTemNewrecipe.SF6PercentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BCI3 {
                get {
                    try {
                        return ((string)(this[this.tableTemNewrecipe.BCI3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'TemNewrecipe\' 中資料行 \'BCI3\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTemNewrecipe.BCI3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BCI3Percent {
                get {
                    try {
                        return ((string)(this[this.tableTemNewrecipe.BCI3PercentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'TemNewrecipe\' 中資料行 \'BCI3Percent\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTemNewrecipe.BCI3PercentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CI2 {
                get {
                    try {
                        return ((string)(this[this.tableTemNewrecipe.CI2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'TemNewrecipe\' 中資料行 \'CI2\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTemNewrecipe.CI2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CI2Percent {
                get {
                    try {
                        return ((string)(this[this.tableTemNewrecipe.CI2PercentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'TemNewrecipe\' 中資料行 \'CI2Percent\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTemNewrecipe.CI2PercentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTemRecipeIDNull() {
                return this.IsNull(this.tableTemNewrecipe.TemRecipeIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTemRecipeIDNull() {
                this[this.tableTemNewrecipe.TemRecipeIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsrecipeNameNull() {
                return this.IsNull(this.tableTemNewrecipe.recipeNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetrecipeNameNull() {
                this[this.tableTemNewrecipe.recipeNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsStepNameNull() {
                return this.IsNull(this.tableTemNewrecipe.StepNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetStepNameNull() {
                this[this.tableTemNewrecipe.StepNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTimeDependentStepNull() {
                return this.IsNull(this.tableTemNewrecipe.TimeDependentStepColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTimeDependentStepNull() {
                this[this.tableTemNewrecipe.TimeDependentStepColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsProcessTimeNull() {
                return this.IsNull(this.tableTemNewrecipe.ProcessTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetProcessTimeNull() {
                this[this.tableTemNewrecipe.ProcessTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsProcessPressureNull() {
                return this.IsNull(this.tableTemNewrecipe.ProcessPressureColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetProcessPressureNull() {
                this[this.tableTemNewrecipe.ProcessPressureColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsProcessPressurePercentNull() {
                return this.IsNull(this.tableTemNewrecipe.ProcessPressurePercentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetProcessPressurePercentNull() {
                this[this.tableTemNewrecipe.ProcessPressurePercentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAPCSetpointPositionNull() {
                return this.IsNull(this.tableTemNewrecipe.APCSetpointPositionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAPCSetpointPositionNull() {
                this[this.tableTemNewrecipe.APCSetpointPositionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAPCModeNull() {
                return this.IsNull(this.tableTemNewrecipe.APCModeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAPCModeNull() {
                this[this.tableTemNewrecipe.APCModeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsActivePressureSensorNull() {
                return this.IsNull(this.tableTemNewrecipe.ActivePressureSensorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetActivePressureSensorNull() {
                this[this.tableTemNewrecipe.ActivePressureSensorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSourcePowerNull() {
                return this.IsNull(this.tableTemNewrecipe.SourcePowerColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSourcePowerNull() {
                this[this.tableTemNewrecipe.SourcePowerColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSourcePowerPercentNull() {
                return this.IsNull(this.tableTemNewrecipe.SourcePowerPercentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSourcePowerPercentNull() {
                this[this.tableTemNewrecipe.SourcePowerPercentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSourceMUTuneCapacitorNull() {
                return this.IsNull(this.tableTemNewrecipe.SourceMUTuneCapacitorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSourceMUTuneCapacitorNull() {
                this[this.tableTemNewrecipe.SourceMUTuneCapacitorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSourceMULoadCapacitorNull() {
                return this.IsNull(this.tableTemNewrecipe.SourceMULoadCapacitorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSourceMULoadCapacitorNull() {
                this[this.tableTemNewrecipe.SourceMULoadCapacitorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSourceRFControlModeNull() {
                return this.IsNull(this.tableTemNewrecipe.SourceRFControlModeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSourceRFControlModeNull() {
                this[this.tableTemNewrecipe.SourceRFControlModeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPlatenPowerNull() {
                return this.IsNull(this.tableTemNewrecipe.PlatenPowerColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPlatenPowerNull() {
                this[this.tableTemNewrecipe.PlatenPowerColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPlatenPowerPercentNull() {
                return this.IsNull(this.tableTemNewrecipe.PlatenPowerPercentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPlatenPowerPercentNull() {
                this[this.tableTemNewrecipe.PlatenPowerPercentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPlatenCapacitorAdjustNull() {
                return this.IsNull(this.tableTemNewrecipe.PlatenCapacitorAdjustColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPlatenCapacitorAdjustNull() {
                this[this.tableTemNewrecipe.PlatenCapacitorAdjustColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPlatenRFTuningCapacitorNull() {
                return this.IsNull(this.tableTemNewrecipe.PlatenRFTuningCapacitorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPlatenRFTuningCapacitorNull() {
                this[this.tableTemNewrecipe.PlatenRFTuningCapacitorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPlatenRFTuningCapacitorPercentNull() {
                return this.IsNull(this.tableTemNewrecipe.PlatenRFTuningCapacitorPercentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPlatenRFTuningCapacitorPercentNull() {
                this[this.tableTemNewrecipe.PlatenRFTuningCapacitorPercentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPlatenRFLoadCapacitorNull() {
                return this.IsNull(this.tableTemNewrecipe.PlatenRFLoadCapacitorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPlatenRFLoadCapacitorNull() {
                this[this.tableTemNewrecipe.PlatenRFLoadCapacitorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPlatenRFLoadCapacitorPercentNull() {
                return this.IsNull(this.tableTemNewrecipe.PlatenRFLoadCapacitorPercentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPlatenRFLoadCapacitorPercentNull() {
                this[this.tableTemNewrecipe.PlatenRFLoadCapacitorPercentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPlatenRFPaddingCapacitorNull() {
                return this.IsNull(this.tableTemNewrecipe.PlatenRFPaddingCapacitorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPlatenRFPaddingCapacitorNull() {
                this[this.tableTemNewrecipe.PlatenRFPaddingCapacitorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPlatenRFControlModeNull() {
                return this.IsNull(this.tableTemNewrecipe.PlatenRFControlModeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPlatenRFControlModeNull() {
                this[this.tableTemNewrecipe.PlatenRFControlModeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHeliumPressureNull() {
                return this.IsNull(this.tableTemNewrecipe.HeliumPressureColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHeliumPressureNull() {
                this[this.tableTemNewrecipe.HeliumPressureColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHeliumPressurePercentNull() {
                return this.IsNull(this.tableTemNewrecipe.HeliumPressurePercentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHeliumPressurePercentNull() {
                this[this.tableTemNewrecipe.HeliumPressurePercentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHeliumFlowWarningLevelNull() {
                return this.IsNull(this.tableTemNewrecipe.HeliumFlowWarningLevelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHeliumFlowWarningLevelNull() {
                this[this.tableTemNewrecipe.HeliumFlowWarningLevelColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHeliumFlowFaultLevelNull() {
                return this.IsNull(this.tableTemNewrecipe.HeliumFlowFaultLevelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHeliumFlowFaultLevelNull() {
                this[this.tableTemNewrecipe.HeliumFlowFaultLevelColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsGasLineConfigNull() {
                return this.IsNull(this.tableTemNewrecipe.GasLineConfigColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetGasLineConfigNull() {
                this[this.tableTemNewrecipe.GasLineConfigColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsArgonNull() {
                return this.IsNull(this.tableTemNewrecipe.ArgonColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetArgonNull() {
                this[this.tableTemNewrecipe.ArgonColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsArgonPercentNull() {
                return this.IsNull(this.tableTemNewrecipe.ArgonPercentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetArgonPercentNull() {
                this[this.tableTemNewrecipe.ArgonPercentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNitrogenNull() {
                return this.IsNull(this.tableTemNewrecipe.NitrogenColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNitrogenNull() {
                this[this.tableTemNewrecipe.NitrogenColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNitrogenPercentNull() {
                return this.IsNull(this.tableTemNewrecipe.NitrogenPercentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNitrogenPercentNull() {
                this[this.tableTemNewrecipe.NitrogenPercentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOxygenNull() {
                return this.IsNull(this.tableTemNewrecipe.OxygenColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOxygenNull() {
                this[this.tableTemNewrecipe.OxygenColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOxygenPercentNull() {
                return this.IsNull(this.tableTemNewrecipe.OxygenPercentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOxygenPercentNull() {
                this[this.tableTemNewrecipe.OxygenPercentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOxygen1Null() {
                return this.IsNull(this.tableTemNewrecipe.Oxygen1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOxygen1Null() {
                this[this.tableTemNewrecipe.Oxygen1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOxygen1PercentNull() {
                return this.IsNull(this.tableTemNewrecipe.Oxygen1PercentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOxygen1PercentNull() {
                this[this.tableTemNewrecipe.Oxygen1PercentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCHF3Null() {
                return this.IsNull(this.tableTemNewrecipe.CHF3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCHF3Null() {
                this[this.tableTemNewrecipe.CHF3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCHF3PercentNull() {
                return this.IsNull(this.tableTemNewrecipe.CHF3PercentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCHF3PercentNull() {
                this[this.tableTemNewrecipe.CHF3PercentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSF6Null() {
                return this.IsNull(this.tableTemNewrecipe.SF6Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSF6Null() {
                this[this.tableTemNewrecipe.SF6Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSF6PercentNull() {
                return this.IsNull(this.tableTemNewrecipe.SF6PercentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSF6PercentNull() {
                this[this.tableTemNewrecipe.SF6PercentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBCI3Null() {
                return this.IsNull(this.tableTemNewrecipe.BCI3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBCI3Null() {
                this[this.tableTemNewrecipe.BCI3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBCI3PercentNull() {
                return this.IsNull(this.tableTemNewrecipe.BCI3PercentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBCI3PercentNull() {
                this[this.tableTemNewrecipe.BCI3PercentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCI2Null() {
                return this.IsNull(this.tableTemNewrecipe.CI2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCI2Null() {
                this[this.tableTemNewrecipe.CI2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCI2PercentNull() {
                return this.IsNull(this.tableTemNewrecipe.CI2PercentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCI2PercentNull() {
                this[this.tableTemNewrecipe.CI2PercentColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class CassetteRecipeRowChangeEvent : global::System.EventArgs {
            
            private CassetteRecipeRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CassetteRecipeRowChangeEvent(CassetteRecipeRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CassetteRecipeRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class CassetteWaferRowChangeEvent : global::System.EventArgs {
            
            private CassetteWaferRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CassetteWaferRowChangeEvent(CassetteWaferRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CassetteWaferRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class NewrecipeRowChangeEvent : global::System.EventArgs {
            
            private NewrecipeRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public NewrecipeRowChangeEvent(NewrecipeRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public NewrecipeRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class recipeRowChangeEvent : global::System.EventArgs {
            
            private recipeRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public recipeRowChangeEvent(recipeRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public recipeRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class TemCassetteWaferRowChangeEvent : global::System.EventArgs {
            
            private TemCassetteWaferRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TemCassetteWaferRowChangeEvent(TemCassetteWaferRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TemCassetteWaferRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class TemNewrecipeRowChangeEvent : global::System.EventArgs {
            
            private TemNewrecipeRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TemNewrecipeRowChangeEvent(TemNewrecipeRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TemNewrecipeRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace SimulatorApplication.RecipeTypeDataSetTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class CassetteRecipeTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public CassetteRecipeTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "CassetteRecipe";
            tableMapping.ColumnMappings.Add("CassetteRecipeID", "CassetteRecipeID");
            tableMapping.ColumnMappings.Add("CassetteRecipeName", "CassetteRecipeName");
            tableMapping.ColumnMappings.Add("CassetteRecipeDate", "CassetteRecipeDate");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[CassetteRecipe] WHERE (([CassetteRecipeID] = @Original_CassetteRecipeID) AND ((@IsNull_CassetteRecipeName = 1 AND [CassetteRecipeName] IS NULL) OR ([CassetteRecipeName] = @Original_CassetteRecipeName)) AND ((@IsNull_CassetteRecipeDate = 1 AND [CassetteRecipeDate] IS NULL) OR ([CassetteRecipeDate] = @Original_CassetteRecipeDate)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CassetteRecipeID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CassetteRecipeID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CassetteRecipeName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CassetteRecipeName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CassetteRecipeName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CassetteRecipeName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CassetteRecipeDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CassetteRecipeDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CassetteRecipeDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CassetteRecipeDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[CassetteRecipe] ([CassetteRecipeName], [CassetteRecipeDate]) VALUES (@CassetteRecipeName, @CassetteRecipeDate);
SELECT CassetteRecipeID, CassetteRecipeName, CassetteRecipeDate FROM CassetteRecipe WHERE (CassetteRecipeID = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CassetteRecipeName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CassetteRecipeName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CassetteRecipeDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CassetteRecipeDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[CassetteRecipe] SET [CassetteRecipeName] = @CassetteRecipeName, [CassetteRecipeDate] = @CassetteRecipeDate WHERE (([CassetteRecipeID] = @Original_CassetteRecipeID) AND ((@IsNull_CassetteRecipeName = 1 AND [CassetteRecipeName] IS NULL) OR ([CassetteRecipeName] = @Original_CassetteRecipeName)) AND ((@IsNull_CassetteRecipeDate = 1 AND [CassetteRecipeDate] IS NULL) OR ([CassetteRecipeDate] = @Original_CassetteRecipeDate)));
SELECT CassetteRecipeID, CassetteRecipeName, CassetteRecipeDate FROM CassetteRecipe WHERE (CassetteRecipeID = @CassetteRecipeID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CassetteRecipeName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CassetteRecipeName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CassetteRecipeDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CassetteRecipeDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CassetteRecipeID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CassetteRecipeID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CassetteRecipeName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CassetteRecipeName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CassetteRecipeName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CassetteRecipeName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CassetteRecipeDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CassetteRecipeDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CassetteRecipeDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CassetteRecipeDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CassetteRecipeID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "CassetteRecipeID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::SimulatorApplication.Properties.Settings.Default.RecipeTypeConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT CassetteRecipeID, CassetteRecipeName, CassetteRecipeDate FROM dbo.Cassette" +
                "Recipe";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(RecipeTypeDataSet.CassetteRecipeDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual RecipeTypeDataSet.CassetteRecipeDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            RecipeTypeDataSet.CassetteRecipeDataTable dataTable = new RecipeTypeDataSet.CassetteRecipeDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(RecipeTypeDataSet.CassetteRecipeDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(RecipeTypeDataSet dataSet) {
            return this.Adapter.Update(dataSet, "CassetteRecipe");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_CassetteRecipeID, string Original_CassetteRecipeName, global::System.Nullable<global::System.DateTime> Original_CassetteRecipeDate) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_CassetteRecipeID));
            if ((Original_CassetteRecipeName == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_CassetteRecipeName));
            }
            if ((Original_CassetteRecipeDate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((System.DateTime)(Original_CassetteRecipeDate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string CassetteRecipeName, global::System.Nullable<global::System.DateTime> CassetteRecipeDate) {
            if ((CassetteRecipeName == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(CassetteRecipeName));
            }
            if ((CassetteRecipeDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((System.DateTime)(CassetteRecipeDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string CassetteRecipeName, global::System.Nullable<global::System.DateTime> CassetteRecipeDate, int Original_CassetteRecipeID, string Original_CassetteRecipeName, global::System.Nullable<global::System.DateTime> Original_CassetteRecipeDate, int CassetteRecipeID) {
            if ((CassetteRecipeName == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(CassetteRecipeName));
            }
            if ((CassetteRecipeDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((System.DateTime)(CassetteRecipeDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(Original_CassetteRecipeID));
            if ((Original_CassetteRecipeName == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Original_CassetteRecipeName));
            }
            if ((Original_CassetteRecipeDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[6].Value = ((System.DateTime)(Original_CassetteRecipeDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(CassetteRecipeID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string CassetteRecipeName, global::System.Nullable<global::System.DateTime> CassetteRecipeDate, int Original_CassetteRecipeID, string Original_CassetteRecipeName, global::System.Nullable<global::System.DateTime> Original_CassetteRecipeDate) {
            return this.Update(CassetteRecipeName, CassetteRecipeDate, Original_CassetteRecipeID, Original_CassetteRecipeName, Original_CassetteRecipeDate, Original_CassetteRecipeID);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class CassetteWaferTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public CassetteWaferTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "CassetteWafer";
            tableMapping.ColumnMappings.Add("CassetteWaferID", "CassetteWaferID");
            tableMapping.ColumnMappings.Add("CassetteRecipeName", "CassetteRecipeName");
            tableMapping.ColumnMappings.Add("NoOfWafers", "NoOfWafers");
            tableMapping.ColumnMappings.Add("WaferRecipe", "WaferRecipe");
            tableMapping.ColumnMappings.Add("ConditioningRecipe", "ConditioningRecipe");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[CassetteWafer] WHERE (([CassetteWaferID] = @Original_CassetteWaferID) AND ([CassetteRecipeName] = @Original_CassetteRecipeName) AND ((@IsNull_NoOfWafers = 1 AND [NoOfWafers] IS NULL) OR ([NoOfWafers] = @Original_NoOfWafers)) AND ((@IsNull_WaferRecipe = 1 AND [WaferRecipe] IS NULL) OR ([WaferRecipe] = @Original_WaferRecipe)) AND ((@IsNull_ConditioningRecipe = 1 AND [ConditioningRecipe] IS NULL) OR ([ConditioningRecipe] = @Original_ConditioningRecipe)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CassetteWaferID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CassetteWaferID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CassetteRecipeName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CassetteRecipeName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_NoOfWafers", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NoOfWafers", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NoOfWafers", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NoOfWafers", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_WaferRecipe", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WaferRecipe", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_WaferRecipe", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WaferRecipe", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ConditioningRecipe", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConditioningRecipe", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ConditioningRecipe", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConditioningRecipe", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[CassetteWafer] ([CassetteRecipeName], [NoOfWafers], [WaferRecipe], [ConditioningRecipe]) VALUES (@CassetteRecipeName, @NoOfWafers, @WaferRecipe, @ConditioningRecipe);
SELECT CassetteWaferID, CassetteRecipeName, NoOfWafers, WaferRecipe, ConditioningRecipe FROM CassetteWafer WHERE (CassetteWaferID = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CassetteRecipeName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CassetteRecipeName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NoOfWafers", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NoOfWafers", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WaferRecipe", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WaferRecipe", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ConditioningRecipe", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConditioningRecipe", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[CassetteWafer] SET [CassetteRecipeName] = @CassetteRecipeName, [NoOfWafers] = @NoOfWafers, [WaferRecipe] = @WaferRecipe, [ConditioningRecipe] = @ConditioningRecipe WHERE (([CassetteWaferID] = @Original_CassetteWaferID) AND ([CassetteRecipeName] = @Original_CassetteRecipeName) AND ((@IsNull_NoOfWafers = 1 AND [NoOfWafers] IS NULL) OR ([NoOfWafers] = @Original_NoOfWafers)) AND ((@IsNull_WaferRecipe = 1 AND [WaferRecipe] IS NULL) OR ([WaferRecipe] = @Original_WaferRecipe)) AND ((@IsNull_ConditioningRecipe = 1 AND [ConditioningRecipe] IS NULL) OR ([ConditioningRecipe] = @Original_ConditioningRecipe)));
SELECT CassetteWaferID, CassetteRecipeName, NoOfWafers, WaferRecipe, ConditioningRecipe FROM CassetteWafer WHERE (CassetteWaferID = @CassetteWaferID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CassetteRecipeName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CassetteRecipeName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NoOfWafers", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NoOfWafers", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WaferRecipe", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WaferRecipe", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ConditioningRecipe", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConditioningRecipe", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CassetteWaferID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CassetteWaferID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CassetteRecipeName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CassetteRecipeName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_NoOfWafers", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NoOfWafers", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NoOfWafers", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NoOfWafers", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_WaferRecipe", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WaferRecipe", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_WaferRecipe", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WaferRecipe", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ConditioningRecipe", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConditioningRecipe", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ConditioningRecipe", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConditioningRecipe", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CassetteWaferID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "CassetteWaferID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::SimulatorApplication.Properties.Settings.Default.RecipeTypeConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT CassetteWaferID, CassetteRecipeName, NoOfWafers, WaferRecipe, Conditioning" +
                "Recipe FROM dbo.CassetteWafer";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(RecipeTypeDataSet.CassetteWaferDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual RecipeTypeDataSet.CassetteWaferDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            RecipeTypeDataSet.CassetteWaferDataTable dataTable = new RecipeTypeDataSet.CassetteWaferDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(RecipeTypeDataSet.CassetteWaferDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(RecipeTypeDataSet dataSet) {
            return this.Adapter.Update(dataSet, "CassetteWafer");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_CassetteWaferID, string Original_CassetteRecipeName, string Original_NoOfWafers, string Original_WaferRecipe, string Original_ConditioningRecipe) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_CassetteWaferID));
            if ((Original_CassetteRecipeName == null)) {
                throw new global::System.ArgumentNullException("Original_CassetteRecipeName");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_CassetteRecipeName));
            }
            if ((Original_NoOfWafers == null)) {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_NoOfWafers));
            }
            if ((Original_WaferRecipe == null)) {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_WaferRecipe));
            }
            if ((Original_ConditioningRecipe == null)) {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_ConditioningRecipe));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string CassetteRecipeName, string NoOfWafers, string WaferRecipe, string ConditioningRecipe) {
            if ((CassetteRecipeName == null)) {
                throw new global::System.ArgumentNullException("CassetteRecipeName");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(CassetteRecipeName));
            }
            if ((NoOfWafers == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(NoOfWafers));
            }
            if ((WaferRecipe == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(WaferRecipe));
            }
            if ((ConditioningRecipe == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(ConditioningRecipe));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string CassetteRecipeName, string NoOfWafers, string WaferRecipe, string ConditioningRecipe, int Original_CassetteWaferID, string Original_CassetteRecipeName, string Original_NoOfWafers, string Original_WaferRecipe, string Original_ConditioningRecipe, int CassetteWaferID) {
            if ((CassetteRecipeName == null)) {
                throw new global::System.ArgumentNullException("CassetteRecipeName");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(CassetteRecipeName));
            }
            if ((NoOfWafers == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(NoOfWafers));
            }
            if ((WaferRecipe == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(WaferRecipe));
            }
            if ((ConditioningRecipe == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(ConditioningRecipe));
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(Original_CassetteWaferID));
            if ((Original_CassetteRecipeName == null)) {
                throw new global::System.ArgumentNullException("Original_CassetteRecipeName");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Original_CassetteRecipeName));
            }
            if ((Original_NoOfWafers == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_NoOfWafers));
            }
            if ((Original_WaferRecipe == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_WaferRecipe));
            }
            if ((Original_ConditioningRecipe == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_ConditioningRecipe));
            }
            this.Adapter.UpdateCommand.Parameters[12].Value = ((int)(CassetteWaferID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string CassetteRecipeName, string NoOfWafers, string WaferRecipe, string ConditioningRecipe, int Original_CassetteWaferID, string Original_CassetteRecipeName, string Original_NoOfWafers, string Original_WaferRecipe, string Original_ConditioningRecipe) {
            return this.Update(CassetteRecipeName, NoOfWafers, WaferRecipe, ConditioningRecipe, Original_CassetteWaferID, Original_CassetteRecipeName, Original_NoOfWafers, Original_WaferRecipe, Original_ConditioningRecipe, Original_CassetteWaferID);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class NewrecipeTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public NewrecipeTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Newrecipe";
            tableMapping.ColumnMappings.Add("Module ICP ID", "Module ICP ID");
            tableMapping.ColumnMappings.Add("recipeName", "recipeName");
            tableMapping.ColumnMappings.Add("StepName", "StepName");
            tableMapping.ColumnMappings.Add("TimeDependentStep", "TimeDependentStep");
            tableMapping.ColumnMappings.Add("ProcessTime", "ProcessTime");
            tableMapping.ColumnMappings.Add("ProcessPressure", "ProcessPressure");
            tableMapping.ColumnMappings.Add("ProcessPressurePercent", "ProcessPressurePercent");
            tableMapping.ColumnMappings.Add("APCSetpointPosition", "APCSetpointPosition");
            tableMapping.ColumnMappings.Add("APCMode", "APCMode");
            tableMapping.ColumnMappings.Add("ActivePressureSensor", "ActivePressureSensor");
            tableMapping.ColumnMappings.Add("SourcePower", "SourcePower");
            tableMapping.ColumnMappings.Add("SourcePowerPercent", "SourcePowerPercent");
            tableMapping.ColumnMappings.Add("SourceMUTuneCapacitor", "SourceMUTuneCapacitor");
            tableMapping.ColumnMappings.Add("SourceMULoadCapacitor", "SourceMULoadCapacitor");
            tableMapping.ColumnMappings.Add("SourceRFControlMode", "SourceRFControlMode");
            tableMapping.ColumnMappings.Add("PlatenPower", "PlatenPower");
            tableMapping.ColumnMappings.Add("PlatenPowerPercent", "PlatenPowerPercent");
            tableMapping.ColumnMappings.Add("PlatenCapacitorAdjust", "PlatenCapacitorAdjust");
            tableMapping.ColumnMappings.Add("PlatenRFTuningCapacitor", "PlatenRFTuningCapacitor");
            tableMapping.ColumnMappings.Add("PlatenRFTuningCapacitorPercent", "PlatenRFTuningCapacitorPercent");
            tableMapping.ColumnMappings.Add("PlatenRFLoadCapacitor", "PlatenRFLoadCapacitor");
            tableMapping.ColumnMappings.Add("PlatenRFLoadCapacitorPercent", "PlatenRFLoadCapacitorPercent");
            tableMapping.ColumnMappings.Add("PlatenRFPaddingCapacitor", "PlatenRFPaddingCapacitor");
            tableMapping.ColumnMappings.Add("PlatenRFControlMode", "PlatenRFControlMode");
            tableMapping.ColumnMappings.Add("HeliumPressure", "HeliumPressure");
            tableMapping.ColumnMappings.Add("HeliumpressurePercent", "HeliumpressurePercent");
            tableMapping.ColumnMappings.Add("HeliumFlowWarningLevel", "HeliumFlowWarningLevel");
            tableMapping.ColumnMappings.Add("HeliumFlowFaultLevel", "HeliumFlowFaultLevel");
            tableMapping.ColumnMappings.Add("GasLineConfig", "GasLineConfig");
            tableMapping.ColumnMappings.Add("Argon", "Argon");
            tableMapping.ColumnMappings.Add("ArgonPercent", "ArgonPercent");
            tableMapping.ColumnMappings.Add("Nitrogen", "Nitrogen");
            tableMapping.ColumnMappings.Add("NitrogenPercent", "NitrogenPercent");
            tableMapping.ColumnMappings.Add("Oxygen", "Oxygen");
            tableMapping.ColumnMappings.Add("OxygenPercent", "OxygenPercent");
            tableMapping.ColumnMappings.Add("Oxygen1", "Oxygen1");
            tableMapping.ColumnMappings.Add("Oxygen1Percent", "Oxygen1Percent");
            tableMapping.ColumnMappings.Add("CHF3", "CHF3");
            tableMapping.ColumnMappings.Add("CHF3Percent", "CHF3Percent");
            tableMapping.ColumnMappings.Add("SF6", "SF6");
            tableMapping.ColumnMappings.Add("SF6Percent", "SF6Percent");
            tableMapping.ColumnMappings.Add("BCI3", "BCI3");
            tableMapping.ColumnMappings.Add("BCI3Percent", "BCI3Percent");
            tableMapping.ColumnMappings.Add("CI2", "CI2");
            tableMapping.ColumnMappings.Add("CI2Percent", "CI2Percent");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[Newrecipe] WHERE (([Module ICP ID] = @Original_Module_ICP_ID) " +
                "AND ([recipeName] = @Original_recipeName) AND ((@IsNull_StepName = 1 AND [StepNa" +
                "me] IS NULL) OR ([StepName] = @Original_StepName)) AND ((@IsNull_TimeDependentSt" +
                "ep = 1 AND [TimeDependentStep] IS NULL) OR ([TimeDependentStep] = @Original_Time" +
                "DependentStep)) AND ((@IsNull_ProcessTime = 1 AND [ProcessTime] IS NULL) OR ([Pr" +
                "ocessTime] = @Original_ProcessTime)) AND ((@IsNull_ProcessPressure = 1 AND [Proc" +
                "essPressure] IS NULL) OR ([ProcessPressure] = @Original_ProcessPressure)) AND ((" +
                "@IsNull_ProcessPressurePercent = 1 AND [ProcessPressurePercent] IS NULL) OR ([Pr" +
                "ocessPressurePercent] = @Original_ProcessPressurePercent)) AND ((@IsNull_APCSetp" +
                "ointPosition = 1 AND [APCSetpointPosition] IS NULL) OR ([APCSetpointPosition] = " +
                "@Original_APCSetpointPosition)) AND ((@IsNull_APCMode = 1 AND [APCMode] IS NULL)" +
                " OR ([APCMode] = @Original_APCMode)) AND ((@IsNull_ActivePressureSensor = 1 AND " +
                "[ActivePressureSensor] IS NULL) OR ([ActivePressureSensor] = @Original_ActivePre" +
                "ssureSensor)) AND ((@IsNull_SourcePower = 1 AND [SourcePower] IS NULL) OR ([Sour" +
                "cePower] = @Original_SourcePower)) AND ((@IsNull_SourcePowerPercent = 1 AND [Sou" +
                "rcePowerPercent] IS NULL) OR ([SourcePowerPercent] = @Original_SourcePowerPercen" +
                "t)) AND ((@IsNull_SourceMUTuneCapacitor = 1 AND [SourceMUTuneCapacitor] IS NULL)" +
                " OR ([SourceMUTuneCapacitor] = @Original_SourceMUTuneCapacitor)) AND ((@IsNull_S" +
                "ourceMULoadCapacitor = 1 AND [SourceMULoadCapacitor] IS NULL) OR ([SourceMULoadC" +
                "apacitor] = @Original_SourceMULoadCapacitor)) AND ((@IsNull_SourceRFControlMode " +
                "= 1 AND [SourceRFControlMode] IS NULL) OR ([SourceRFControlMode] = @Original_Sou" +
                "rceRFControlMode)) AND ((@IsNull_PlatenPower = 1 AND [PlatenPower] IS NULL) OR (" +
                "[PlatenPower] = @Original_PlatenPower)) AND ((@IsNull_PlatenPowerPercent = 1 AND" +
                " [PlatenPowerPercent] IS NULL) OR ([PlatenPowerPercent] = @Original_PlatenPowerP" +
                "ercent)) AND ((@IsNull_PlatenCapacitorAdjust = 1 AND [PlatenCapacitorAdjust] IS " +
                "NULL) OR ([PlatenCapacitorAdjust] = @Original_PlatenCapacitorAdjust)) AND ((@IsN" +
                "ull_PlatenRFTuningCapacitor = 1 AND [PlatenRFTuningCapacitor] IS NULL) OR ([Plat" +
                "enRFTuningCapacitor] = @Original_PlatenRFTuningCapacitor)) AND ((@IsNull_PlatenR" +
                "FTuningCapacitorPercent = 1 AND [PlatenRFTuningCapacitorPercent] IS NULL) OR ([P" +
                "latenRFTuningCapacitorPercent] = @Original_PlatenRFTuningCapacitorPercent)) AND " +
                "((@IsNull_PlatenRFLoadCapacitor = 1 AND [PlatenRFLoadCapacitor] IS NULL) OR ([Pl" +
                "atenRFLoadCapacitor] = @Original_PlatenRFLoadCapacitor)) AND ((@IsNull_PlatenRFL" +
                "oadCapacitorPercent = 1 AND [PlatenRFLoadCapacitorPercent] IS NULL) OR ([PlatenR" +
                "FLoadCapacitorPercent] = @Original_PlatenRFLoadCapacitorPercent)) AND ((@IsNull_" +
                "PlatenRFPaddingCapacitor = 1 AND [PlatenRFPaddingCapacitor] IS NULL) OR ([Platen" +
                "RFPaddingCapacitor] = @Original_PlatenRFPaddingCapacitor)) AND ((@IsNull_PlatenR" +
                "FControlMode = 1 AND [PlatenRFControlMode] IS NULL) OR ([PlatenRFControlMode] = " +
                "@Original_PlatenRFControlMode)) AND ((@IsNull_HeliumPressure = 1 AND [HeliumPres" +
                "sure] IS NULL) OR ([HeliumPressure] = @Original_HeliumPressure)) AND ((@IsNull_H" +
                "eliumpressurePercent = 1 AND [HeliumpressurePercent] IS NULL) OR ([Heliumpressur" +
                "ePercent] = @Original_HeliumpressurePercent)) AND ((@IsNull_HeliumFlowWarningLev" +
                "el = 1 AND [HeliumFlowWarningLevel] IS NULL) OR ([HeliumFlowWarningLevel] = @Ori" +
                "ginal_HeliumFlowWarningLevel)) AND ((@IsNull_HeliumFlowFaultLevel = 1 AND [Heliu" +
                "mFlowFaultLevel] IS NULL) OR ([HeliumFlowFaultLevel] = @Original_HeliumFlowFault" +
                "Level)) AND ((@IsNull_GasLineConfig = 1 AND [GasLineConfig] IS NULL) OR ([GasLin" +
                "eConfig] = @Original_GasLineConfig)) AND ((@IsNull_Argon = 1 AND [Argon] IS NULL" +
                ") OR ([Argon] = @Original_Argon)) AND ((@IsNull_ArgonPercent = 1 AND [ArgonPerce" +
                "nt] IS NULL) OR ([ArgonPercent] = @Original_ArgonPercent)) AND ((@IsNull_Nitroge" +
                "n = 1 AND [Nitrogen] IS NULL) OR ([Nitrogen] = @Original_Nitrogen)) AND ((@IsNul" +
                "l_NitrogenPercent = 1 AND [NitrogenPercent] IS NULL) OR ([NitrogenPercent] = @Or" +
                "iginal_NitrogenPercent)) AND ((@IsNull_Oxygen = 1 AND [Oxygen] IS NULL) OR ([Oxy" +
                "gen] = @Original_Oxygen)) AND ((@IsNull_OxygenPercent = 1 AND [OxygenPercent] IS" +
                " NULL) OR ([OxygenPercent] = @Original_OxygenPercent)) AND ((@IsNull_Oxygen1 = 1" +
                " AND [Oxygen1] IS NULL) OR ([Oxygen1] = @Original_Oxygen1)) AND ((@IsNull_Oxygen" +
                "1Percent = 1 AND [Oxygen1Percent] IS NULL) OR ([Oxygen1Percent] = @Original_Oxyg" +
                "en1Percent)) AND ((@IsNull_CHF3 = 1 AND [CHF3] IS NULL) OR ([CHF3] = @Original_C" +
                "HF3)) AND ((@IsNull_CHF3Percent = 1 AND [CHF3Percent] IS NULL) OR ([CHF3Percent]" +
                " = @Original_CHF3Percent)) AND ((@IsNull_SF6 = 1 AND [SF6] IS NULL) OR ([SF6] = " +
                "@Original_SF6)) AND ((@IsNull_SF6Percent = 1 AND [SF6Percent] IS NULL) OR ([SF6P" +
                "ercent] = @Original_SF6Percent)) AND ((@IsNull_BCI3 = 1 AND [BCI3] IS NULL) OR (" +
                "[BCI3] = @Original_BCI3)) AND ((@IsNull_BCI3Percent = 1 AND [BCI3Percent] IS NUL" +
                "L) OR ([BCI3Percent] = @Original_BCI3Percent)) AND ((@IsNull_CI2 = 1 AND [CI2] I" +
                "S NULL) OR ([CI2] = @Original_CI2)) AND ((@IsNull_CI2Percent = 1 AND [CI2Percent" +
                "] IS NULL) OR ([CI2Percent] = @Original_CI2Percent)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Module_ICP_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Module ICP ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_recipeName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "recipeName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_StepName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StepName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_StepName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StepName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TimeDependentStep", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TimeDependentStep", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TimeDependentStep", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TimeDependentStep", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ProcessTime", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProcessTime", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ProcessTime", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProcessTime", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ProcessPressure", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProcessPressure", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ProcessPressure", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProcessPressure", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ProcessPressurePercent", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProcessPressurePercent", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ProcessPressurePercent", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProcessPressurePercent", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_APCSetpointPosition", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "APCSetpointPosition", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_APCSetpointPosition", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "APCSetpointPosition", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_APCMode", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "APCMode", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_APCMode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "APCMode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ActivePressureSensor", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ActivePressureSensor", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ActivePressureSensor", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ActivePressureSensor", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SourcePower", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SourcePower", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SourcePower", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SourcePower", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SourcePowerPercent", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SourcePowerPercent", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SourcePowerPercent", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SourcePowerPercent", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SourceMUTuneCapacitor", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SourceMUTuneCapacitor", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SourceMUTuneCapacitor", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SourceMUTuneCapacitor", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SourceMULoadCapacitor", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SourceMULoadCapacitor", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SourceMULoadCapacitor", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SourceMULoadCapacitor", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SourceRFControlMode", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SourceRFControlMode", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SourceRFControlMode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SourceRFControlMode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PlatenPower", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PlatenPower", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PlatenPower", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PlatenPower", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PlatenPowerPercent", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PlatenPowerPercent", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PlatenPowerPercent", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PlatenPowerPercent", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PlatenCapacitorAdjust", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PlatenCapacitorAdjust", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PlatenCapacitorAdjust", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PlatenCapacitorAdjust", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PlatenRFTuningCapacitor", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PlatenRFTuningCapacitor", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PlatenRFTuningCapacitor", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PlatenRFTuningCapacitor", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PlatenRFTuningCapacitorPercent", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PlatenRFTuningCapacitorPercent", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PlatenRFTuningCapacitorPercent", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PlatenRFTuningCapacitorPercent", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PlatenRFLoadCapacitor", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PlatenRFLoadCapacitor", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PlatenRFLoadCapacitor", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PlatenRFLoadCapacitor", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PlatenRFLoadCapacitorPercent", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PlatenRFLoadCapacitorPercent", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PlatenRFLoadCapacitorPercent", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PlatenRFLoadCapacitorPercent", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PlatenRFPaddingCapacitor", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PlatenRFPaddingCapacitor", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PlatenRFPaddingCapacitor", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PlatenRFPaddingCapacitor", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PlatenRFControlMode", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PlatenRFControlMode", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PlatenRFControlMode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PlatenRFControlMode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_HeliumPressure", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HeliumPressure", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_HeliumPressure", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HeliumPressure", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_HeliumpressurePercent", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HeliumpressurePercent", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_HeliumpressurePercent", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HeliumpressurePercent", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_HeliumFlowWarningLevel", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HeliumFlowWarningLevel", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_HeliumFlowWarningLevel", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HeliumFlowWarningLevel", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_HeliumFlowFaultLevel", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HeliumFlowFaultLevel", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_HeliumFlowFaultLevel", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HeliumFlowFaultLevel", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_GasLineConfig", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GasLineConfig", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GasLineConfig", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GasLineConfig", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Argon", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Argon", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Argon", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Argon", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ArgonPercent", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ArgonPercent", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ArgonPercent", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ArgonPercent", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Nitrogen", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nitrogen", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Nitrogen", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nitrogen", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_NitrogenPercent", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NitrogenPercent", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NitrogenPercent", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NitrogenPercent", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Oxygen", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Oxygen", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Oxygen", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Oxygen", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_OxygenPercent", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OxygenPercent", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OxygenPercent", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OxygenPercent", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Oxygen1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Oxygen1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Oxygen1", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Oxygen1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Oxygen1Percent", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Oxygen1Percent", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Oxygen1Percent", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Oxygen1Percent", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CHF3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CHF3", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CHF3", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CHF3", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CHF3Percent", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CHF3Percent", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CHF3Percent", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CHF3Percent", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SF6", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SF6", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SF6", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SF6", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SF6Percent", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SF6Percent", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SF6Percent", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SF6Percent", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_BCI3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BCI3", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BCI3", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BCI3", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_BCI3Percent", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BCI3Percent", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BCI3Percent", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BCI3Percent", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CI2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CI2", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CI2", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CI2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CI2Percent", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CI2Percent", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CI2Percent", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CI2Percent", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[Newrecipe] ([recipeName], [StepName], [TimeDependentStep], [Pr" +
                "ocessTime], [ProcessPressure], [ProcessPressurePercent], [APCSetpointPosition], " +
                "[APCMode], [ActivePressureSensor], [SourcePower], [SourcePowerPercent], [SourceM" +
                "UTuneCapacitor], [SourceMULoadCapacitor], [SourceRFControlMode], [PlatenPower], " +
                "[PlatenPowerPercent], [PlatenCapacitorAdjust], [PlatenRFTuningCapacitor], [Plate" +
                "nRFTuningCapacitorPercent], [PlatenRFLoadCapacitor], [PlatenRFLoadCapacitorPerce" +
                "nt], [PlatenRFPaddingCapacitor], [PlatenRFControlMode], [HeliumPressure], [Heliu" +
                "mpressurePercent], [HeliumFlowWarningLevel], [HeliumFlowFaultLevel], [GasLineCon" +
                "fig], [Argon], [ArgonPercent], [Nitrogen], [NitrogenPercent], [Oxygen], [OxygenP" +
                "ercent], [Oxygen1], [Oxygen1Percent], [CHF3], [CHF3Percent], [SF6], [SF6Percent]" +
                ", [BCI3], [BCI3Percent], [CI2], [CI2Percent]) VALUES (@recipeName, @StepName, @T" +
                "imeDependentStep, @ProcessTime, @ProcessPressure, @ProcessPressurePercent, @APCS" +
                "etpointPosition, @APCMode, @ActivePressureSensor, @SourcePower, @SourcePowerPerc" +
                "ent, @SourceMUTuneCapacitor, @SourceMULoadCapacitor, @SourceRFControlMode, @Plat" +
                "enPower, @PlatenPowerPercent, @PlatenCapacitorAdjust, @PlatenRFTuningCapacitor, " +
                "@PlatenRFTuningCapacitorPercent, @PlatenRFLoadCapacitor, @PlatenRFLoadCapacitorP" +
                "ercent, @PlatenRFPaddingCapacitor, @PlatenRFControlMode, @HeliumPressure, @Heliu" +
                "mpressurePercent, @HeliumFlowWarningLevel, @HeliumFlowFaultLevel, @GasLineConfig" +
                ", @Argon, @ArgonPercent, @Nitrogen, @NitrogenPercent, @Oxygen, @OxygenPercent, @" +
                "Oxygen1, @Oxygen1Percent, @CHF3, @CHF3Percent, @SF6, @SF6Percent, @BCI3, @BCI3Pe" +
                "rcent, @CI2, @CI2Percent);\r\nSELECT [Module ICP ID], recipeName, StepName, TimeDe" +
                "pendentStep, ProcessTime, ProcessPressure, ProcessPressurePercent, APCSetpointPo" +
                "sition, APCMode, ActivePressureSensor, SourcePower, SourcePowerPercent, SourceMU" +
                "TuneCapacitor, SourceMULoadCapacitor, SourceRFControlMode, PlatenPower, PlatenPo" +
                "werPercent, PlatenCapacitorAdjust, PlatenRFTuningCapacitor, PlatenRFTuningCapaci" +
                "torPercent, PlatenRFLoadCapacitor, PlatenRFLoadCapacitorPercent, PlatenRFPadding" +
                "Capacitor, PlatenRFControlMode, HeliumPressure, HeliumpressurePercent, HeliumFlo" +
                "wWarningLevel, HeliumFlowFaultLevel, GasLineConfig, Argon, ArgonPercent, Nitroge" +
                "n, NitrogenPercent, Oxygen, OxygenPercent, Oxygen1, Oxygen1Percent, CHF3, CHF3Pe" +
                "rcent, SF6, SF6Percent, BCI3, BCI3Percent, CI2, CI2Percent FROM Newrecipe WHERE " +
                "([Module ICP ID] = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@recipeName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "recipeName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StepName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StepName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TimeDependentStep", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TimeDependentStep", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProcessTime", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProcessTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProcessPressure", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProcessPressure", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProcessPressurePercent", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProcessPressurePercent", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@APCSetpointPosition", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "APCSetpointPosition", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@APCMode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "APCMode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ActivePressureSensor", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ActivePressureSensor", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SourcePower", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SourcePower", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SourcePowerPercent", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SourcePowerPercent", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SourceMUTuneCapacitor", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SourceMUTuneCapacitor", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SourceMULoadCapacitor", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SourceMULoadCapacitor", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SourceRFControlMode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SourceRFControlMode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PlatenPower", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PlatenPower", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PlatenPowerPercent", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PlatenPowerPercent", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PlatenCapacitorAdjust", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PlatenCapacitorAdjust", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PlatenRFTuningCapacitor", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PlatenRFTuningCapacitor", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PlatenRFTuningCapacitorPercent", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PlatenRFTuningCapacitorPercent", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PlatenRFLoadCapacitor", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PlatenRFLoadCapacitor", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PlatenRFLoadCapacitorPercent", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PlatenRFLoadCapacitorPercent", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PlatenRFPaddingCapacitor", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PlatenRFPaddingCapacitor", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PlatenRFControlMode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PlatenRFControlMode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HeliumPressure", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HeliumPressure", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HeliumpressurePercent", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HeliumpressurePercent", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HeliumFlowWarningLevel", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HeliumFlowWarningLevel", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HeliumFlowFaultLevel", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HeliumFlowFaultLevel", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GasLineConfig", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GasLineConfig", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Argon", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Argon", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ArgonPercent", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ArgonPercent", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Nitrogen", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nitrogen", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NitrogenPercent", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NitrogenPercent", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Oxygen", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Oxygen", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OxygenPercent", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OxygenPercent", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Oxygen1", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Oxygen1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Oxygen1Percent", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Oxygen1Percent", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CHF3", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CHF3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CHF3Percent", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CHF3Percent", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SF6", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SF6", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SF6Percent", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SF6Percent", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BCI3", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BCI3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BCI3Percent", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BCI3Percent", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CI2", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CI2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CI2Percent", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CI2Percent", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[Newrecipe] SET [recipeName] = @recipeName, [StepName] = @StepName, " +
                "[TimeDependentStep] = @TimeDependentStep, [ProcessTime] = @ProcessTime, [Process" +
                "Pressure] = @ProcessPressure, [ProcessPressurePercent] = @ProcessPressurePercent" +
                ", [APCSetpointPosition] = @APCSetpointPosition, [APCMode] = @APCMode, [ActivePre" +
                "ssureSensor] = @ActivePressureSensor, [SourcePower] = @SourcePower, [SourcePower" +
                "Percent] = @SourcePowerPercent, [SourceMUTuneCapacitor] = @SourceMUTuneCapacitor" +
                ", [SourceMULoadCapacitor] = @SourceMULoadCapacitor, [SourceRFControlMode] = @Sou" +
                "rceRFControlMode, [PlatenPower] = @PlatenPower, [PlatenPowerPercent] = @PlatenPo" +
                "werPercent, [PlatenCapacitorAdjust] = @PlatenCapacitorAdjust, [PlatenRFTuningCap" +
                "acitor] = @PlatenRFTuningCapacitor, [PlatenRFTuningCapacitorPercent] = @PlatenRF" +
                "TuningCapacitorPercent, [PlatenRFLoadCapacitor] = @PlatenRFLoadCapacitor, [Plate" +
                "nRFLoadCapacitorPercent] = @PlatenRFLoadCapacitorPercent, [PlatenRFPaddingCapaci" +
                "tor] = @PlatenRFPaddingCapacitor, [PlatenRFControlMode] = @PlatenRFControlMode, " +
                "[HeliumPressure] = @HeliumPressure, [HeliumpressurePercent] = @HeliumpressurePer" +
                "cent, [HeliumFlowWarningLevel] = @HeliumFlowWarningLevel, [HeliumFlowFaultLevel]" +
                " = @HeliumFlowFaultLevel, [GasLineConfig] = @GasLineConfig, [Argon] = @Argon, [A" +
                "rgonPercent] = @ArgonPercent, [Nitrogen] = @Nitrogen, [NitrogenPercent] = @Nitro" +
                "genPercent, [Oxygen] = @Oxygen, [OxygenPercent] = @OxygenPercent, [Oxygen1] = @O" +
                "xygen1, [Oxygen1Percent] = @Oxygen1Percent, [CHF3] = @CHF3, [CHF3Percent] = @CHF" +
                "3Percent, [SF6] = @SF6, [SF6Percent] = @SF6Percent, [BCI3] = @BCI3, [BCI3Percent" +
                "] = @BCI3Percent, [CI2] = @CI2, [CI2Percent] = @CI2Percent WHERE (([Module ICP I" +
                "D] = @Original_Module_ICP_ID) AND ([recipeName] = @Original_recipeName) AND ((@I" +
                "sNull_StepName = 1 AND [StepName] IS NULL) OR ([StepName] = @Original_StepName))" +
                " AND ((@IsNull_TimeDependentStep = 1 AND [TimeDependentStep] IS NULL) OR ([TimeD" +
                "ependentStep] = @Original_TimeDependentStep)) AND ((@IsNull_ProcessTime = 1 AND " +
                "[ProcessTime] IS NULL) OR ([ProcessTime] = @Original_ProcessTime)) AND ((@IsNull" +
                "_ProcessPressure = 1 AND [ProcessPressure] IS NULL) OR ([ProcessPressure] = @Ori" +
                "ginal_ProcessPressure)) AND ((@IsNull_ProcessPressurePercent = 1 AND [ProcessPre" +
                "ssurePercent] IS NULL) OR ([ProcessPressurePercent] = @Original_ProcessPressureP" +
                "ercent)) AND ((@IsNull_APCSetpointPosition = 1 AND [APCSetpointPosition] IS NULL" +
                ") OR ([APCSetpointPosition] = @Original_APCSetpointPosition)) AND ((@IsNull_APCM" +
                "ode = 1 AND [APCMode] IS NULL) OR ([APCMode] = @Original_APCMode)) AND ((@IsNull" +
                "_ActivePressureSensor = 1 AND [ActivePressureSensor] IS NULL) OR ([ActivePressur" +
                "eSensor] = @Original_ActivePressureSensor)) AND ((@IsNull_SourcePower = 1 AND [S" +
                "ourcePower] IS NULL) OR ([SourcePower] = @Original_SourcePower)) AND ((@IsNull_S" +
                "ourcePowerPercent = 1 AND [SourcePowerPercent] IS NULL) OR ([SourcePowerPercent]" +
                " = @Original_SourcePowerPercent)) AND ((@IsNull_SourceMUTuneCapacitor = 1 AND [S" +
                "ourceMUTuneCapacitor] IS NULL) OR ([SourceMUTuneCapacitor] = @Original_SourceMUT" +
                "uneCapacitor)) AND ((@IsNull_SourceMULoadCapacitor = 1 AND [SourceMULoadCapacito" +
                "r] IS NULL) OR ([SourceMULoadCapacitor] = @Original_SourceMULoadCapacitor)) AND " +
                "((@IsNull_SourceRFControlMode = 1 AND [SourceRFControlMode] IS NULL) OR ([Source" +
                "RFControlMode] = @Original_SourceRFControlMode)) AND ((@IsNull_PlatenPower = 1 A" +
                "ND [PlatenPower] IS NULL) OR ([PlatenPower] = @Original_PlatenPower)) AND ((@IsN" +
                "ull_PlatenPowerPercent = 1 AND [PlatenPowerPercent] IS NULL) OR ([PlatenPowerPer" +
                "cent] = @Original_PlatenPowerPercent)) AND ((@IsNull_PlatenCapacitorAdjust = 1 A" +
                "ND [PlatenCapacitorAdjust] IS NULL) OR ([PlatenCapacitorAdjust] = @Original_Plat" +
                "enCapacitorAdjust)) AND ((@IsNull_PlatenRFTuningCapacitor = 1 AND [PlatenRFTunin" +
                "gCapacitor] IS NULL) OR ([PlatenRFTuningCapacitor] = @Original_PlatenRFTuningCap" +
                "acitor)) AND ((@IsNull_PlatenRFTuningCapacitorPercent = 1 AND [PlatenRFTuningCap" +
                "acitorPercent] IS NULL) OR ([PlatenRFTuningCapacitorPercent] = @Original_PlatenR" +
                "FTuningCapacitorPercent)) AND ((@IsNull_PlatenRFLoadCapacitor = 1 AND [PlatenRFL" +
                "oadCapacitor] IS NULL) OR ([PlatenRFLoadCapacitor] = @Original_PlatenRFLoadCapac" +
                "itor)) AND ((@IsNull_PlatenRFLoadCapacitorPercent = 1 AND [PlatenRFLoadCapacitor" +
                "Percent] IS NULL) OR ([PlatenRFLoadCapacitorPercent] = @Original_PlatenRFLoadCap" +
                "acitorPercent)) AND ((@IsNull_PlatenRFPaddingCapacitor = 1 AND [PlatenRFPaddingC" +
                "apacitor] IS NULL) OR ([PlatenRFPaddingCapacitor] = @Original_PlatenRFPaddingCap" +
                "acitor)) AND ((@IsNull_PlatenRFControlMode = 1 AND [PlatenRFControlMode] IS NULL" +
                ") OR ([PlatenRFControlMode] = @Original_PlatenRFControlMode)) AND ((@IsNull_Heli" +
                "umPressure = 1 AND [HeliumPressure] IS NULL) OR ([HeliumPressure] = @Original_He" +
                "liumPressure)) AND ((@IsNull_HeliumpressurePercent = 1 AND [HeliumpressurePercen" +
                "t] IS NULL) OR ([HeliumpressurePercent] = @Original_HeliumpressurePercent)) AND " +
                "((@IsNull_HeliumFlowWarningLevel = 1 AND [HeliumFlowWarningLevel] IS NULL) OR ([" +
                "HeliumFlowWarningLevel] = @Original_HeliumFlowWarningLevel)) AND ((@IsNull_Heliu" +
                "mFlowFaultLevel = 1 AND [HeliumFlowFaultLevel] IS NULL) OR ([HeliumFlowFaultLeve" +
                "l] = @Original_HeliumFlowFaultLevel)) AND ((@IsNull_GasLineConfig = 1 AND [GasLi" +
                "neConfig] IS NULL) OR ([GasLineConfig] = @Original_GasLineConfig)) AND ((@IsNull" +
                "_Argon = 1 AND [Argon] IS NULL) OR ([Argon] = @Original_Argon)) AND ((@IsNull_Ar" +
                "gonPercent = 1 AND [ArgonPercent] IS NULL) OR ([ArgonPercent] = @Original_ArgonP" +
                "ercent)) AND ((@IsNull_Nitrogen = 1 AND [Nitrogen] IS NULL) OR ([Nitrogen] = @Or" +
                "iginal_Nitrogen)) AND ((@IsNull_NitrogenPercent = 1 AND [NitrogenPercent] IS NUL" +
                "L) OR ([NitrogenPercent] = @Original_NitrogenPercent)) AND ((@IsNull_Oxygen = 1 " +
                "AND [Oxygen] IS NULL) OR ([Oxygen] = @Original_Oxygen)) AND ((@IsNull_OxygenPerc" +
                "ent = 1 AND [OxygenPercent] IS NULL) OR ([OxygenPercent] = @Original_OxygenPerce" +
                "nt)) AND ((@IsNull_Oxygen1 = 1 AND [Oxygen1] IS NULL) OR ([Oxygen1] = @Original_" +
                "Oxygen1)) AND ((@IsNull_Oxygen1Percent = 1 AND [Oxygen1Percent] IS NULL) OR ([Ox" +
                "ygen1Percent] = @Original_Oxygen1Percent)) AND ((@IsNull_CHF3 = 1 AND [CHF3] IS " +
                "NULL) OR ([CHF3] = @Original_CHF3)) AND ((@IsNull_CHF3Percent = 1 AND [CHF3Perce" +
                "nt] IS NULL) OR ([CHF3Percent] = @Original_CHF3Percent)) AND ((@IsNull_SF6 = 1 A" +
                "ND [SF6] IS NULL) OR ([SF6] = @Original_SF6)) AND ((@IsNull_SF6Percent = 1 AND [" +
                "SF6Percent] IS NULL) OR ([SF6Percent] = @Original_SF6Percent)) AND ((@IsNull_BCI" +
                "3 = 1 AND [BCI3] IS NULL) OR ([BCI3] = @Original_BCI3)) AND ((@IsNull_BCI3Percen" +
                "t = 1 AND [BCI3Percent] IS NULL) OR ([BCI3Percent] = @Original_BCI3Percent)) AND" +
                " ((@IsNull_CI2 = 1 AND [CI2] IS NULL) OR ([CI2] = @Original_CI2)) AND ((@IsNull_" +
                "CI2Percent = 1 AND [CI2Percent] IS NULL) OR ([CI2Percent] = @Original_CI2Percent" +
                ")));\r\nSELECT [Module ICP ID], recipeName, StepName, TimeDependentStep, ProcessTi" +
                "me, ProcessPressure, ProcessPressurePercent, APCSetpointPosition, APCMode, Activ" +
                "ePressureSensor, SourcePower, SourcePowerPercent, SourceMUTuneCapacitor, SourceM" +
                "ULoadCapacitor, SourceRFControlMode, PlatenPower, PlatenPowerPercent, PlatenCapa" +
                "citorAdjust, PlatenRFTuningCapacitor, PlatenRFTuningCapacitorPercent, PlatenRFLo" +
                "adCapacitor, PlatenRFLoadCapacitorPercent, PlatenRFPaddingCapacitor, PlatenRFCon" +
                "trolMode, HeliumPressure, HeliumpressurePercent, HeliumFlowWarningLevel, HeliumF" +
                "lowFaultLevel, GasLineConfig, Argon, ArgonPercent, Nitrogen, NitrogenPercent, Ox" +
                "ygen, OxygenPercent, Oxygen1, Oxygen1Percent, CHF3, CHF3Percent, SF6, SF6Percent" +
                ", BCI3, BCI3Percent, CI2, CI2Percent FROM Newrecipe WHERE ([Module ICP ID] = @Mo" +
                "dule_ICP_ID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@recipeName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "recipeName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StepName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StepName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TimeDependentStep", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TimeDependentStep", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProcessTime", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProcessTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProcessPressure", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProcessPressure", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProcessPressurePercent", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProcessPressurePercent", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@APCSetpointPosition", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "APCSetpointPosition", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@APCMode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "APCMode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ActivePressureSensor", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ActivePressureSensor", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SourcePower", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SourcePower", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SourcePowerPercent", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SourcePowerPercent", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SourceMUTuneCapacitor", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SourceMUTuneCapacitor", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SourceMULoadCapacitor", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SourceMULoadCapacitor", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SourceRFControlMode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SourceRFControlMode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PlatenPower", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PlatenPower", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PlatenPowerPercent", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PlatenPowerPercent", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PlatenCapacitorAdjust", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PlatenCapacitorAdjust", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PlatenRFTuningCapacitor", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PlatenRFTuningCapacitor", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PlatenRFTuningCapacitorPercent", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PlatenRFTuningCapacitorPercent", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PlatenRFLoadCapacitor", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PlatenRFLoadCapacitor", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PlatenRFLoadCapacitorPercent", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PlatenRFLoadCapacitorPercent", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PlatenRFPaddingCapacitor", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PlatenRFPaddingCapacitor", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PlatenRFControlMode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PlatenRFControlMode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HeliumPressure", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HeliumPressure", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HeliumpressurePercent", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HeliumpressurePercent", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HeliumFlowWarningLevel", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HeliumFlowWarningLevel", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HeliumFlowFaultLevel", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HeliumFlowFaultLevel", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GasLineConfig", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GasLineConfig", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Argon", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Argon", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ArgonPercent", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ArgonPercent", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Nitrogen", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nitrogen", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NitrogenPercent", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NitrogenPercent", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Oxygen", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Oxygen", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OxygenPercent", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OxygenPercent", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Oxygen1", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Oxygen1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Oxygen1Percent", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Oxygen1Percent", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CHF3", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CHF3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CHF3Percent", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CHF3Percent", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SF6", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SF6", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SF6Percent", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SF6Percent", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BCI3", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BCI3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BCI3Percent", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BCI3Percent", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CI2", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CI2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CI2Percent", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CI2Percent", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Module_ICP_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Module ICP ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_recipeName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "recipeName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_StepName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StepName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_StepName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StepName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TimeDependentStep", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TimeDependentStep", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TimeDependentStep", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TimeDependentStep", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ProcessTime", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProcessTime", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ProcessTime", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProcessTime", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ProcessPressure", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProcessPressure", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ProcessPressure", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProcessPressure", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ProcessPressurePercent", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProcessPressurePercent", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ProcessPressurePercent", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProcessPressurePercent", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_APCSetpointPosition", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "APCSetpointPosition", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_APCSetpointPosition", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "APCSetpointPosition", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_APCMode", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "APCMode", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_APCMode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "APCMode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ActivePressureSensor", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ActivePressureSensor", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ActivePressureSensor", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ActivePressureSensor", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SourcePower", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SourcePower", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SourcePower", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SourcePower", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SourcePowerPercent", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SourcePowerPercent", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SourcePowerPercent", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SourcePowerPercent", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SourceMUTuneCapacitor", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SourceMUTuneCapacitor", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SourceMUTuneCapacitor", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SourceMUTuneCapacitor", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SourceMULoadCapacitor", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SourceMULoadCapacitor", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SourceMULoadCapacitor", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SourceMULoadCapacitor", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SourceRFControlMode", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SourceRFControlMode", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SourceRFControlMode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SourceRFControlMode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PlatenPower", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PlatenPower", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PlatenPower", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PlatenPower", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PlatenPowerPercent", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PlatenPowerPercent", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PlatenPowerPercent", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PlatenPowerPercent", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PlatenCapacitorAdjust", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PlatenCapacitorAdjust", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PlatenCapacitorAdjust", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PlatenCapacitorAdjust", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PlatenRFTuningCapacitor", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PlatenRFTuningCapacitor", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PlatenRFTuningCapacitor", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PlatenRFTuningCapacitor", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PlatenRFTuningCapacitorPercent", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PlatenRFTuningCapacitorPercent", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PlatenRFTuningCapacitorPercent", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PlatenRFTuningCapacitorPercent", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PlatenRFLoadCapacitor", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PlatenRFLoadCapacitor", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PlatenRFLoadCapacitor", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PlatenRFLoadCapacitor", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PlatenRFLoadCapacitorPercent", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PlatenRFLoadCapacitorPercent", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PlatenRFLoadCapacitorPercent", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PlatenRFLoadCapacitorPercent", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PlatenRFPaddingCapacitor", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PlatenRFPaddingCapacitor", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PlatenRFPaddingCapacitor", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PlatenRFPaddingCapacitor", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PlatenRFControlMode", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PlatenRFControlMode", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PlatenRFControlMode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PlatenRFControlMode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_HeliumPressure", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HeliumPressure", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_HeliumPressure", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HeliumPressure", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_HeliumpressurePercent", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HeliumpressurePercent", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_HeliumpressurePercent", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HeliumpressurePercent", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_HeliumFlowWarningLevel", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HeliumFlowWarningLevel", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_HeliumFlowWarningLevel", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HeliumFlowWarningLevel", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_HeliumFlowFaultLevel", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HeliumFlowFaultLevel", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_HeliumFlowFaultLevel", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HeliumFlowFaultLevel", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_GasLineConfig", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GasLineConfig", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GasLineConfig", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GasLineConfig", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Argon", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Argon", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Argon", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Argon", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ArgonPercent", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ArgonPercent", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ArgonPercent", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ArgonPercent", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Nitrogen", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nitrogen", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Nitrogen", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nitrogen", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_NitrogenPercent", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NitrogenPercent", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NitrogenPercent", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NitrogenPercent", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Oxygen", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Oxygen", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Oxygen", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Oxygen", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_OxygenPercent", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OxygenPercent", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OxygenPercent", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OxygenPercent", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Oxygen1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Oxygen1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Oxygen1", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Oxygen1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Oxygen1Percent", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Oxygen1Percent", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Oxygen1Percent", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Oxygen1Percent", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CHF3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CHF3", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CHF3", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CHF3", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CHF3Percent", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CHF3Percent", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CHF3Percent", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CHF3Percent", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SF6", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SF6", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SF6", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SF6", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SF6Percent", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SF6Percent", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SF6Percent", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SF6Percent", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_BCI3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BCI3", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BCI3", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BCI3", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_BCI3Percent", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BCI3Percent", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BCI3Percent", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BCI3Percent", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CI2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CI2", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CI2", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CI2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CI2Percent", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CI2Percent", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CI2Percent", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CI2Percent", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Module_ICP_ID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "Module ICP ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::SimulatorApplication.Properties.Settings.Default.RecipeTypeConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT [Module ICP ID], recipeName, StepName, TimeDependentStep, ProcessTime, ProcessPressure, ProcessPressurePercent, APCSetpointPosition, APCMode, ActivePressureSensor, SourcePower, SourcePowerPercent, SourceMUTuneCapacitor, SourceMULoadCapacitor, SourceRFControlMode, PlatenPower, PlatenPowerPercent, PlatenCapacitorAdjust, PlatenRFTuningCapacitor, PlatenRFTuningCapacitorPercent, PlatenRFLoadCapacitor, PlatenRFLoadCapacitorPercent, PlatenRFPaddingCapacitor, PlatenRFControlMode, HeliumPressure, HeliumpressurePercent, HeliumFlowWarningLevel, HeliumFlowFaultLevel, GasLineConfig, Argon, ArgonPercent, Nitrogen, NitrogenPercent, Oxygen, OxygenPercent, Oxygen1, Oxygen1Percent, CHF3, CHF3Percent, SF6, SF6Percent, BCI3, BCI3Percent, CI2, CI2Percent FROM dbo.Newrecipe";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(RecipeTypeDataSet.NewrecipeDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual RecipeTypeDataSet.NewrecipeDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            RecipeTypeDataSet.NewrecipeDataTable dataTable = new RecipeTypeDataSet.NewrecipeDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(RecipeTypeDataSet.NewrecipeDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(RecipeTypeDataSet dataSet) {
            return this.Adapter.Update(dataSet, "Newrecipe");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    int Original_Module_ICP_ID, 
                    string Original_recipeName, 
                    string Original_StepName, 
                    string Original_TimeDependentStep, 
                    string Original_ProcessTime, 
                    string Original_ProcessPressure, 
                    string Original_ProcessPressurePercent, 
                    string Original_APCSetpointPosition, 
                    string Original_APCMode, 
                    string Original_ActivePressureSensor, 
                    string Original_SourcePower, 
                    string Original_SourcePowerPercent, 
                    string Original_SourceMUTuneCapacitor, 
                    string Original_SourceMULoadCapacitor, 
                    string Original_SourceRFControlMode, 
                    string Original_PlatenPower, 
                    string Original_PlatenPowerPercent, 
                    string Original_PlatenCapacitorAdjust, 
                    string Original_PlatenRFTuningCapacitor, 
                    string Original_PlatenRFTuningCapacitorPercent, 
                    string Original_PlatenRFLoadCapacitor, 
                    string Original_PlatenRFLoadCapacitorPercent, 
                    string Original_PlatenRFPaddingCapacitor, 
                    string Original_PlatenRFControlMode, 
                    string Original_HeliumPressure, 
                    string Original_HeliumpressurePercent, 
                    string Original_HeliumFlowWarningLevel, 
                    string Original_HeliumFlowFaultLevel, 
                    string Original_GasLineConfig, 
                    string Original_Argon, 
                    string Original_ArgonPercent, 
                    string Original_Nitrogen, 
                    string Original_NitrogenPercent, 
                    string Original_Oxygen, 
                    string Original_OxygenPercent, 
                    string Original_Oxygen1, 
                    string Original_Oxygen1Percent, 
                    string Original_CHF3, 
                    string Original_CHF3Percent, 
                    string Original_SF6, 
                    string Original_SF6Percent, 
                    string Original_BCI3, 
                    string Original_BCI3Percent, 
                    string Original_CI2, 
                    string Original_CI2Percent) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_Module_ICP_ID));
            if ((Original_recipeName == null)) {
                throw new global::System.ArgumentNullException("Original_recipeName");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_recipeName));
            }
            if ((Original_StepName == null)) {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_StepName));
            }
            if ((Original_TimeDependentStep == null)) {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_TimeDependentStep));
            }
            if ((Original_ProcessTime == null)) {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_ProcessTime));
            }
            if ((Original_ProcessPressure == null)) {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[9].Value = ((string)(Original_ProcessPressure));
            }
            if ((Original_ProcessPressurePercent == null)) {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[11].Value = ((string)(Original_ProcessPressurePercent));
            }
            if ((Original_APCSetpointPosition == null)) {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[13].Value = ((string)(Original_APCSetpointPosition));
            }
            if ((Original_APCMode == null)) {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[15].Value = ((string)(Original_APCMode));
            }
            if ((Original_ActivePressureSensor == null)) {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[17].Value = ((string)(Original_ActivePressureSensor));
            }
            if ((Original_SourcePower == null)) {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[19].Value = ((string)(Original_SourcePower));
            }
            if ((Original_SourcePowerPercent == null)) {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[21].Value = ((string)(Original_SourcePowerPercent));
            }
            if ((Original_SourceMUTuneCapacitor == null)) {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[23].Value = ((string)(Original_SourceMUTuneCapacitor));
            }
            if ((Original_SourceMULoadCapacitor == null)) {
                this.Adapter.DeleteCommand.Parameters[24].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[24].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[25].Value = ((string)(Original_SourceMULoadCapacitor));
            }
            if ((Original_SourceRFControlMode == null)) {
                this.Adapter.DeleteCommand.Parameters[26].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[26].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[27].Value = ((string)(Original_SourceRFControlMode));
            }
            if ((Original_PlatenPower == null)) {
                this.Adapter.DeleteCommand.Parameters[28].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[28].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[29].Value = ((string)(Original_PlatenPower));
            }
            if ((Original_PlatenPowerPercent == null)) {
                this.Adapter.DeleteCommand.Parameters[30].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[30].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[31].Value = ((string)(Original_PlatenPowerPercent));
            }
            if ((Original_PlatenCapacitorAdjust == null)) {
                this.Adapter.DeleteCommand.Parameters[32].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[32].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[33].Value = ((string)(Original_PlatenCapacitorAdjust));
            }
            if ((Original_PlatenRFTuningCapacitor == null)) {
                this.Adapter.DeleteCommand.Parameters[34].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[34].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[35].Value = ((string)(Original_PlatenRFTuningCapacitor));
            }
            if ((Original_PlatenRFTuningCapacitorPercent == null)) {
                this.Adapter.DeleteCommand.Parameters[36].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[36].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[37].Value = ((string)(Original_PlatenRFTuningCapacitorPercent));
            }
            if ((Original_PlatenRFLoadCapacitor == null)) {
                this.Adapter.DeleteCommand.Parameters[38].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[38].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[39].Value = ((string)(Original_PlatenRFLoadCapacitor));
            }
            if ((Original_PlatenRFLoadCapacitorPercent == null)) {
                this.Adapter.DeleteCommand.Parameters[40].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[40].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[41].Value = ((string)(Original_PlatenRFLoadCapacitorPercent));
            }
            if ((Original_PlatenRFPaddingCapacitor == null)) {
                this.Adapter.DeleteCommand.Parameters[42].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[42].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[43].Value = ((string)(Original_PlatenRFPaddingCapacitor));
            }
            if ((Original_PlatenRFControlMode == null)) {
                this.Adapter.DeleteCommand.Parameters[44].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[44].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[45].Value = ((string)(Original_PlatenRFControlMode));
            }
            if ((Original_HeliumPressure == null)) {
                this.Adapter.DeleteCommand.Parameters[46].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[46].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[47].Value = ((string)(Original_HeliumPressure));
            }
            if ((Original_HeliumpressurePercent == null)) {
                this.Adapter.DeleteCommand.Parameters[48].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[48].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[49].Value = ((string)(Original_HeliumpressurePercent));
            }
            if ((Original_HeliumFlowWarningLevel == null)) {
                this.Adapter.DeleteCommand.Parameters[50].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[50].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[51].Value = ((string)(Original_HeliumFlowWarningLevel));
            }
            if ((Original_HeliumFlowFaultLevel == null)) {
                this.Adapter.DeleteCommand.Parameters[52].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[52].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[53].Value = ((string)(Original_HeliumFlowFaultLevel));
            }
            if ((Original_GasLineConfig == null)) {
                this.Adapter.DeleteCommand.Parameters[54].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[54].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[55].Value = ((string)(Original_GasLineConfig));
            }
            if ((Original_Argon == null)) {
                this.Adapter.DeleteCommand.Parameters[56].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[57].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[56].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[57].Value = ((string)(Original_Argon));
            }
            if ((Original_ArgonPercent == null)) {
                this.Adapter.DeleteCommand.Parameters[58].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[59].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[58].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[59].Value = ((string)(Original_ArgonPercent));
            }
            if ((Original_Nitrogen == null)) {
                this.Adapter.DeleteCommand.Parameters[60].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[61].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[60].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[61].Value = ((string)(Original_Nitrogen));
            }
            if ((Original_NitrogenPercent == null)) {
                this.Adapter.DeleteCommand.Parameters[62].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[63].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[62].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[63].Value = ((string)(Original_NitrogenPercent));
            }
            if ((Original_Oxygen == null)) {
                this.Adapter.DeleteCommand.Parameters[64].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[65].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[64].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[65].Value = ((string)(Original_Oxygen));
            }
            if ((Original_OxygenPercent == null)) {
                this.Adapter.DeleteCommand.Parameters[66].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[67].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[66].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[67].Value = ((string)(Original_OxygenPercent));
            }
            if ((Original_Oxygen1 == null)) {
                this.Adapter.DeleteCommand.Parameters[68].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[69].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[68].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[69].Value = ((string)(Original_Oxygen1));
            }
            if ((Original_Oxygen1Percent == null)) {
                this.Adapter.DeleteCommand.Parameters[70].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[71].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[70].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[71].Value = ((string)(Original_Oxygen1Percent));
            }
            if ((Original_CHF3 == null)) {
                this.Adapter.DeleteCommand.Parameters[72].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[73].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[72].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[73].Value = ((string)(Original_CHF3));
            }
            if ((Original_CHF3Percent == null)) {
                this.Adapter.DeleteCommand.Parameters[74].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[75].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[74].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[75].Value = ((string)(Original_CHF3Percent));
            }
            if ((Original_SF6 == null)) {
                this.Adapter.DeleteCommand.Parameters[76].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[77].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[76].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[77].Value = ((string)(Original_SF6));
            }
            if ((Original_SF6Percent == null)) {
                this.Adapter.DeleteCommand.Parameters[78].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[79].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[78].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[79].Value = ((string)(Original_SF6Percent));
            }
            if ((Original_BCI3 == null)) {
                this.Adapter.DeleteCommand.Parameters[80].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[81].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[80].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[81].Value = ((string)(Original_BCI3));
            }
            if ((Original_BCI3Percent == null)) {
                this.Adapter.DeleteCommand.Parameters[82].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[83].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[82].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[83].Value = ((string)(Original_BCI3Percent));
            }
            if ((Original_CI2 == null)) {
                this.Adapter.DeleteCommand.Parameters[84].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[85].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[84].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[85].Value = ((string)(Original_CI2));
            }
            if ((Original_CI2Percent == null)) {
                this.Adapter.DeleteCommand.Parameters[86].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[87].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[86].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[87].Value = ((string)(Original_CI2Percent));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string recipeName, 
                    string StepName, 
                    string TimeDependentStep, 
                    string ProcessTime, 
                    string ProcessPressure, 
                    string ProcessPressurePercent, 
                    string APCSetpointPosition, 
                    string APCMode, 
                    string ActivePressureSensor, 
                    string SourcePower, 
                    string SourcePowerPercent, 
                    string SourceMUTuneCapacitor, 
                    string SourceMULoadCapacitor, 
                    string SourceRFControlMode, 
                    string PlatenPower, 
                    string PlatenPowerPercent, 
                    string PlatenCapacitorAdjust, 
                    string PlatenRFTuningCapacitor, 
                    string PlatenRFTuningCapacitorPercent, 
                    string PlatenRFLoadCapacitor, 
                    string PlatenRFLoadCapacitorPercent, 
                    string PlatenRFPaddingCapacitor, 
                    string PlatenRFControlMode, 
                    string HeliumPressure, 
                    string HeliumpressurePercent, 
                    string HeliumFlowWarningLevel, 
                    string HeliumFlowFaultLevel, 
                    string GasLineConfig, 
                    string Argon, 
                    string ArgonPercent, 
                    string Nitrogen, 
                    string NitrogenPercent, 
                    string Oxygen, 
                    string OxygenPercent, 
                    string Oxygen1, 
                    string Oxygen1Percent, 
                    string CHF3, 
                    string CHF3Percent, 
                    string SF6, 
                    string SF6Percent, 
                    string BCI3, 
                    string BCI3Percent, 
                    string CI2, 
                    string CI2Percent) {
            if ((recipeName == null)) {
                throw new global::System.ArgumentNullException("recipeName");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(recipeName));
            }
            if ((StepName == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(StepName));
            }
            if ((TimeDependentStep == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(TimeDependentStep));
            }
            if ((ProcessTime == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(ProcessTime));
            }
            if ((ProcessPressure == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(ProcessPressure));
            }
            if ((ProcessPressurePercent == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(ProcessPressurePercent));
            }
            if ((APCSetpointPosition == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(APCSetpointPosition));
            }
            if ((APCMode == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(APCMode));
            }
            if ((ActivePressureSensor == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(ActivePressureSensor));
            }
            if ((SourcePower == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(SourcePower));
            }
            if ((SourcePowerPercent == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(SourcePowerPercent));
            }
            if ((SourceMUTuneCapacitor == null)) {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(SourceMUTuneCapacitor));
            }
            if ((SourceMULoadCapacitor == null)) {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(SourceMULoadCapacitor));
            }
            if ((SourceRFControlMode == null)) {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(SourceRFControlMode));
            }
            if ((PlatenPower == null)) {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(PlatenPower));
            }
            if ((PlatenPowerPercent == null)) {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = ((string)(PlatenPowerPercent));
            }
            if ((PlatenCapacitorAdjust == null)) {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = ((string)(PlatenCapacitorAdjust));
            }
            if ((PlatenRFTuningCapacitor == null)) {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = ((string)(PlatenRFTuningCapacitor));
            }
            if ((PlatenRFTuningCapacitorPercent == null)) {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = ((string)(PlatenRFTuningCapacitorPercent));
            }
            if ((PlatenRFLoadCapacitor == null)) {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = ((string)(PlatenRFLoadCapacitor));
            }
            if ((PlatenRFLoadCapacitorPercent == null)) {
                this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = ((string)(PlatenRFLoadCapacitorPercent));
            }
            if ((PlatenRFPaddingCapacitor == null)) {
                this.Adapter.InsertCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = ((string)(PlatenRFPaddingCapacitor));
            }
            if ((PlatenRFControlMode == null)) {
                this.Adapter.InsertCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = ((string)(PlatenRFControlMode));
            }
            if ((HeliumPressure == null)) {
                this.Adapter.InsertCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = ((string)(HeliumPressure));
            }
            if ((HeliumpressurePercent == null)) {
                this.Adapter.InsertCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = ((string)(HeliumpressurePercent));
            }
            if ((HeliumFlowWarningLevel == null)) {
                this.Adapter.InsertCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = ((string)(HeliumFlowWarningLevel));
            }
            if ((HeliumFlowFaultLevel == null)) {
                this.Adapter.InsertCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = ((string)(HeliumFlowFaultLevel));
            }
            if ((GasLineConfig == null)) {
                this.Adapter.InsertCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[27].Value = ((string)(GasLineConfig));
            }
            if ((Argon == null)) {
                this.Adapter.InsertCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[28].Value = ((string)(Argon));
            }
            if ((ArgonPercent == null)) {
                this.Adapter.InsertCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[29].Value = ((string)(ArgonPercent));
            }
            if ((Nitrogen == null)) {
                this.Adapter.InsertCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[30].Value = ((string)(Nitrogen));
            }
            if ((NitrogenPercent == null)) {
                this.Adapter.InsertCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[31].Value = ((string)(NitrogenPercent));
            }
            if ((Oxygen == null)) {
                this.Adapter.InsertCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[32].Value = ((string)(Oxygen));
            }
            if ((OxygenPercent == null)) {
                this.Adapter.InsertCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[33].Value = ((string)(OxygenPercent));
            }
            if ((Oxygen1 == null)) {
                this.Adapter.InsertCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[34].Value = ((string)(Oxygen1));
            }
            if ((Oxygen1Percent == null)) {
                this.Adapter.InsertCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[35].Value = ((string)(Oxygen1Percent));
            }
            if ((CHF3 == null)) {
                this.Adapter.InsertCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[36].Value = ((string)(CHF3));
            }
            if ((CHF3Percent == null)) {
                this.Adapter.InsertCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[37].Value = ((string)(CHF3Percent));
            }
            if ((SF6 == null)) {
                this.Adapter.InsertCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[38].Value = ((string)(SF6));
            }
            if ((SF6Percent == null)) {
                this.Adapter.InsertCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[39].Value = ((string)(SF6Percent));
            }
            if ((BCI3 == null)) {
                this.Adapter.InsertCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[40].Value = ((string)(BCI3));
            }
            if ((BCI3Percent == null)) {
                this.Adapter.InsertCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[41].Value = ((string)(BCI3Percent));
            }
            if ((CI2 == null)) {
                this.Adapter.InsertCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[42].Value = ((string)(CI2));
            }
            if ((CI2Percent == null)) {
                this.Adapter.InsertCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[43].Value = ((string)(CI2Percent));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string recipeName, 
                    string StepName, 
                    string TimeDependentStep, 
                    string ProcessTime, 
                    string ProcessPressure, 
                    string ProcessPressurePercent, 
                    string APCSetpointPosition, 
                    string APCMode, 
                    string ActivePressureSensor, 
                    string SourcePower, 
                    string SourcePowerPercent, 
                    string SourceMUTuneCapacitor, 
                    string SourceMULoadCapacitor, 
                    string SourceRFControlMode, 
                    string PlatenPower, 
                    string PlatenPowerPercent, 
                    string PlatenCapacitorAdjust, 
                    string PlatenRFTuningCapacitor, 
                    string PlatenRFTuningCapacitorPercent, 
                    string PlatenRFLoadCapacitor, 
                    string PlatenRFLoadCapacitorPercent, 
                    string PlatenRFPaddingCapacitor, 
                    string PlatenRFControlMode, 
                    string HeliumPressure, 
                    string HeliumpressurePercent, 
                    string HeliumFlowWarningLevel, 
                    string HeliumFlowFaultLevel, 
                    string GasLineConfig, 
                    string Argon, 
                    string ArgonPercent, 
                    string Nitrogen, 
                    string NitrogenPercent, 
                    string Oxygen, 
                    string OxygenPercent, 
                    string Oxygen1, 
                    string Oxygen1Percent, 
                    string CHF3, 
                    string CHF3Percent, 
                    string SF6, 
                    string SF6Percent, 
                    string BCI3, 
                    string BCI3Percent, 
                    string CI2, 
                    string CI2Percent, 
                    int Original_Module_ICP_ID, 
                    string Original_recipeName, 
                    string Original_StepName, 
                    string Original_TimeDependentStep, 
                    string Original_ProcessTime, 
                    string Original_ProcessPressure, 
                    string Original_ProcessPressurePercent, 
                    string Original_APCSetpointPosition, 
                    string Original_APCMode, 
                    string Original_ActivePressureSensor, 
                    string Original_SourcePower, 
                    string Original_SourcePowerPercent, 
                    string Original_SourceMUTuneCapacitor, 
                    string Original_SourceMULoadCapacitor, 
                    string Original_SourceRFControlMode, 
                    string Original_PlatenPower, 
                    string Original_PlatenPowerPercent, 
                    string Original_PlatenCapacitorAdjust, 
                    string Original_PlatenRFTuningCapacitor, 
                    string Original_PlatenRFTuningCapacitorPercent, 
                    string Original_PlatenRFLoadCapacitor, 
                    string Original_PlatenRFLoadCapacitorPercent, 
                    string Original_PlatenRFPaddingCapacitor, 
                    string Original_PlatenRFControlMode, 
                    string Original_HeliumPressure, 
                    string Original_HeliumpressurePercent, 
                    string Original_HeliumFlowWarningLevel, 
                    string Original_HeliumFlowFaultLevel, 
                    string Original_GasLineConfig, 
                    string Original_Argon, 
                    string Original_ArgonPercent, 
                    string Original_Nitrogen, 
                    string Original_NitrogenPercent, 
                    string Original_Oxygen, 
                    string Original_OxygenPercent, 
                    string Original_Oxygen1, 
                    string Original_Oxygen1Percent, 
                    string Original_CHF3, 
                    string Original_CHF3Percent, 
                    string Original_SF6, 
                    string Original_SF6Percent, 
                    string Original_BCI3, 
                    string Original_BCI3Percent, 
                    string Original_CI2, 
                    string Original_CI2Percent, 
                    int Module_ICP_ID) {
            if ((recipeName == null)) {
                throw new global::System.ArgumentNullException("recipeName");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(recipeName));
            }
            if ((StepName == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(StepName));
            }
            if ((TimeDependentStep == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(TimeDependentStep));
            }
            if ((ProcessTime == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(ProcessTime));
            }
            if ((ProcessPressure == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(ProcessPressure));
            }
            if ((ProcessPressurePercent == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(ProcessPressurePercent));
            }
            if ((APCSetpointPosition == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(APCSetpointPosition));
            }
            if ((APCMode == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(APCMode));
            }
            if ((ActivePressureSensor == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(ActivePressureSensor));
            }
            if ((SourcePower == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(SourcePower));
            }
            if ((SourcePowerPercent == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(SourcePowerPercent));
            }
            if ((SourceMUTuneCapacitor == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(SourceMUTuneCapacitor));
            }
            if ((SourceMULoadCapacitor == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(SourceMULoadCapacitor));
            }
            if ((SourceRFControlMode == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(SourceRFControlMode));
            }
            if ((PlatenPower == null)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(PlatenPower));
            }
            if ((PlatenPowerPercent == null)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(PlatenPowerPercent));
            }
            if ((PlatenCapacitorAdjust == null)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(PlatenCapacitorAdjust));
            }
            if ((PlatenRFTuningCapacitor == null)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(PlatenRFTuningCapacitor));
            }
            if ((PlatenRFTuningCapacitorPercent == null)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(PlatenRFTuningCapacitorPercent));
            }
            if ((PlatenRFLoadCapacitor == null)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(PlatenRFLoadCapacitor));
            }
            if ((PlatenRFLoadCapacitorPercent == null)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(PlatenRFLoadCapacitorPercent));
            }
            if ((PlatenRFPaddingCapacitor == null)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(PlatenRFPaddingCapacitor));
            }
            if ((PlatenRFControlMode == null)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(PlatenRFControlMode));
            }
            if ((HeliumPressure == null)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(HeliumPressure));
            }
            if ((HeliumpressurePercent == null)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(HeliumpressurePercent));
            }
            if ((HeliumFlowWarningLevel == null)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(HeliumFlowWarningLevel));
            }
            if ((HeliumFlowFaultLevel == null)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(HeliumFlowFaultLevel));
            }
            if ((GasLineConfig == null)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((string)(GasLineConfig));
            }
            if ((Argon == null)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((string)(Argon));
            }
            if ((ArgonPercent == null)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((string)(ArgonPercent));
            }
            if ((Nitrogen == null)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((string)(Nitrogen));
            }
            if ((NitrogenPercent == null)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((string)(NitrogenPercent));
            }
            if ((Oxygen == null)) {
                this.Adapter.UpdateCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((string)(Oxygen));
            }
            if ((OxygenPercent == null)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((string)(OxygenPercent));
            }
            if ((Oxygen1 == null)) {
                this.Adapter.UpdateCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((string)(Oxygen1));
            }
            if ((Oxygen1Percent == null)) {
                this.Adapter.UpdateCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((string)(Oxygen1Percent));
            }
            if ((CHF3 == null)) {
                this.Adapter.UpdateCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((string)(CHF3));
            }
            if ((CHF3Percent == null)) {
                this.Adapter.UpdateCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((string)(CHF3Percent));
            }
            if ((SF6 == null)) {
                this.Adapter.UpdateCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((string)(SF6));
            }
            if ((SF6Percent == null)) {
                this.Adapter.UpdateCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((string)(SF6Percent));
            }
            if ((BCI3 == null)) {
                this.Adapter.UpdateCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((string)(BCI3));
            }
            if ((BCI3Percent == null)) {
                this.Adapter.UpdateCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((string)(BCI3Percent));
            }
            if ((CI2 == null)) {
                this.Adapter.UpdateCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((string)(CI2));
            }
            if ((CI2Percent == null)) {
                this.Adapter.UpdateCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((string)(CI2Percent));
            }
            this.Adapter.UpdateCommand.Parameters[44].Value = ((int)(Original_Module_ICP_ID));
            if ((Original_recipeName == null)) {
                throw new global::System.ArgumentNullException("Original_recipeName");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((string)(Original_recipeName));
            }
            if ((Original_StepName == null)) {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[47].Value = ((string)(Original_StepName));
            }
            if ((Original_TimeDependentStep == null)) {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[49].Value = ((string)(Original_TimeDependentStep));
            }
            if ((Original_ProcessTime == null)) {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[51].Value = ((string)(Original_ProcessTime));
            }
            if ((Original_ProcessPressure == null)) {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[53].Value = ((string)(Original_ProcessPressure));
            }
            if ((Original_ProcessPressurePercent == null)) {
                this.Adapter.UpdateCommand.Parameters[54].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[54].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[55].Value = ((string)(Original_ProcessPressurePercent));
            }
            if ((Original_APCSetpointPosition == null)) {
                this.Adapter.UpdateCommand.Parameters[56].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[57].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[56].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[57].Value = ((string)(Original_APCSetpointPosition));
            }
            if ((Original_APCMode == null)) {
                this.Adapter.UpdateCommand.Parameters[58].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[59].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[58].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[59].Value = ((string)(Original_APCMode));
            }
            if ((Original_ActivePressureSensor == null)) {
                this.Adapter.UpdateCommand.Parameters[60].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[61].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[60].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[61].Value = ((string)(Original_ActivePressureSensor));
            }
            if ((Original_SourcePower == null)) {
                this.Adapter.UpdateCommand.Parameters[62].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[63].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[62].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[63].Value = ((string)(Original_SourcePower));
            }
            if ((Original_SourcePowerPercent == null)) {
                this.Adapter.UpdateCommand.Parameters[64].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[65].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[64].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[65].Value = ((string)(Original_SourcePowerPercent));
            }
            if ((Original_SourceMUTuneCapacitor == null)) {
                this.Adapter.UpdateCommand.Parameters[66].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[67].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[66].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[67].Value = ((string)(Original_SourceMUTuneCapacitor));
            }
            if ((Original_SourceMULoadCapacitor == null)) {
                this.Adapter.UpdateCommand.Parameters[68].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[69].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[68].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[69].Value = ((string)(Original_SourceMULoadCapacitor));
            }
            if ((Original_SourceRFControlMode == null)) {
                this.Adapter.UpdateCommand.Parameters[70].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[71].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[70].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[71].Value = ((string)(Original_SourceRFControlMode));
            }
            if ((Original_PlatenPower == null)) {
                this.Adapter.UpdateCommand.Parameters[72].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[73].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[72].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[73].Value = ((string)(Original_PlatenPower));
            }
            if ((Original_PlatenPowerPercent == null)) {
                this.Adapter.UpdateCommand.Parameters[74].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[75].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[74].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[75].Value = ((string)(Original_PlatenPowerPercent));
            }
            if ((Original_PlatenCapacitorAdjust == null)) {
                this.Adapter.UpdateCommand.Parameters[76].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[77].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[76].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[77].Value = ((string)(Original_PlatenCapacitorAdjust));
            }
            if ((Original_PlatenRFTuningCapacitor == null)) {
                this.Adapter.UpdateCommand.Parameters[78].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[79].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[78].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[79].Value = ((string)(Original_PlatenRFTuningCapacitor));
            }
            if ((Original_PlatenRFTuningCapacitorPercent == null)) {
                this.Adapter.UpdateCommand.Parameters[80].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[81].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[80].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[81].Value = ((string)(Original_PlatenRFTuningCapacitorPercent));
            }
            if ((Original_PlatenRFLoadCapacitor == null)) {
                this.Adapter.UpdateCommand.Parameters[82].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[83].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[82].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[83].Value = ((string)(Original_PlatenRFLoadCapacitor));
            }
            if ((Original_PlatenRFLoadCapacitorPercent == null)) {
                this.Adapter.UpdateCommand.Parameters[84].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[85].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[84].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[85].Value = ((string)(Original_PlatenRFLoadCapacitorPercent));
            }
            if ((Original_PlatenRFPaddingCapacitor == null)) {
                this.Adapter.UpdateCommand.Parameters[86].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[87].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[86].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[87].Value = ((string)(Original_PlatenRFPaddingCapacitor));
            }
            if ((Original_PlatenRFControlMode == null)) {
                this.Adapter.UpdateCommand.Parameters[88].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[89].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[88].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[89].Value = ((string)(Original_PlatenRFControlMode));
            }
            if ((Original_HeliumPressure == null)) {
                this.Adapter.UpdateCommand.Parameters[90].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[91].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[90].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[91].Value = ((string)(Original_HeliumPressure));
            }
            if ((Original_HeliumpressurePercent == null)) {
                this.Adapter.UpdateCommand.Parameters[92].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[93].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[92].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[93].Value = ((string)(Original_HeliumpressurePercent));
            }
            if ((Original_HeliumFlowWarningLevel == null)) {
                this.Adapter.UpdateCommand.Parameters[94].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[95].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[94].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[95].Value = ((string)(Original_HeliumFlowWarningLevel));
            }
            if ((Original_HeliumFlowFaultLevel == null)) {
                this.Adapter.UpdateCommand.Parameters[96].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[97].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[96].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[97].Value = ((string)(Original_HeliumFlowFaultLevel));
            }
            if ((Original_GasLineConfig == null)) {
                this.Adapter.UpdateCommand.Parameters[98].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[99].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[98].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[99].Value = ((string)(Original_GasLineConfig));
            }
            if ((Original_Argon == null)) {
                this.Adapter.UpdateCommand.Parameters[100].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[101].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[100].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[101].Value = ((string)(Original_Argon));
            }
            if ((Original_ArgonPercent == null)) {
                this.Adapter.UpdateCommand.Parameters[102].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[103].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[102].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[103].Value = ((string)(Original_ArgonPercent));
            }
            if ((Original_Nitrogen == null)) {
                this.Adapter.UpdateCommand.Parameters[104].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[105].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[104].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[105].Value = ((string)(Original_Nitrogen));
            }
            if ((Original_NitrogenPercent == null)) {
                this.Adapter.UpdateCommand.Parameters[106].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[107].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[106].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[107].Value = ((string)(Original_NitrogenPercent));
            }
            if ((Original_Oxygen == null)) {
                this.Adapter.UpdateCommand.Parameters[108].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[109].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[108].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[109].Value = ((string)(Original_Oxygen));
            }
            if ((Original_OxygenPercent == null)) {
                this.Adapter.UpdateCommand.Parameters[110].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[111].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[110].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[111].Value = ((string)(Original_OxygenPercent));
            }
            if ((Original_Oxygen1 == null)) {
                this.Adapter.UpdateCommand.Parameters[112].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[113].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[112].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[113].Value = ((string)(Original_Oxygen1));
            }
            if ((Original_Oxygen1Percent == null)) {
                this.Adapter.UpdateCommand.Parameters[114].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[115].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[114].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[115].Value = ((string)(Original_Oxygen1Percent));
            }
            if ((Original_CHF3 == null)) {
                this.Adapter.UpdateCommand.Parameters[116].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[117].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[116].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[117].Value = ((string)(Original_CHF3));
            }
            if ((Original_CHF3Percent == null)) {
                this.Adapter.UpdateCommand.Parameters[118].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[119].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[118].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[119].Value = ((string)(Original_CHF3Percent));
            }
            if ((Original_SF6 == null)) {
                this.Adapter.UpdateCommand.Parameters[120].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[121].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[120].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[121].Value = ((string)(Original_SF6));
            }
            if ((Original_SF6Percent == null)) {
                this.Adapter.UpdateCommand.Parameters[122].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[123].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[122].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[123].Value = ((string)(Original_SF6Percent));
            }
            if ((Original_BCI3 == null)) {
                this.Adapter.UpdateCommand.Parameters[124].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[125].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[124].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[125].Value = ((string)(Original_BCI3));
            }
            if ((Original_BCI3Percent == null)) {
                this.Adapter.UpdateCommand.Parameters[126].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[127].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[126].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[127].Value = ((string)(Original_BCI3Percent));
            }
            if ((Original_CI2 == null)) {
                this.Adapter.UpdateCommand.Parameters[128].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[129].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[128].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[129].Value = ((string)(Original_CI2));
            }
            if ((Original_CI2Percent == null)) {
                this.Adapter.UpdateCommand.Parameters[130].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[131].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[130].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[131].Value = ((string)(Original_CI2Percent));
            }
            this.Adapter.UpdateCommand.Parameters[132].Value = ((int)(Module_ICP_ID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string recipeName, 
                    string StepName, 
                    string TimeDependentStep, 
                    string ProcessTime, 
                    string ProcessPressure, 
                    string ProcessPressurePercent, 
                    string APCSetpointPosition, 
                    string APCMode, 
                    string ActivePressureSensor, 
                    string SourcePower, 
                    string SourcePowerPercent, 
                    string SourceMUTuneCapacitor, 
                    string SourceMULoadCapacitor, 
                    string SourceRFControlMode, 
                    string PlatenPower, 
                    string PlatenPowerPercent, 
                    string PlatenCapacitorAdjust, 
                    string PlatenRFTuningCapacitor, 
                    string PlatenRFTuningCapacitorPercent, 
                    string PlatenRFLoadCapacitor, 
                    string PlatenRFLoadCapacitorPercent, 
                    string PlatenRFPaddingCapacitor, 
                    string PlatenRFControlMode, 
                    string HeliumPressure, 
                    string HeliumpressurePercent, 
                    string HeliumFlowWarningLevel, 
                    string HeliumFlowFaultLevel, 
                    string GasLineConfig, 
                    string Argon, 
                    string ArgonPercent, 
                    string Nitrogen, 
                    string NitrogenPercent, 
                    string Oxygen, 
                    string OxygenPercent, 
                    string Oxygen1, 
                    string Oxygen1Percent, 
                    string CHF3, 
                    string CHF3Percent, 
                    string SF6, 
                    string SF6Percent, 
                    string BCI3, 
                    string BCI3Percent, 
                    string CI2, 
                    string CI2Percent, 
                    int Original_Module_ICP_ID, 
                    string Original_recipeName, 
                    string Original_StepName, 
                    string Original_TimeDependentStep, 
                    string Original_ProcessTime, 
                    string Original_ProcessPressure, 
                    string Original_ProcessPressurePercent, 
                    string Original_APCSetpointPosition, 
                    string Original_APCMode, 
                    string Original_ActivePressureSensor, 
                    string Original_SourcePower, 
                    string Original_SourcePowerPercent, 
                    string Original_SourceMUTuneCapacitor, 
                    string Original_SourceMULoadCapacitor, 
                    string Original_SourceRFControlMode, 
                    string Original_PlatenPower, 
                    string Original_PlatenPowerPercent, 
                    string Original_PlatenCapacitorAdjust, 
                    string Original_PlatenRFTuningCapacitor, 
                    string Original_PlatenRFTuningCapacitorPercent, 
                    string Original_PlatenRFLoadCapacitor, 
                    string Original_PlatenRFLoadCapacitorPercent, 
                    string Original_PlatenRFPaddingCapacitor, 
                    string Original_PlatenRFControlMode, 
                    string Original_HeliumPressure, 
                    string Original_HeliumpressurePercent, 
                    string Original_HeliumFlowWarningLevel, 
                    string Original_HeliumFlowFaultLevel, 
                    string Original_GasLineConfig, 
                    string Original_Argon, 
                    string Original_ArgonPercent, 
                    string Original_Nitrogen, 
                    string Original_NitrogenPercent, 
                    string Original_Oxygen, 
                    string Original_OxygenPercent, 
                    string Original_Oxygen1, 
                    string Original_Oxygen1Percent, 
                    string Original_CHF3, 
                    string Original_CHF3Percent, 
                    string Original_SF6, 
                    string Original_SF6Percent, 
                    string Original_BCI3, 
                    string Original_BCI3Percent, 
                    string Original_CI2, 
                    string Original_CI2Percent) {
            return this.Update(recipeName, StepName, TimeDependentStep, ProcessTime, ProcessPressure, ProcessPressurePercent, APCSetpointPosition, APCMode, ActivePressureSensor, SourcePower, SourcePowerPercent, SourceMUTuneCapacitor, SourceMULoadCapacitor, SourceRFControlMode, PlatenPower, PlatenPowerPercent, PlatenCapacitorAdjust, PlatenRFTuningCapacitor, PlatenRFTuningCapacitorPercent, PlatenRFLoadCapacitor, PlatenRFLoadCapacitorPercent, PlatenRFPaddingCapacitor, PlatenRFControlMode, HeliumPressure, HeliumpressurePercent, HeliumFlowWarningLevel, HeliumFlowFaultLevel, GasLineConfig, Argon, ArgonPercent, Nitrogen, NitrogenPercent, Oxygen, OxygenPercent, Oxygen1, Oxygen1Percent, CHF3, CHF3Percent, SF6, SF6Percent, BCI3, BCI3Percent, CI2, CI2Percent, Original_Module_ICP_ID, Original_recipeName, Original_StepName, Original_TimeDependentStep, Original_ProcessTime, Original_ProcessPressure, Original_ProcessPressurePercent, Original_APCSetpointPosition, Original_APCMode, Original_ActivePressureSensor, Original_SourcePower, Original_SourcePowerPercent, Original_SourceMUTuneCapacitor, Original_SourceMULoadCapacitor, Original_SourceRFControlMode, Original_PlatenPower, Original_PlatenPowerPercent, Original_PlatenCapacitorAdjust, Original_PlatenRFTuningCapacitor, Original_PlatenRFTuningCapacitorPercent, Original_PlatenRFLoadCapacitor, Original_PlatenRFLoadCapacitorPercent, Original_PlatenRFPaddingCapacitor, Original_PlatenRFControlMode, Original_HeliumPressure, Original_HeliumpressurePercent, Original_HeliumFlowWarningLevel, Original_HeliumFlowFaultLevel, Original_GasLineConfig, Original_Argon, Original_ArgonPercent, Original_Nitrogen, Original_NitrogenPercent, Original_Oxygen, Original_OxygenPercent, Original_Oxygen1, Original_Oxygen1Percent, Original_CHF3, Original_CHF3Percent, Original_SF6, Original_SF6Percent, Original_BCI3, Original_BCI3Percent, Original_CI2, Original_CI2Percent, Original_Module_ICP_ID);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class recipeTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public recipeTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "recipe";
            tableMapping.ColumnMappings.Add("recipeID", "recipeID");
            tableMapping.ColumnMappings.Add("recipeName", "recipeName");
            tableMapping.ColumnMappings.Add("recipeDate", "recipeDate");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[recipe] WHERE (([recipeID] = @Original_recipeID) AND ([recipeN" +
                "ame] = @Original_recipeName) AND ((@IsNull_recipeDate = 1 AND [recipeDate] IS NU" +
                "LL) OR ([recipeDate] = @Original_recipeDate)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_recipeID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "recipeID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_recipeName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "recipeName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_recipeDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "recipeDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_recipeDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "recipeDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[recipe] ([recipeName], [recipeDate]) VALUES (@recipeName, @rec" +
                "ipeDate);\r\nSELECT recipeID, recipeName, recipeDate FROM recipe WHERE (recipeID =" +
                " SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@recipeName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "recipeName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@recipeDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "recipeDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[recipe] SET [recipeName] = @recipeName, [recipeDate] = @recipeDate WHERE (([recipeID] = @Original_recipeID) AND ([recipeName] = @Original_recipeName) AND ((@IsNull_recipeDate = 1 AND [recipeDate] IS NULL) OR ([recipeDate] = @Original_recipeDate)));
SELECT recipeID, recipeName, recipeDate FROM recipe WHERE (recipeID = @recipeID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@recipeName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "recipeName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@recipeDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "recipeDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_recipeID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "recipeID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_recipeName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "recipeName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_recipeDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "recipeDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_recipeDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "recipeDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@recipeID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "recipeID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::SimulatorApplication.Properties.Settings.Default.RecipeTypeConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT recipeID, recipeName, recipeDate FROM dbo.recipe";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(RecipeTypeDataSet.recipeDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual RecipeTypeDataSet.recipeDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            RecipeTypeDataSet.recipeDataTable dataTable = new RecipeTypeDataSet.recipeDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(RecipeTypeDataSet.recipeDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(RecipeTypeDataSet dataSet) {
            return this.Adapter.Update(dataSet, "recipe");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_recipeID, string Original_recipeName, global::System.Nullable<global::System.DateTime> Original_recipeDate) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_recipeID));
            if ((Original_recipeName == null)) {
                throw new global::System.ArgumentNullException("Original_recipeName");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_recipeName));
            }
            if ((Original_recipeDate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[3].Value = ((System.DateTime)(Original_recipeDate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string recipeName, global::System.Nullable<global::System.DateTime> recipeDate) {
            if ((recipeName == null)) {
                throw new global::System.ArgumentNullException("recipeName");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(recipeName));
            }
            if ((recipeDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((System.DateTime)(recipeDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string recipeName, global::System.Nullable<global::System.DateTime> recipeDate, int Original_recipeID, string Original_recipeName, global::System.Nullable<global::System.DateTime> Original_recipeDate, int recipeID) {
            if ((recipeName == null)) {
                throw new global::System.ArgumentNullException("recipeName");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(recipeName));
            }
            if ((recipeDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((System.DateTime)(recipeDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(Original_recipeID));
            if ((Original_recipeName == null)) {
                throw new global::System.ArgumentNullException("Original_recipeName");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Original_recipeName));
            }
            if ((Original_recipeDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[5].Value = ((System.DateTime)(Original_recipeDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(recipeID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string recipeName, global::System.Nullable<global::System.DateTime> recipeDate, int Original_recipeID, string Original_recipeName, global::System.Nullable<global::System.DateTime> Original_recipeDate) {
            return this.Update(recipeName, recipeDate, Original_recipeID, Original_recipeName, Original_recipeDate, Original_recipeID);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class TemCassetteWaferTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public TemCassetteWaferTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "TemCassetteWafer";
            tableMapping.ColumnMappings.Add("TemCassetteWaferID", "TemCassetteWaferID");
            tableMapping.ColumnMappings.Add("CassetteRecipeName", "CassetteRecipeName");
            tableMapping.ColumnMappings.Add("NoOfWafers", "NoOfWafers");
            tableMapping.ColumnMappings.Add("WaferRecipe", "WaferRecipe");
            tableMapping.ColumnMappings.Add("ConditioningRecipe", "ConditioningRecipe");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[TemCassetteWafer] WHERE (([TemCassetteWaferID] = @Original_TemCassetteWaferID) AND ((@IsNull_CassetteRecipeName = 1 AND [CassetteRecipeName] IS NULL) OR ([CassetteRecipeName] = @Original_CassetteRecipeName)) AND ((@IsNull_NoOfWafers = 1 AND [NoOfWafers] IS NULL) OR ([NoOfWafers] = @Original_NoOfWafers)) AND ((@IsNull_WaferRecipe = 1 AND [WaferRecipe] IS NULL) OR ([WaferRecipe] = @Original_WaferRecipe)) AND ((@IsNull_ConditioningRecipe = 1 AND [ConditioningRecipe] IS NULL) OR ([ConditioningRecipe] = @Original_ConditioningRecipe)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TemCassetteWaferID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TemCassetteWaferID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CassetteRecipeName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CassetteRecipeName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CassetteRecipeName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CassetteRecipeName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_NoOfWafers", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NoOfWafers", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NoOfWafers", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NoOfWafers", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_WaferRecipe", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WaferRecipe", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_WaferRecipe", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WaferRecipe", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ConditioningRecipe", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConditioningRecipe", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ConditioningRecipe", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConditioningRecipe", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[TemCassetteWafer] ([CassetteRecipeName], [NoOfWafers], [WaferRecipe], [ConditioningRecipe]) VALUES (@CassetteRecipeName, @NoOfWafers, @WaferRecipe, @ConditioningRecipe);
SELECT TemCassetteWaferID, CassetteRecipeName, NoOfWafers, WaferRecipe, ConditioningRecipe FROM TemCassetteWafer WHERE (TemCassetteWaferID = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CassetteRecipeName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CassetteRecipeName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NoOfWafers", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NoOfWafers", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WaferRecipe", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WaferRecipe", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ConditioningRecipe", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConditioningRecipe", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[TemCassetteWafer] SET [CassetteRecipeName] = @CassetteRecipeName, [NoOfWafers] = @NoOfWafers, [WaferRecipe] = @WaferRecipe, [ConditioningRecipe] = @ConditioningRecipe WHERE (([TemCassetteWaferID] = @Original_TemCassetteWaferID) AND ((@IsNull_CassetteRecipeName = 1 AND [CassetteRecipeName] IS NULL) OR ([CassetteRecipeName] = @Original_CassetteRecipeName)) AND ((@IsNull_NoOfWafers = 1 AND [NoOfWafers] IS NULL) OR ([NoOfWafers] = @Original_NoOfWafers)) AND ((@IsNull_WaferRecipe = 1 AND [WaferRecipe] IS NULL) OR ([WaferRecipe] = @Original_WaferRecipe)) AND ((@IsNull_ConditioningRecipe = 1 AND [ConditioningRecipe] IS NULL) OR ([ConditioningRecipe] = @Original_ConditioningRecipe)));
SELECT TemCassetteWaferID, CassetteRecipeName, NoOfWafers, WaferRecipe, ConditioningRecipe FROM TemCassetteWafer WHERE (TemCassetteWaferID = @TemCassetteWaferID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CassetteRecipeName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CassetteRecipeName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NoOfWafers", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NoOfWafers", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WaferRecipe", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WaferRecipe", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ConditioningRecipe", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConditioningRecipe", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TemCassetteWaferID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TemCassetteWaferID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CassetteRecipeName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CassetteRecipeName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CassetteRecipeName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CassetteRecipeName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_NoOfWafers", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NoOfWafers", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NoOfWafers", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NoOfWafers", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_WaferRecipe", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WaferRecipe", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_WaferRecipe", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WaferRecipe", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ConditioningRecipe", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConditioningRecipe", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ConditioningRecipe", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConditioningRecipe", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TemCassetteWaferID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "TemCassetteWaferID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::SimulatorApplication.Properties.Settings.Default.RecipeTypeConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT TemCassetteWaferID, CassetteRecipeName, NoOfWafers, WaferRecipe, Condition" +
                "ingRecipe FROM dbo.TemCassetteWafer";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(RecipeTypeDataSet.TemCassetteWaferDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual RecipeTypeDataSet.TemCassetteWaferDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            RecipeTypeDataSet.TemCassetteWaferDataTable dataTable = new RecipeTypeDataSet.TemCassetteWaferDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(RecipeTypeDataSet.TemCassetteWaferDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(RecipeTypeDataSet dataSet) {
            return this.Adapter.Update(dataSet, "TemCassetteWafer");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_TemCassetteWaferID, string Original_CassetteRecipeName, string Original_NoOfWafers, string Original_WaferRecipe, string Original_ConditioningRecipe) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_TemCassetteWaferID));
            if ((Original_CassetteRecipeName == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_CassetteRecipeName));
            }
            if ((Original_NoOfWafers == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_NoOfWafers));
            }
            if ((Original_WaferRecipe == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_WaferRecipe));
            }
            if ((Original_ConditioningRecipe == null)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_ConditioningRecipe));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string CassetteRecipeName, string NoOfWafers, string WaferRecipe, string ConditioningRecipe) {
            if ((CassetteRecipeName == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(CassetteRecipeName));
            }
            if ((NoOfWafers == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(NoOfWafers));
            }
            if ((WaferRecipe == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(WaferRecipe));
            }
            if ((ConditioningRecipe == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(ConditioningRecipe));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string CassetteRecipeName, string NoOfWafers, string WaferRecipe, string ConditioningRecipe, int Original_TemCassetteWaferID, string Original_CassetteRecipeName, string Original_NoOfWafers, string Original_WaferRecipe, string Original_ConditioningRecipe, int TemCassetteWaferID) {
            if ((CassetteRecipeName == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(CassetteRecipeName));
            }
            if ((NoOfWafers == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(NoOfWafers));
            }
            if ((WaferRecipe == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(WaferRecipe));
            }
            if ((ConditioningRecipe == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(ConditioningRecipe));
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(Original_TemCassetteWaferID));
            if ((Original_CassetteRecipeName == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_CassetteRecipeName));
            }
            if ((Original_NoOfWafers == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_NoOfWafers));
            }
            if ((Original_WaferRecipe == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Original_WaferRecipe));
            }
            if ((Original_ConditioningRecipe == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_ConditioningRecipe));
            }
            this.Adapter.UpdateCommand.Parameters[13].Value = ((int)(TemCassetteWaferID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string CassetteRecipeName, string NoOfWafers, string WaferRecipe, string ConditioningRecipe, int Original_TemCassetteWaferID, string Original_CassetteRecipeName, string Original_NoOfWafers, string Original_WaferRecipe, string Original_ConditioningRecipe) {
            return this.Update(CassetteRecipeName, NoOfWafers, WaferRecipe, ConditioningRecipe, Original_TemCassetteWaferID, Original_CassetteRecipeName, Original_NoOfWafers, Original_WaferRecipe, Original_ConditioningRecipe, Original_TemCassetteWaferID);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class TemNewrecipeTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public TemNewrecipeTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "TemNewrecipe";
            tableMapping.ColumnMappings.Add("TemRecipeID", "TemRecipeID");
            tableMapping.ColumnMappings.Add("recipeName", "recipeName");
            tableMapping.ColumnMappings.Add("StepName", "StepName");
            tableMapping.ColumnMappings.Add("TimeDependentStep", "TimeDependentStep");
            tableMapping.ColumnMappings.Add("ProcessTime", "ProcessTime");
            tableMapping.ColumnMappings.Add("ProcessPressure", "ProcessPressure");
            tableMapping.ColumnMappings.Add("ProcessPressurePercent", "ProcessPressurePercent");
            tableMapping.ColumnMappings.Add("APCSetpointPosition", "APCSetpointPosition");
            tableMapping.ColumnMappings.Add("APCMode", "APCMode");
            tableMapping.ColumnMappings.Add("ActivePressureSensor", "ActivePressureSensor");
            tableMapping.ColumnMappings.Add("SourcePower", "SourcePower");
            tableMapping.ColumnMappings.Add("SourcePowerPercent", "SourcePowerPercent");
            tableMapping.ColumnMappings.Add("SourceMUTuneCapacitor", "SourceMUTuneCapacitor");
            tableMapping.ColumnMappings.Add("SourceMULoadCapacitor", "SourceMULoadCapacitor");
            tableMapping.ColumnMappings.Add("SourceRFControlMode", "SourceRFControlMode");
            tableMapping.ColumnMappings.Add("PlatenPower", "PlatenPower");
            tableMapping.ColumnMappings.Add("PlatenPowerPercent", "PlatenPowerPercent");
            tableMapping.ColumnMappings.Add("PlatenCapacitorAdjust", "PlatenCapacitorAdjust");
            tableMapping.ColumnMappings.Add("PlatenRFTuningCapacitor", "PlatenRFTuningCapacitor");
            tableMapping.ColumnMappings.Add("PlatenRFTuningCapacitorPercent", "PlatenRFTuningCapacitorPercent");
            tableMapping.ColumnMappings.Add("PlatenRFLoadCapacitor", "PlatenRFLoadCapacitor");
            tableMapping.ColumnMappings.Add("PlatenRFLoadCapacitorPercent", "PlatenRFLoadCapacitorPercent");
            tableMapping.ColumnMappings.Add("PlatenRFPaddingCapacitor", "PlatenRFPaddingCapacitor");
            tableMapping.ColumnMappings.Add("PlatenRFControlMode", "PlatenRFControlMode");
            tableMapping.ColumnMappings.Add("HeliumPressure", "HeliumPressure");
            tableMapping.ColumnMappings.Add("HeliumPressurePercent", "HeliumPressurePercent");
            tableMapping.ColumnMappings.Add("HeliumFlowWarningLevel", "HeliumFlowWarningLevel");
            tableMapping.ColumnMappings.Add("HeliumFlowFaultLevel", "HeliumFlowFaultLevel");
            tableMapping.ColumnMappings.Add("GasLineConfig", "GasLineConfig");
            tableMapping.ColumnMappings.Add("Argon", "Argon");
            tableMapping.ColumnMappings.Add("ArgonPercent", "ArgonPercent");
            tableMapping.ColumnMappings.Add("Nitrogen", "Nitrogen");
            tableMapping.ColumnMappings.Add("NitrogenPercent", "NitrogenPercent");
            tableMapping.ColumnMappings.Add("Oxygen", "Oxygen");
            tableMapping.ColumnMappings.Add("OxygenPercent", "OxygenPercent");
            tableMapping.ColumnMappings.Add("Oxygen1", "Oxygen1");
            tableMapping.ColumnMappings.Add("Oxygen1Percent", "Oxygen1Percent");
            tableMapping.ColumnMappings.Add("CHF3", "CHF3");
            tableMapping.ColumnMappings.Add("CHF3Percent", "CHF3Percent");
            tableMapping.ColumnMappings.Add("SF6", "SF6");
            tableMapping.ColumnMappings.Add("SF6Percent", "SF6Percent");
            tableMapping.ColumnMappings.Add("BCI3", "BCI3");
            tableMapping.ColumnMappings.Add("BCI3Percent", "BCI3Percent");
            tableMapping.ColumnMappings.Add("CI2", "CI2");
            tableMapping.ColumnMappings.Add("CI2Percent", "CI2Percent");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[TemNewrecipe] ([TemRecipeID], [recipeName], [StepName], [TimeD" +
                "ependentStep], [ProcessTime], [ProcessPressure], [ProcessPressurePercent], [APCS" +
                "etpointPosition], [APCMode], [ActivePressureSensor], [SourcePower], [SourcePower" +
                "Percent], [SourceMUTuneCapacitor], [SourceMULoadCapacitor], [SourceRFControlMode" +
                "], [PlatenPower], [PlatenPowerPercent], [PlatenCapacitorAdjust], [PlatenRFTuning" +
                "Capacitor], [PlatenRFTuningCapacitorPercent], [PlatenRFLoadCapacitor], [PlatenRF" +
                "LoadCapacitorPercent], [PlatenRFPaddingCapacitor], [PlatenRFControlMode], [Heliu" +
                "mPressure], [HeliumPressurePercent], [HeliumFlowWarningLevel], [HeliumFlowFaultL" +
                "evel], [GasLineConfig], [Argon], [ArgonPercent], [Nitrogen], [NitrogenPercent], " +
                "[Oxygen], [OxygenPercent], [Oxygen1], [Oxygen1Percent], [CHF3], [CHF3Percent], [" +
                "SF6], [SF6Percent], [BCI3], [BCI3Percent], [CI2], [CI2Percent]) VALUES (@TemReci" +
                "peID, @recipeName, @StepName, @TimeDependentStep, @ProcessTime, @ProcessPressure" +
                ", @ProcessPressurePercent, @APCSetpointPosition, @APCMode, @ActivePressureSensor" +
                ", @SourcePower, @SourcePowerPercent, @SourceMUTuneCapacitor, @SourceMULoadCapaci" +
                "tor, @SourceRFControlMode, @PlatenPower, @PlatenPowerPercent, @PlatenCapacitorAd" +
                "just, @PlatenRFTuningCapacitor, @PlatenRFTuningCapacitorPercent, @PlatenRFLoadCa" +
                "pacitor, @PlatenRFLoadCapacitorPercent, @PlatenRFPaddingCapacitor, @PlatenRFCont" +
                "rolMode, @HeliumPressure, @HeliumPressurePercent, @HeliumFlowWarningLevel, @Heli" +
                "umFlowFaultLevel, @GasLineConfig, @Argon, @ArgonPercent, @Nitrogen, @NitrogenPer" +
                "cent, @Oxygen, @OxygenPercent, @Oxygen1, @Oxygen1Percent, @CHF3, @CHF3Percent, @" +
                "SF6, @SF6Percent, @BCI3, @BCI3Percent, @CI2, @CI2Percent)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TemRecipeID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TemRecipeID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@recipeName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "recipeName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StepName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StepName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TimeDependentStep", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TimeDependentStep", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProcessTime", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProcessTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProcessPressure", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProcessPressure", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProcessPressurePercent", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProcessPressurePercent", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@APCSetpointPosition", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "APCSetpointPosition", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@APCMode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "APCMode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ActivePressureSensor", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ActivePressureSensor", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SourcePower", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SourcePower", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SourcePowerPercent", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SourcePowerPercent", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SourceMUTuneCapacitor", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SourceMUTuneCapacitor", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SourceMULoadCapacitor", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SourceMULoadCapacitor", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SourceRFControlMode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SourceRFControlMode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PlatenPower", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PlatenPower", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PlatenPowerPercent", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PlatenPowerPercent", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PlatenCapacitorAdjust", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PlatenCapacitorAdjust", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PlatenRFTuningCapacitor", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PlatenRFTuningCapacitor", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PlatenRFTuningCapacitorPercent", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PlatenRFTuningCapacitorPercent", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PlatenRFLoadCapacitor", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PlatenRFLoadCapacitor", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PlatenRFLoadCapacitorPercent", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PlatenRFLoadCapacitorPercent", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PlatenRFPaddingCapacitor", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PlatenRFPaddingCapacitor", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PlatenRFControlMode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PlatenRFControlMode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HeliumPressure", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HeliumPressure", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HeliumPressurePercent", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HeliumPressurePercent", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HeliumFlowWarningLevel", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HeliumFlowWarningLevel", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HeliumFlowFaultLevel", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HeliumFlowFaultLevel", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GasLineConfig", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GasLineConfig", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Argon", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Argon", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ArgonPercent", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ArgonPercent", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Nitrogen", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nitrogen", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NitrogenPercent", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NitrogenPercent", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Oxygen", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Oxygen", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OxygenPercent", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OxygenPercent", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Oxygen1", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Oxygen1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Oxygen1Percent", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Oxygen1Percent", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CHF3", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CHF3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CHF3Percent", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CHF3Percent", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SF6", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SF6", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SF6Percent", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SF6Percent", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BCI3", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BCI3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BCI3Percent", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BCI3Percent", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CI2", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CI2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CI2Percent", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CI2Percent", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::SimulatorApplication.Properties.Settings.Default.RecipeTypeConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT TemRecipeID, recipeName, StepName, TimeDependentStep, ProcessTime, ProcessPressure, ProcessPressurePercent, APCSetpointPosition, APCMode, ActivePressureSensor, SourcePower, SourcePowerPercent, SourceMUTuneCapacitor, SourceMULoadCapacitor, SourceRFControlMode, PlatenPower, PlatenPowerPercent, PlatenCapacitorAdjust, PlatenRFTuningCapacitor, PlatenRFTuningCapacitorPercent, PlatenRFLoadCapacitor, PlatenRFLoadCapacitorPercent, PlatenRFPaddingCapacitor, PlatenRFControlMode, HeliumPressure, HeliumPressurePercent, HeliumFlowWarningLevel, HeliumFlowFaultLevel, GasLineConfig, Argon, ArgonPercent, Nitrogen, NitrogenPercent, Oxygen, OxygenPercent, Oxygen1, Oxygen1Percent, CHF3, CHF3Percent, SF6, SF6Percent, BCI3, BCI3Percent, CI2, CI2Percent FROM dbo.TemNewrecipe";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(RecipeTypeDataSet.TemNewrecipeDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual RecipeTypeDataSet.TemNewrecipeDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            RecipeTypeDataSet.TemNewrecipeDataTable dataTable = new RecipeTypeDataSet.TemNewrecipeDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(RecipeTypeDataSet.TemNewrecipeDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(RecipeTypeDataSet dataSet) {
            return this.Adapter.Update(dataSet, "TemNewrecipe");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    global::System.Nullable<int> TemRecipeID, 
                    string recipeName, 
                    string StepName, 
                    string TimeDependentStep, 
                    string ProcessTime, 
                    string ProcessPressure, 
                    string ProcessPressurePercent, 
                    string APCSetpointPosition, 
                    string APCMode, 
                    string ActivePressureSensor, 
                    string SourcePower, 
                    string SourcePowerPercent, 
                    string SourceMUTuneCapacitor, 
                    string SourceMULoadCapacitor, 
                    string SourceRFControlMode, 
                    string PlatenPower, 
                    string PlatenPowerPercent, 
                    string PlatenCapacitorAdjust, 
                    string PlatenRFTuningCapacitor, 
                    string PlatenRFTuningCapacitorPercent, 
                    string PlatenRFLoadCapacitor, 
                    string PlatenRFLoadCapacitorPercent, 
                    string PlatenRFPaddingCapacitor, 
                    string PlatenRFControlMode, 
                    string HeliumPressure, 
                    string HeliumPressurePercent, 
                    string HeliumFlowWarningLevel, 
                    string HeliumFlowFaultLevel, 
                    string GasLineConfig, 
                    string Argon, 
                    string ArgonPercent, 
                    string Nitrogen, 
                    string NitrogenPercent, 
                    string Oxygen, 
                    string OxygenPercent, 
                    string Oxygen1, 
                    string Oxygen1Percent, 
                    string CHF3, 
                    string CHF3Percent, 
                    string SF6, 
                    string SF6Percent, 
                    string BCI3, 
                    string BCI3Percent, 
                    string CI2, 
                    string CI2Percent) {
            if ((TemRecipeID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[0].Value = ((int)(TemRecipeID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((recipeName == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(recipeName));
            }
            if ((StepName == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(StepName));
            }
            if ((TimeDependentStep == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(TimeDependentStep));
            }
            if ((ProcessTime == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(ProcessTime));
            }
            if ((ProcessPressure == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(ProcessPressure));
            }
            if ((ProcessPressurePercent == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(ProcessPressurePercent));
            }
            if ((APCSetpointPosition == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(APCSetpointPosition));
            }
            if ((APCMode == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(APCMode));
            }
            if ((ActivePressureSensor == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(ActivePressureSensor));
            }
            if ((SourcePower == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(SourcePower));
            }
            if ((SourcePowerPercent == null)) {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(SourcePowerPercent));
            }
            if ((SourceMUTuneCapacitor == null)) {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(SourceMUTuneCapacitor));
            }
            if ((SourceMULoadCapacitor == null)) {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(SourceMULoadCapacitor));
            }
            if ((SourceRFControlMode == null)) {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(SourceRFControlMode));
            }
            if ((PlatenPower == null)) {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = ((string)(PlatenPower));
            }
            if ((PlatenPowerPercent == null)) {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = ((string)(PlatenPowerPercent));
            }
            if ((PlatenCapacitorAdjust == null)) {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = ((string)(PlatenCapacitorAdjust));
            }
            if ((PlatenRFTuningCapacitor == null)) {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = ((string)(PlatenRFTuningCapacitor));
            }
            if ((PlatenRFTuningCapacitorPercent == null)) {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = ((string)(PlatenRFTuningCapacitorPercent));
            }
            if ((PlatenRFLoadCapacitor == null)) {
                this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = ((string)(PlatenRFLoadCapacitor));
            }
            if ((PlatenRFLoadCapacitorPercent == null)) {
                this.Adapter.InsertCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = ((string)(PlatenRFLoadCapacitorPercent));
            }
            if ((PlatenRFPaddingCapacitor == null)) {
                this.Adapter.InsertCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = ((string)(PlatenRFPaddingCapacitor));
            }
            if ((PlatenRFControlMode == null)) {
                this.Adapter.InsertCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = ((string)(PlatenRFControlMode));
            }
            if ((HeliumPressure == null)) {
                this.Adapter.InsertCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = ((string)(HeliumPressure));
            }
            if ((HeliumPressurePercent == null)) {
                this.Adapter.InsertCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = ((string)(HeliumPressurePercent));
            }
            if ((HeliumFlowWarningLevel == null)) {
                this.Adapter.InsertCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = ((string)(HeliumFlowWarningLevel));
            }
            if ((HeliumFlowFaultLevel == null)) {
                this.Adapter.InsertCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[27].Value = ((string)(HeliumFlowFaultLevel));
            }
            if ((GasLineConfig == null)) {
                this.Adapter.InsertCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[28].Value = ((string)(GasLineConfig));
            }
            if ((Argon == null)) {
                this.Adapter.InsertCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[29].Value = ((string)(Argon));
            }
            if ((ArgonPercent == null)) {
                this.Adapter.InsertCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[30].Value = ((string)(ArgonPercent));
            }
            if ((Nitrogen == null)) {
                this.Adapter.InsertCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[31].Value = ((string)(Nitrogen));
            }
            if ((NitrogenPercent == null)) {
                this.Adapter.InsertCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[32].Value = ((string)(NitrogenPercent));
            }
            if ((Oxygen == null)) {
                this.Adapter.InsertCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[33].Value = ((string)(Oxygen));
            }
            if ((OxygenPercent == null)) {
                this.Adapter.InsertCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[34].Value = ((string)(OxygenPercent));
            }
            if ((Oxygen1 == null)) {
                this.Adapter.InsertCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[35].Value = ((string)(Oxygen1));
            }
            if ((Oxygen1Percent == null)) {
                this.Adapter.InsertCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[36].Value = ((string)(Oxygen1Percent));
            }
            if ((CHF3 == null)) {
                this.Adapter.InsertCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[37].Value = ((string)(CHF3));
            }
            if ((CHF3Percent == null)) {
                this.Adapter.InsertCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[38].Value = ((string)(CHF3Percent));
            }
            if ((SF6 == null)) {
                this.Adapter.InsertCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[39].Value = ((string)(SF6));
            }
            if ((SF6Percent == null)) {
                this.Adapter.InsertCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[40].Value = ((string)(SF6Percent));
            }
            if ((BCI3 == null)) {
                this.Adapter.InsertCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[41].Value = ((string)(BCI3));
            }
            if ((BCI3Percent == null)) {
                this.Adapter.InsertCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[42].Value = ((string)(BCI3Percent));
            }
            if ((CI2 == null)) {
                this.Adapter.InsertCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[43].Value = ((string)(CI2));
            }
            if ((CI2Percent == null)) {
                this.Adapter.InsertCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[44].Value = ((string)(CI2Percent));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private CassetteRecipeTableAdapter _cassetteRecipeTableAdapter;
        
        private CassetteWaferTableAdapter _cassetteWaferTableAdapter;
        
        private NewrecipeTableAdapter _newrecipeTableAdapter;
        
        private recipeTableAdapter _recipeTableAdapter;
        
        private TemCassetteWaferTableAdapter _temCassetteWaferTableAdapter;
        
        private TemNewrecipeTableAdapter _temNewrecipeTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public CassetteRecipeTableAdapter CassetteRecipeTableAdapter {
            get {
                return this._cassetteRecipeTableAdapter;
            }
            set {
                this._cassetteRecipeTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public CassetteWaferTableAdapter CassetteWaferTableAdapter {
            get {
                return this._cassetteWaferTableAdapter;
            }
            set {
                this._cassetteWaferTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public NewrecipeTableAdapter NewrecipeTableAdapter {
            get {
                return this._newrecipeTableAdapter;
            }
            set {
                this._newrecipeTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public recipeTableAdapter recipeTableAdapter {
            get {
                return this._recipeTableAdapter;
            }
            set {
                this._recipeTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public TemCassetteWaferTableAdapter TemCassetteWaferTableAdapter {
            get {
                return this._temCassetteWaferTableAdapter;
            }
            set {
                this._temCassetteWaferTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public TemNewrecipeTableAdapter TemNewrecipeTableAdapter {
            get {
                return this._temNewrecipeTableAdapter;
            }
            set {
                this._temNewrecipeTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._cassetteRecipeTableAdapter != null) 
                            && (this._cassetteRecipeTableAdapter.Connection != null))) {
                    return this._cassetteRecipeTableAdapter.Connection;
                }
                if (((this._cassetteWaferTableAdapter != null) 
                            && (this._cassetteWaferTableAdapter.Connection != null))) {
                    return this._cassetteWaferTableAdapter.Connection;
                }
                if (((this._newrecipeTableAdapter != null) 
                            && (this._newrecipeTableAdapter.Connection != null))) {
                    return this._newrecipeTableAdapter.Connection;
                }
                if (((this._recipeTableAdapter != null) 
                            && (this._recipeTableAdapter.Connection != null))) {
                    return this._recipeTableAdapter.Connection;
                }
                if (((this._temCassetteWaferTableAdapter != null) 
                            && (this._temCassetteWaferTableAdapter.Connection != null))) {
                    return this._temCassetteWaferTableAdapter.Connection;
                }
                if (((this._temNewrecipeTableAdapter != null) 
                            && (this._temNewrecipeTableAdapter.Connection != null))) {
                    return this._temNewrecipeTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._cassetteRecipeTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._cassetteWaferTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._newrecipeTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._recipeTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._temCassetteWaferTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._temNewrecipeTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateUpdatedRows(RecipeTypeDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._cassetteRecipeTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.CassetteRecipe.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._cassetteRecipeTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._cassetteWaferTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.CassetteWafer.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._cassetteWaferTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._newrecipeTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Newrecipe.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._newrecipeTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._recipeTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.recipe.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._recipeTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._temCassetteWaferTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.TemCassetteWafer.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._temCassetteWaferTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._temNewrecipeTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.TemNewrecipe.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._temNewrecipeTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateInsertedRows(RecipeTypeDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._cassetteRecipeTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.CassetteRecipe.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._cassetteRecipeTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._cassetteWaferTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.CassetteWafer.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._cassetteWaferTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._newrecipeTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Newrecipe.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._newrecipeTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._recipeTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.recipe.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._recipeTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._temCassetteWaferTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.TemCassetteWafer.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._temCassetteWaferTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._temNewrecipeTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.TemNewrecipe.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._temNewrecipeTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateDeletedRows(RecipeTypeDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._temNewrecipeTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.TemNewrecipe.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._temNewrecipeTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._temCassetteWaferTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.TemCassetteWafer.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._temCassetteWaferTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._recipeTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.recipe.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._recipeTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._newrecipeTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Newrecipe.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._newrecipeTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._cassetteWaferTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.CassetteWafer.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._cassetteWaferTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._cassetteRecipeTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.CassetteRecipe.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._cassetteRecipeTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual int UpdateAll(RecipeTypeDataSet dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._cassetteRecipeTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._cassetteRecipeTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("所有以 TableAdapterManager 管理的 TableAdapters 必須使用相同的連接字串。");
            }
            if (((this._cassetteWaferTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._cassetteWaferTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("所有以 TableAdapterManager 管理的 TableAdapters 必須使用相同的連接字串。");
            }
            if (((this._newrecipeTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._newrecipeTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("所有以 TableAdapterManager 管理的 TableAdapters 必須使用相同的連接字串。");
            }
            if (((this._recipeTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._recipeTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("所有以 TableAdapterManager 管理的 TableAdapters 必須使用相同的連接字串。");
            }
            if (((this._temCassetteWaferTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._temCassetteWaferTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("所有以 TableAdapterManager 管理的 TableAdapters 必須使用相同的連接字串。");
            }
            if (((this._temNewrecipeTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._temNewrecipeTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("所有以 TableAdapterManager 管理的 TableAdapters 必須使用相同的連接字串。");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager 未包含連接資訊。請將每個 TableAdapterManager 的 TableAdapter 屬性設成有效的 Table" +
                        "Adapter 執行個體。");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("無法開始異動。目前的資料連接不支援異動或是目前的狀態不允許異動開始。");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._cassetteRecipeTableAdapter != null)) {
                    revertConnections.Add(this._cassetteRecipeTableAdapter, this._cassetteRecipeTableAdapter.Connection);
                    this._cassetteRecipeTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._cassetteRecipeTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._cassetteRecipeTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._cassetteRecipeTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._cassetteRecipeTableAdapter.Adapter);
                    }
                }
                if ((this._cassetteWaferTableAdapter != null)) {
                    revertConnections.Add(this._cassetteWaferTableAdapter, this._cassetteWaferTableAdapter.Connection);
                    this._cassetteWaferTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._cassetteWaferTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._cassetteWaferTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._cassetteWaferTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._cassetteWaferTableAdapter.Adapter);
                    }
                }
                if ((this._newrecipeTableAdapter != null)) {
                    revertConnections.Add(this._newrecipeTableAdapter, this._newrecipeTableAdapter.Connection);
                    this._newrecipeTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._newrecipeTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._newrecipeTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._newrecipeTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._newrecipeTableAdapter.Adapter);
                    }
                }
                if ((this._recipeTableAdapter != null)) {
                    revertConnections.Add(this._recipeTableAdapter, this._recipeTableAdapter.Connection);
                    this._recipeTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._recipeTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._recipeTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._recipeTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._recipeTableAdapter.Adapter);
                    }
                }
                if ((this._temCassetteWaferTableAdapter != null)) {
                    revertConnections.Add(this._temCassetteWaferTableAdapter, this._temCassetteWaferTableAdapter.Connection);
                    this._temCassetteWaferTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._temCassetteWaferTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._temCassetteWaferTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._temCassetteWaferTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._temCassetteWaferTableAdapter.Adapter);
                    }
                }
                if ((this._temNewrecipeTableAdapter != null)) {
                    revertConnections.Add(this._temNewrecipeTableAdapter, this._temNewrecipeTableAdapter.Connection);
                    this._temNewrecipeTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._temNewrecipeTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._temNewrecipeTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._temNewrecipeTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._temNewrecipeTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._cassetteRecipeTableAdapter != null)) {
                    this._cassetteRecipeTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._cassetteRecipeTableAdapter]));
                    this._cassetteRecipeTableAdapter.Transaction = null;
                }
                if ((this._cassetteWaferTableAdapter != null)) {
                    this._cassetteWaferTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._cassetteWaferTableAdapter]));
                    this._cassetteWaferTableAdapter.Transaction = null;
                }
                if ((this._newrecipeTableAdapter != null)) {
                    this._newrecipeTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._newrecipeTableAdapter]));
                    this._newrecipeTableAdapter.Transaction = null;
                }
                if ((this._recipeTableAdapter != null)) {
                    this._recipeTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._recipeTableAdapter]));
                    this._recipeTableAdapter.Transaction = null;
                }
                if ((this._temCassetteWaferTableAdapter != null)) {
                    this._temCassetteWaferTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._temCassetteWaferTableAdapter]));
                    this._temCassetteWaferTableAdapter.Transaction = null;
                }
                if ((this._temNewrecipeTableAdapter != null)) {
                    this._temNewrecipeTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._temNewrecipeTableAdapter]));
                    this._temNewrecipeTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591